/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides, BigNumberish } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { CommitmentPoolMain, CommitmentPoolMainInterface } from '../CommitmentPoolMain';

const _abi = [
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_treeHeight',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '_rootHistoryLength',
        type: 'uint32',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
    ],
    name: 'CommitmentIncluded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'rollupFee',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'leafIndex',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'bytes',
        name: 'encryptedNote',
        type: 'bytes',
      },
    ],
    name: 'CommitmentQueued',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'rootHash',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'serialNumber',
        type: 'uint256',
      },
    ],
    name: 'CommitmentSpent',
    type: 'event',
  },
  {
    inputs: [],
    name: 'FIELD_SIZE',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_actor',
        type: 'address',
      },
    ],
    name: 'addEnqueueWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_roller',
        type: 'address',
      },
    ],
    name: 'addRollupWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetType',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_newOperator',
        type: 'address',
      },
    ],
    name: 'changeOperator',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'commitmentIncludedCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'commitmentQueue',
    outputs: [
      {
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'rollupFee',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'commitmentQueueSize',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'currentRoot',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'currentRootIndex',
    outputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
    ],
    name: 'disableRollupVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_numInputs',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '_numOutputs',
        type: 'uint32',
      },
    ],
    name: 'disableTransactVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
      {
        internalType: 'address',
        name: '_rollupVerifier',
        type: 'address',
      },
    ],
    name: 'enableRollupVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_numInputs',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '_numOutputs',
        type: 'uint32',
      },
      {
        internalType: 'address',
        name: '_transactVerifier',
        type: 'address',
      },
    ],
    name: 'enableTransactVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
        ],
        internalType: 'struct ICommitmentPool.CommitmentRequest',
        name: '_request',
        type: 'tuple',
      },
      {
        internalType: 'address',
        name: '_executor',
        type: 'address',
      },
    ],
    name: 'enqueue',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'enqueueWhitelist',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'historicCommitments',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'root',
        type: 'uint256',
      },
    ],
    name: 'isKnownRoot',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isRollupWhitelistDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isVerifierUpdateDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'minRollupFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'operator',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_actor',
        type: 'address',
      },
    ],
    name: 'removeEnqueueWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_roller',
        type: 'address',
      },
    ],
    name: 'removeRollupWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'a',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256[2]',
                    name: 'X',
                    type: 'uint256[2]',
                  },
                  {
                    internalType: 'uint256[2]',
                    name: 'Y',
                    type: 'uint256[2]',
                  },
                ],
                internalType: 'struct IVerifier.G2Point',
                name: 'b',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'c',
                type: 'tuple',
              },
            ],
            internalType: 'struct IVerifier.Proof',
            name: 'proof',
            type: 'tuple',
          },
          {
            internalType: 'uint32',
            name: 'rollupSize',
            type: 'uint32',
          },
          {
            internalType: 'uint256',
            name: 'newRoot',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'leafHash',
            type: 'uint256',
          },
        ],
        internalType: 'struct ICommitmentPool.RollupRequest',
        name: '_request',
        type: 'tuple',
      },
    ],
    name: 'rollup',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    name: 'rollupVerifiers',
    outputs: [
      {
        internalType: 'contract IVerifier',
        name: 'verifier',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'enabled',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'rollupWhitelist',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    name: 'rootHistory',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'rootHistoryLength',
    outputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sanctionsContract',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_minRollupFee',
        type: 'uint256',
      },
    ],
    name: 'setMinRollupFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'spentSerialNumbers',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'toggleRollupWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_check',
        type: 'bool',
      },
    ],
    name: 'toggleSanctionCheck',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'toggleVerifierUpdate',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'a',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256[2]',
                    name: 'X',
                    type: 'uint256[2]',
                  },
                  {
                    internalType: 'uint256[2]',
                    name: 'Y',
                    type: 'uint256[2]',
                  },
                ],
                internalType: 'struct IVerifier.G2Point',
                name: 'b',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'c',
                type: 'tuple',
              },
            ],
            internalType: 'struct IVerifier.Proof',
            name: 'proof',
            type: 'tuple',
          },
          {
            internalType: 'uint256',
            name: 'rootHash',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'serialNumbers',
            type: 'uint256[]',
          },
          {
            internalType: 'uint256[]',
            name: 'sigHashes',
            type: 'uint256[]',
          },
          {
            internalType: 'bytes32',
            name: 'sigPk',
            type: 'bytes32',
          },
          {
            internalType: 'uint256',
            name: 'publicAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'relayerFeeAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'outCommitments',
            type: 'uint256[]',
          },
          {
            internalType: 'uint256[]',
            name: 'outRollupFees',
            type: 'uint256[]',
          },
          {
            internalType: 'address',
            name: 'publicRecipient',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'relayerAddress',
            type: 'address',
          },
          {
            internalType: 'bytes[]',
            name: 'outEncryptedNotes',
            type: 'bytes[]',
          },
        ],
        internalType: 'struct ICommitmentPool.TransactRequest',
        name: '_request',
        type: 'tuple',
      },
      {
        internalType: 'bytes',
        name: '_signature',
        type: 'bytes',
      },
    ],
    name: 'transact',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    name: 'transactVerifiers',
    outputs: [
      {
        internalType: 'contract IVerifier',
        name: 'verifier',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'enabled',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'treeCapacity',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_sanction',
        type: 'address',
      },
    ],
    name: 'updateSanctionContractAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    stateMutability: 'payable',
    type: 'receive',
  },
];

const _bytecode =
  '0x60a0604052600180546001600160a81b0319167340c57923924b5c5c5455c48d93317139addac8fb17905560006007819055600855600b805463ffffffff191690553480156200004e57600080fd5b50604051620044c0380380620044c083398101604081905262000071916200089f565b6001600055818163ffffffff8116620000e45760405162461bcd60e51b815260206004820152602b60248201527f5f726f6f74486973746f72794c656e6774682073686f756c642062652067726560448201526a061746572207468616e20360ac1b606482015260840160405180910390fd5b600b8054600160201b600160e01b03191633680100000000000000000263ffffffff60201b19161764010000000063ffffffff848116919091029190911790915562000134908316600262000920565b60805262000142826200016a565b600a819055600b5463ffffffff166000908152600960205260409020555062000a0192505050565b600063ffffffff82166200019f57507f09f658457775074ff4c842032a5ec2f1134c32784cca59d594caac8c503b7923919050565b8163ffffffff1660011415620001d657507f1a77569b79cb7c2eaf9368de9e3b1efc0a606561e5ab299c2337340f3cdd576a919050565b8163ffffffff16600214156200020d57507f111bd0002b1e3b8f1978c932b5ccb2fab87fdb0acab2ddb266f9a346dcb11ee1919050565b8163ffffffff16600314156200024457507f040868ea2a363e05d7ae44280f69b49e429ab096ca2844efe91f8d6b3dad57dd919050565b8163ffffffff16600414156200027a57507ef8f605c92c8502c8fe83be1b83b24e3f67312a388f30cbadb5dee8974137c3919050565b8163ffffffff1660051415620002b157507f1adc043c99adbc0c86a60a36db0f661e2dd96f36ede322f954386d8935a0c5d9919050565b8163ffffffff1660061415620002e857507f2a1fedfa71da723ac3e9b35cef752fa1b647b2b737a23e91241cb7bdc419e3f4919050565b8163ffffffff16600714156200031f57507f17fe1974543c4c4b228e1292f7e3200d31435fc910ee5a8c5cafd329cc4b256b919050565b8163ffffffff16600814156200035657507f0e84a586eb63a0eec0f1fe5785022441f0e29e4ae859c7ce1f5fc88a42ad2e6b919050565b8163ffffffff16600914156200038d57507f193deb901f6eeb032e02e093280db17e373d4ff52bafda9215b46bb9b0a86f3e919050565b8163ffffffff16600a1415620003c457507f1d10ca7b985697cb519565a5006c3f44b020b2edab9b7422ed15dc34532f9406919050565b8163ffffffff16600b1415620003fb57507f1dc200763555467a4e583e00badfdc1fb4d3d3f8f1cc81f31fd2f8b387776081919050565b8163ffffffff16600c14156200043257507f203dd11fdba0ed13b20ca2d6952f3feb7461836a03512e0cccce8467b320b2f6919050565b8163ffffffff16600d14156200046957507f0591af64e64a3e69caf23eee2bdea90885343a49f547ee9464e95d8d6267e4f7919050565b8163ffffffff16600e1415620004a057507f2af572f1077a32f46dc8e307d43c0fa6753b400b2107325976b8df7380545ff6919050565b8163ffffffff16600f1415620004d757507f043227ae4b70b1aacd04e35e6aaed7b56d91220c31e97aaf52e12a6a56984e52919050565b8163ffffffff16601014156200050e57507f2976f1f6a91d83d4c528dad69ece6d3d91934b0e5657e915b360c8c4c2fb54e6919050565b8163ffffffff16601114156200054457507ee5c251c9e093658be0cd1b0df55b6f70f3d09146c1c8b4212a4ddcde700dbc919050565b8163ffffffff16601214156200057b57507f0267cbbc1bc2f1c3e3073d2ee60df8cc0bfef39fe3cee735c9ad5c8ad30064d2919050565b8163ffffffff1660131415620005b257507f2f356057bc56f67dbf159a0e8935022acd5e982dce9f4071adc43e4d57ce27e6919050565b8163ffffffff1660141415620005e957507f273db68f52f12a9d8022ae524050064e42d4d1661c9bcce958acf89b5e8b127b919050565b8163ffffffff16601514156200062057507f0496a18ad4cca81b7c98ceb197439ad925e0f7f62d69dfa42cf9574be77fe30f919050565b8163ffffffff16601614156200065757507f24f89a3f943d421b2f3a554b65459f42b820ac09d6fd9d693df5f8ba732ab596919050565b8163ffffffff16601714156200068e57507f1b55bfd751c6807df36876cdce68034ab43210be2bc8afa8043c7f428604e7a7919050565b8163ffffffff1660181415620006c557507f16d6595a398cf20f2489b90e958166f1e19c537c0c46e9b8ea5462391ee8f143919050565b8163ffffffff1660191415620006fc57507f0f01447ef8f621592474b678ed2fc404ebaf22a6fce15364bb4152a88c113613919050565b8163ffffffff16601a14156200073357507f026c2dffee48bacbc9d21cf90aa7c6e525ab01db6966a9e7e53b3d3f4d1f5a4d919050565b8163ffffffff16601b14156200076a57507f234fe90732795745b2c504c791242a2bb193baa1cbeab57db9324b6bb9134817919050565b8163ffffffff16601c1415620007a157507f23a8e0a7e60981c52ebb498c260d5bef4d7c65145d17128996a77c33a3262a7e919050565b8163ffffffff16601d1415620007d857507f24ee69d2565210c7027ff6fc2657ed029278bc79f41077fe3281ea5d5d8e80f9919050565b8163ffffffff16601e14156200080f57507f1de402fa32463bb2917b733aeef0197a49cacacd1fe860c3acc8cd3b65a30a68919050565b8163ffffffff16601f14156200084657507f1d3015a0f6a7b3f754171d0540628107e50e25debceb16e0e33ae4205501896d919050565b8163ffffffff16602014156200087d57507f264a260539342647256819046bae05bed903a8d19b3c90439d67317d5d881322919050565b506000919050565b805163ffffffff811681146200089a57600080fd5b919050565b60008060408385031215620008b357600080fd5b620008be8362000885565b9150620008ce6020840162000885565b90509250929050565b600181815b8085111562000918578160001904821115620008fc57620008fc620009eb565b808516156200090a57918102915b93841c9390800290620008dc565b509250929050565b60006200092e838362000935565b9392505050565b6000826200094657506001620009e5565b816200095557506000620009e5565b81600181146200096e5760028114620009795762000999565b6001915050620009e5565b60ff8411156200098d576200098d620009eb565b50506001821b620009e5565b5060208310610133831016604e8410600b8410161715620009be575081810a620009e5565b620009ca8383620008d7565b8060001904821115620009e157620009e1620009eb565b0290505b92915050565b634e487b7160e01b600052601160045260246000fd5b608051613a9562000a2b600039600081816107fc0152818161138d0152611dad0152613a956000f3fe6080604052600436106102a45760003560e01c80639937e1471161016e578063c1935539116100cb578063de1559211161007f578063e4ed567111610064578063e4ed567114610854578063fdab463d1461089d578063ffa89b88146108b357600080fd5b8063de1559211461081e578063deeff7cd1461083457600080fd5b8063c3098df9116100b0578063c3098df91461077b578063c9a6999c146107a8578063c9abeb64146107ea57600080fd5b8063c1935539146106ef578063c259e2e61461075b57600080fd5b8063a9b1d29611610122578063b4318ead11610107578063b4318ead1461067a578063ba9bd07d1461069a578063bc22be14146106bf57600080fd5b8063a9b1d29614610644578063ac967fad1461066457600080fd5b80639b0a6fea116101535780639b0a6fea146105e45780639cc6b35414610604578063a6232a931461062457600080fd5b80639937e147146105ae5780639ae39ca3146105c457600080fd5b80634eb069f71161021c5780637a9fff08116101d05780637fa4b09c116101b55780637fa4b09c1461052c578063806ae3621461054c57806390eeb02b1461057c57600080fd5b80637a9fff08146104dc5780637cbf0ff61461050c57600080fd5b8063570ca73511610201578063570ca735146104655780637013ea961461048c57806378d60cd7146104bc57600080fd5b80634eb069f71461040357806353af27d51461042d57600080fd5b806314a7737d116102735780633fae882e116102585780633fae882e146103725780633fe3347a14610385578063414a37ba146103c157600080fd5b806314a7737d1461033257806334c33e831461035257600080fd5b806302d498f1146102b057806303db9874146102d257806305335faa146102f257806306394c9b1461031257600080fd5b366102ab57005b600080fd5b3480156102bc57600080fd5b506102d06102cb366004613287565b6108d2565b005b3480156102de57600080fd5b506102d06102ed366004613287565b61094d565b3480156102fe57600080fd5b506102d061030d3660046132a2565b6109c0565b34801561031e57600080fd5b506102d061032d366004613287565b610a2c565b34801561033e57600080fd5b506102d061034d366004613383565b610abf565b34801561035e57600080fd5b506102d061036d366004613287565b611112565b6102d06103803660046133f7565b61119e565b34801561039157600080fd5b50604080518082018252600481526336b0b4b760e11b602082015290516103b8919061370b565b60405180910390f35b3480156103cd57600080fd5b506103f57f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000181565b6040519081526020016103b8565b34801561040f57600080fd5b50600f5461041d9060ff1681565b60405190151581526020016103b8565b34801561043957600080fd5b5060015461044d906001600160a01b031681565b6040516001600160a01b0390911681526020016103b8565b34801561047157600080fd5b50600b5461044d90600160401b90046001600160a01b031681565b34801561049857600080fd5b5061041d6104a7366004613287565b600d6020526000908152604090205460ff1681565b3480156104c857600080fd5b5061041d6104d73660046132dc565b611cf6565b3480156104e857600080fd5b5061041d6104f7366004613287565b600e6020526000908152604090205460ff1681565b34801561051857600080fd5b506102d0610527366004613586565b611edf565b34801561053857600080fd5b506102d061054736600461360e565b611f86565b34801561055857600080fd5b5061041d610567366004613586565b60046020526000908152604090205460ff1681565b34801561058857600080fd5b50600b546105999063ffffffff1681565b60405163ffffffff90911681526020016103b8565b3480156105ba57600080fd5b506103f5600c5481565b3480156105d057600080fd5b506102d06105df3660046132a2565b6120fd565b3480156105f057600080fd5b506102d06105ff36600461359f565b612162565b34801561061057600080fd5b506102d061061f366004613287565b6122a7565b34801561063057600080fd5b5061041d61063f366004613586565b61231a565b34801561065057600080fd5b506102d061065f366004613287565b612396565b34801561067057600080fd5b506103f560075481565b34801561068657600080fd5b506102d06106953660046132a2565b61240c565b3480156106a657600080fd5b50600b5461059990640100000000900463ffffffff1681565b3480156106cb57600080fd5b5061041d6106da366004613586565b60056020526000908152604090205460ff1681565b3480156106fb57600080fd5b5061073c61070a3660046135e4565b60026020908152600092835260408084209091529082529020546001600160a01b03811690600160a01b900460ff1682565b604080516001600160a01b0390931683529015156020830152016103b8565b34801561076757600080fd5b506102d06107763660046135e4565b61247c565b34801561078757600080fd5b506103f561079636600461359f565b60096020526000908152604090205481565b3480156107b457600080fd5b5061073c6107c336600461359f565b6003602052600090815260409020546001600160a01b03811690600160a01b900460ff1682565b3480156107f657600080fd5b506103f57f000000000000000000000000000000000000000000000000000000000000000081565b34801561082a57600080fd5b506103f560085481565b34801561084057600080fd5b506102d061084f3660046135ba565b6125e7565b34801561086057600080fd5b5061088861086f366004613586565b6006602052600090815260409020805460019091015482565b604080519283526020830191909152016103b8565b3480156108a957600080fd5b506103f5600a5481565b3480156108bf57600080fd5b50600f5461041d90610100900460ff1681565b600b54600160401b90046001600160a01b031633146109295760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b60448201526064015b60405180910390fd5b6001600160a01b03166000908152600d60205260409020805460ff19166001179055565b600b54600160401b90046001600160a01b0316331461099f5760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b6044820152606401610920565b6001600160a01b03166000908152600e60205260409020805460ff19169055565b600b54600160401b90046001600160a01b03163314610a125760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b6044820152606401610920565b600f80549115156101000261ff0019909216919091179055565b600b54600160401b90046001600160a01b03163314610a7e5760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b6044820152606401610920565b600b80546001600160a01b03909216600160401b027fffffffff0000000000000000000000000000000000000000ffffffffffffffff909216919091179055565b600f54610100900460ff1680610ae45750336000908152600d602052604090205460ff165b610b305760405162461bcd60e51b815260206004820152601860248201527f4f6e6c792077686974656c697374656420726f6c6c65722e00000000000000006044820152606401610920565b610b3d816040015161231a565b15610b8a5760405162461bcd60e51b815260206004820152601560248201527f6e6577526f6f74206973206475706c69636174656400000000000000000000006044820152606401610920565b6000816020015163ffffffff16118015610bb05750600754816020015163ffffffff1611155b8015610bdd575060208181015163ffffffff16600090815260039091526040902054600160a01b900460ff165b610c1e5760405162461bcd60e51b8152602060048201526012602482015271696e76616c696420726f6c6c757053697a6560701b6044820152606401610920565b806020015163ffffffff16600854610c3691906139ac565b15610c8f5760405162461bcd60e51b815260206004820152602360248201527f696e76616c696420726f6c6c757053697a652061742063757272656e7420737460448201526261746560e81b6064820152608401610920565b6000610ca1600854836020015161274c565b90506000826020015163ffffffff1667ffffffffffffffff811115610cc857610cc8613a3b565b604051908082528060200260200182016040528015610cf1578160200160208202803683370190505b506008549091506000905b846020015163ffffffff16600854610d1491906138a7565b811015610e3e57600081815260066020526040902054610d765760405162461bcd60e51b815260206004820152601260248201527f696e646578206f7574206f6620626f756e6400000000000000000000000000006044820152606401610920565b60008181526006602052604090205460085481908590610d96908561390a565b81518110610da657610da6613a25565b602002602001018181525050600660008381526020019081526020016000206001015483610dd491906138a7565b6000838152600660205260408120818155600190810191909155600754919450610dfd9161390a565b60075560405181907ffe6b097b46a78e08506a3143b6337c2505ba77df76fe05c3663a987395d6341390600090a25080610e368161396d565b915050610cfc565b5060007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000183604051602001610e7391906136a6565b6040516020818303038152906040528051906020012060001c610e9691906139ac565b905080856060015114610eeb5760405162461bcd60e51b815260206004820152601060248201527f696e76616c6964206c65616648617368000000000000000000000000000000006044820152606401610920565b60408051600480825260a0820190925260009160208201608080368337019050509050600a5481600081518110610f2457610f24613a25565b602002602001018181525050856040015181600181518110610f4857610f48613a25565b602002602001018181525050856060015181600281518110610f6c57610f6c613a25565b6020026020010181815250508481600381518110610f8c57610f8c613a25565b6020908102919091018101919091528681015163ffffffff16600090815260039091526040808220548851915163c941764760e01b81526001600160a01b039091169163c941764791610fe49190869060040161371e565b602060405180830381600087803b158015610ffe57600080fd5b505af1158015611012573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061103691906132bf565b9050806110855760405162461bcd60e51b815260206004820152600d60248201527f696e76616c69642070726f6f66000000000000000000000000000000000000006044820152606401610920565b61108e84612784565b866020015163ffffffff166008546110a691906138a7565b6008556040870151600a55600b5463ffffffff64010000000082048116916110d0911660016138bf565b6110da91906139c0565b600b805463ffffffff191663ffffffff9290921691821790556040978801516000918252600960205297902096909655505050505050565b600b54600160401b90046001600160a01b031633146111645760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b6044820152606401610920565b600180547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b600260005414156111f15760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610920565b600260008181556040848101515160e08601515163ffffffff808316855260209586528385209082168552909452912054909190600160a01b900460ff1661127b5760405162461bcd60e51b815260206004820152601260248201527f696e76616c696420692f6f206c656e67746800000000000000000000000000006044820152606401610920565b8163ffffffff16846060015151146112d55760405162461bcd60e51b815260206004820152601860248201527f696e76616c696420736967486173686573206c656e67746800000000000000006044820152606401610920565b8063ffffffff1684610100015151146113305760405162461bcd60e51b815260206004820152601c60248201527f696e76616c6964206f7574526f6c6c757046656573206c656e677468000000006044820152606401610920565b8063ffffffff16846101600151511461138b5760405162461bcd60e51b815260206004820181905260248201527f696e76616c6964206f7574456e637279707465644e6f746573206c656e6774686044820152606401610920565b7f00000000000000000000000000000000000000000000000000000000000000008163ffffffff166007546008546113c391906138a7565b6113cd91906138a7565b111561140a5760405162461bcd60e51b815260206004820152600c60248201526b1d1c9959481a5cc8199d5b1b60a21b6044820152606401610920565b61141884610120015161281c565b156114655760405162461bcd60e51b815260206004820152601260248201527f73616e6374696f6e6564206164647265737300000000000000000000000000006044820152606401610920565b6000611470856128bf565b9050600061147e82866129d4565b60808701519091506001600160a01b038216146114dd5760405162461bcd60e51b815260206004820152601160248201527f696e76616c6964207369676e61747572650000000000000000000000000000006044820152606401610920565b60006114ea8460026138de565b6114f58660026138de565b6115009060046138bf565b61150a91906138bf565b63ffffffff1667ffffffffffffffff81111561152857611528613a3b565b604051908082528060200260200182016040528015611551578160200160208202803683370190505b509050611561876020015161231a565b6115ad5760405162461bcd60e51b815260206004820152600c60248201527f696e76616c696420726f6f7400000000000000000000000000000000000000006044820152606401610920565b8660200151816000815181106115c5576115c5613a25565b60200260200101818152505060005b8563ffffffff168163ffffffff161015611737576005600089604001518363ffffffff168151811061160857611608613a25565b60209081029190910181015182528101919091526040016000205460ff16156116735760405162461bcd60e51b815260206004820152601760248201527f746865206e6f746520686173206265656e207370656e740000000000000000006044820152606401610920565b87604001518163ffffffff168151811061168f5761168f613a25565b6020026020010151828260016116a591906138bf565b63ffffffff16815181106116bb576116bb613a25565b60200260200101818152505087606001518163ffffffff16815181106116e3576116e3613a25565b602002602001015182878360016116fa91906138bf565b61170491906138bf565b63ffffffff168151811061171a5761171a613a25565b60209081029190910101528061172f81613988565b9150506115d4565b506080870151816117498760026138de565b6117549060016138bf565b63ffffffff168151811061176a5761176a613a25565b602090810291909101015260a0870151816117868760026138de565b6117919060026138bf565b63ffffffff16815181106117a7576117a7613a25565b602090810291909101015260c0870151816117c38760026138de565b6117ce9060036138bf565b63ffffffff16815181106117e4576117e4613a25565b60200260200101818152505060005b8463ffffffff168163ffffffff1610156119f957600460008960e001518363ffffffff168151811061182757611827613a25565b60209081029190910181015182528101919091526040016000205460ff16156118925760405162461bcd60e51b815260206004820152601460248201527f6475706c696361746520636f6d6d69746d656e740000000000000000000000006044820152606401610920565b600c548861010001518263ffffffff16815181106118b2576118b2613a25565b602002602001015110156119085760405162461bcd60e51b815260206004820152601260248201527f726f6c6c75702066656520746f6f206c6f7700000000000000000000000000006044820152606401610920565b8760e001518163ffffffff168151811061192457611924613a25565b6020026020010151828288600261193b91906138de565b6119469060046138bf565b61195091906138bf565b63ffffffff168151811061196657611966613a25565b6020026020010181815250508761010001518163ffffffff168151811061198f5761198f613a25565b60200260200101518282878960026119a791906138de565b6119b191906138bf565b6119bc9060046138bf565b6119c691906138bf565b63ffffffff16815181106119dc576119dc613a25565b6020908102919091010152806119f181613988565b9150506117f3565b5063ffffffff80861660009081526002602090815260408083209388168352929052818120548951925163c941764760e01b815291926001600160a01b039091169163c941764791611a4f91869060040161371e565b602060405180830381600087803b158015611a6957600080fd5b505af1158015611a7d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aa191906132bf565b905080611af05760405162461bcd60e51b815260206004820152601660248201527f696e76616c6964207472616e736163742070726f6f66000000000000000000006044820152606401610920565b60005b8663ffffffff168163ffffffff161015611bbd576001600560008b604001518463ffffffff1681518110611b2957611b29613a25565b6020026020010151815260200190815260200160002060006101000a81548160ff02191690831515021790555088604001518163ffffffff1681518110611b7257611b72613a25565b602002602001015189602001517f3c2372ab6130817bd6b8fc6dbaecae947e84201b49535d358debaa6c34c23ecf60405160405180910390a380611bb581613988565b915050611af3565b5060005b8563ffffffff168163ffffffff161015611cac576001600460008b60e001518463ffffffff1681518110611bf757611bf7613a25565b6020026020010151815260200190815260200160002060006101000a81548160ff021916908315150217905550611c9a8960e001518263ffffffff1681518110611c4357611c43613a25565b60200260200101518a61010001518363ffffffff1681518110611c6857611c68613a25565b60200260200101518b61016001518463ffffffff1681518110611c8d57611c8d613a25565b60200260200101516129f8565b80611ca481613988565b915050611bc1565b5060a088015115611cca57611cca8861012001518960a00151612a93565b60c088015115611ce757611ce78861014001518960c00151612a93565b50506001600055505050505050565b336000908152600e602052604081205460ff16611d555760405162461bcd60e51b815260206004820152601860248201527f4f6e6c792077686974656c69737465642073656e6465722e00000000000000006044820152606401610920565b600c5483606001511015611dab5760405162461bcd60e51b815260206004820152601260248201527f726f6c6c75702066656520746f6f2066657700000000000000000000000000006044820152606401610920565b7f0000000000000000000000000000000000000000000000000000000000000000600754600854611ddc91906138a7565b10611e185760405162461bcd60e51b815260206004820152600c60248201526b1d1c9959481a5cc8199d5b1b60a21b6044820152606401610920565b60208084015160009081526004909152604090205460ff1615611e875760405162461bcd60e51b815260206004820152602160248201527f74686520636f6d6d69746d656e7420686173206265656e207375626d697474656044820152601960fa1b6064820152608401610920565b60208084018051600090815260049092526040909120805460ff191660011790555160608401516080850151611ebe9291906129f8565b604083015115611ed657611ed6828460400151612b89565b50600192915050565b600b54600160401b90046001600160a01b03163314611f315760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b6044820152606401610920565b60008111611f815760405162461bcd60e51b815260206004820152601560248201527f696e76616c6964205f6d696e526f6c6c757046656500000000000000000000006044820152606401610920565b600c55565b600b54600160401b90046001600160a01b03163314611fd85760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b6044820152606401610920565b600f5460ff16156120375760405162461bcd60e51b8152602060048201526024808201527f566572696669657220757064617465732068617665206265656e2064697361626044820152633632b21760e11b6064820152608401610920565b60008363ffffffff161161208d5760405162461bcd60e51b815260206004820152601460248201527f6e756d496e707574732073686f756c64203e20300000000000000000000000006044820152606401610920565b6040805180820182526001600160a01b0392831681526001602080830191825263ffffffff9687166000908152600282528481209690971687529490945293209251835492511515600160a01b0274ffffffffffffffffffffffffffffffffffffffffff19909316911617179055565b600b54600160401b90046001600160a01b0316331461214f5760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b6044820152606401610920565b600f805460ff1916911515919091179055565b600b54600160401b90046001600160a01b031633146121b45760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b6044820152606401610920565b60008163ffffffff16116121ff5760405162461bcd60e51b8152602060048201526012602482015271696e76616c696420726f6c6c757053697a6560701b6044820152606401610920565b600f5460ff161561225e5760405162461bcd60e51b8152602060048201526024808201527f566572696669657220757064617465732068617665206265656e2064697361626044820152633632b21760e11b6064820152608401610920565b63ffffffff8116600090815260036020526040902054600160a01b900460ff16156122a45763ffffffff81166000908152600360205260409020805460ff60a01b191690555b50565b600b54600160401b90046001600160a01b031633146122f95760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b6044820152606401610920565b6001600160a01b03166000908152600d60205260409020805460ff19169055565b600b5460009063ffffffff165b63ffffffff811660009081526009602052604090205483141561234d5750600192915050565b63ffffffff811661236b5750600b54640100000000900463ffffffff165b806123758161394d565b600b5490925063ffffffff8084169116141590506123275750600092915050565b600b54600160401b90046001600160a01b031633146123e85760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b6044820152606401610920565b6001600160a01b03166000908152600e60205260409020805460ff19166001179055565b600b54600160401b90046001600160a01b0316331461245e5760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b6044820152606401610920565b60018054911515600160a01b0260ff60a01b19909216919091179055565b600b54600160401b90046001600160a01b031633146124ce5760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b6044820152606401610920565b600f5460ff161561252d5760405162461bcd60e51b8152602060048201526024808201527f566572696669657220757064617465732068617665206265656e2064697361626044820152633632b21760e11b6064820152608401610920565b60008263ffffffff16116125835760405162461bcd60e51b815260206004820152601460248201527f6e756d496e707574732073686f756c64203e20300000000000000000000000006044820152606401610920565b63ffffffff828116600090815260026020908152604080832093851683529290522054600160a01b900460ff16156125e35763ffffffff8083166000908152600260209081526040808320938516835292905220805460ff60a01b191690555b5050565b600b54600160401b90046001600160a01b031633146126395760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b6044820152606401610920565b600f5460ff16156126985760405162461bcd60e51b8152602060048201526024808201527f566572696669657220757064617465732068617665206265656e2064697361626044820152633632b21760e11b6064820152608401610920565b60008263ffffffff16116126e35760405162461bcd60e51b8152602060048201526012602482015271696e76616c696420726f6c6c757053697a6560701b6044820152606401610920565b6040805180820182526001600160a01b0392831681526001602080830191825263ffffffff90951660009081526003909552919093209251835491511515600160a01b0274ffffffffffffffffffffffffffffffffffffffffff19909216921691909117179055565b60011c637fffffff1660005b63ffffffff82161561277d57600183901c925060018263ffffffff16901c9150612758565b5090919050565b604051600090339083908381818185875af1925050503d80600081146127c6576040519150601f19603f3d011682016040523d82523d6000602084013e6127cb565b606091505b50509050806125e35760405162461bcd60e51b815260206004820152601a60248201527f726f6c6c757020666565207472616e73666572206661696c65640000000000006044820152606401610920565b600154600090600160a01b900460ff161561283957506000919050565b60015460405163df592f7d60e01b81526001600160a01b03848116600483015290911690819063df592f7d9060240160206040518083038186803b15801561288057600080fd5b505afa158015612894573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128b891906132bf565b9392505050565b6101208101516101408201516040516bffffffffffffffffffffffff19606093841b811660208301529190921b1660348201526000908190604801604051602081830303815290604052905060005b836101600151518163ffffffff16101561297d57818461016001518263ffffffff168151811061294057612940613a25565b60200260200101516040516020016129599291906136dc565b6040516020818303038152906040529150808061297590613988565b91505061290e565b508051602080830191909120604080517f19457468657265756d205369676e6564204d6573736167653a0a33320000000081850152603c8082019390935281518082039093018352605c01905280519101206128b8565b60008060006129e38585612c2c565b915091506129f081612c9c565b509392505050565b60408051808201825284815260208082018581526007805460009081526006909352938220925183555160019092019190915560085491549091612a3b916138a7565b90506007546001612a4c91906138a7565b60075560405184907ff533f9705aac5020e21695ea3553ac7b6881070d2b6900ab2b1e3050304b5bf990612a85908690859087906137ba565b60405180910390a250505050565b3415612ae15760405162461bcd60e51b815260206004820152601860248201527f6e6f206d61696e6e657420746f6b656e20616c6c6f77656400000000000000006044820152606401610920565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114612b2e576040519150601f19603f3d011682016040523d82523d6000602084013e612b33565b606091505b5050905080612b845760405162461bcd60e51b815260206004820152600f60248201527f7769746864726177206661696c656400000000000000000000000000000000006044820152606401610920565b505050565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114612bd6576040519150601f19603f3d011682016040523d82523d6000602084013e612bdb565b606091505b5050905080612b845760405162461bcd60e51b815260206004820152601c60248201527f6578656375746f7220666565207472616e73666572206661696c6564000000006044820152606401610920565b600080825160411415612c635760208301516040840151606085015160001a612c5787828585612e57565b94509450505050612c95565b825160401415612c8d5760208301516040840151612c82868383612f44565b935093505050612c95565b506000905060025b9250929050565b6000816004811115612cb057612cb0613a0f565b1415612cb95750565b6001816004811115612ccd57612ccd613a0f565b1415612d1b5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610920565b6002816004811115612d2f57612d2f613a0f565b1415612d7d5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610920565b6003816004811115612d9157612d91613a0f565b1415612dea5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610920565b6004816004811115612dfe57612dfe613a0f565b14156122a45760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610920565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115612e8e5750600090506003612f3b565b8460ff16601b14158015612ea657508460ff16601c14155b15612eb75750600090506004612f3b565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015612f0b573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116612f3457600060019250925050612f3b565b9150600090505b94509492505050565b6000807f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831681612f7a60ff86901c601b6138a7565b9050612f8887828885612e57565b935093505050935093915050565b80356001600160a01b0381168114612fad57600080fd5b919050565b600082601f830112612fc357600080fd5b81356020612fd8612fd383613883565b613852565b80838252828201915082860187848660051b8901011115612ff857600080fd5b6000805b8681101561303b57823567ffffffffffffffff81111561301a578283fd5b6130288b88838d010161310e565b8652509385019391850191600101612ffc565b509198975050505050505050565b600082601f83011261305a57600080fd5b6130626137e2565b80838560408601111561307457600080fd5b60005b6002811015613096578135845260209384019390910190600101613077565b509095945050505050565b600082601f8301126130b257600080fd5b813560206130c2612fd383613883565b80838252828201915082860187848660051b89010111156130e257600080fd5b60005b85811015613101578135845292840192908401906001016130e5565b5090979650505050505050565b600082601f83011261311f57600080fd5b813567ffffffffffffffff81111561313957613139613a3b565b61314c601f8201601f1916602001613852565b81815284602083860101111561316157600080fd5b816020850160208301376000918101602001919091529392505050565b60006040828403121561319057600080fd5b6040516040810181811067ffffffffffffffff821117156131b3576131b3613a3b565b604052823581526020928301359281019290925250919050565b60008183036101008112156131e157600080fd5b6040516060810181811067ffffffffffffffff8211171561320457613204613a3b565b604052915081613214858561317e565b81526080603f198301121561322857600080fd5b6132306137e2565b915061323f8560408601613049565b825261324e8560808601613049565b60208301528160208201526132668560c0860161317e565b6040820152505092915050565b803563ffffffff81168114612fad57600080fd5b60006020828403121561329957600080fd5b6128b882612f96565b6000602082840312156132b457600080fd5b81356128b881613a51565b6000602082840312156132d157600080fd5b81516128b881613a51565b600080604083850312156132ef57600080fd5b823567ffffffffffffffff8082111561330757600080fd5b9084019060a0828703121561331b57600080fd5b61332361380b565b8235815260208301356020820152604083013560408201526060830135606082015260808301358281111561335757600080fd5b6133638882860161310e565b608083015250935061337a91505060208401612f96565b90509250929050565b6000610160828403121561339657600080fd5b6040516080810181811067ffffffffffffffff821117156133b9576133b9613a3b565b6040526133c684846131cd565b81526133d56101008401613273565b6020820152610120830135604082015261014090920135606083015250919050565b6000806040838503121561340a57600080fd5b823567ffffffffffffffff8082111561342257600080fd5b90840190610260828703121561343757600080fd5b61343f61382e565b61344987846131cd565b8152610100808401356020830152610120808501358481111561346b57600080fd5b6134778a8288016130a1565b604085015250610140808601358581111561349157600080fd5b61349d8b8289016130a1565b60608601525061016080870135608086015261018087013560a08601526101a087013560c08601526101c0870135868111156134d857600080fd5b6134e48c828a016130a1565b60e0870152506101e0870135868111156134fd57600080fd5b6135098c828a016130a1565b858701525061351b6102008801612f96565b8386015261352c6102208801612f96565b8286015261024087013593508584111561354557600080fd5b6135518b858901612fb2565b90850152509195505050602085013591508082111561356f57600080fd5b5061357c8582860161310e565b9150509250929050565b60006020828403121561359857600080fd5b5035919050565b6000602082840312156135b157600080fd5b6128b882613273565b600080604083850312156135cd57600080fd5b6135d683613273565b915061337a60208401612f96565b600080604083850312156135f757600080fd5b61360083613273565b915061337a60208401613273565b60008060006060848603121561362357600080fd5b61362c84613273565b925061363a60208501613273565b915061364860408501612f96565b90509250925092565b8060005b6002811015613674578151845260209384019390910190600101613655565b50505050565b60008151808452613692816020860160208601613921565b601f01601f19169290920160200192915050565b815160009082906020808601845b838110156136d0578151855293820193908201906001016136b4565b50929695505050505050565b600083516136ee818460208801613921565b835190830190613702818360208801613921565b01949350505050565b6020815260006128b8602083018461367a565b600061012080830161373b84875180518252602090810151910152565b60208087015161374f604087018251613651565b81015161375f6080870182613651565b506040870151805160c08701526020015160e08601526101008501929092528451908190526101408401918581019160005b818110156137ad57835185529382019392820192600101613791565b5092979650505050505050565b8381528260208201526060604082015260006137d9606083018461367a565b95945050505050565b6040805190810167ffffffffffffffff8111828210171561380557613805613a3b565b60405290565b60405160a0810167ffffffffffffffff8111828210171561380557613805613a3b565b604051610180810167ffffffffffffffff8111828210171561380557613805613a3b565b604051601f8201601f1916810167ffffffffffffffff8111828210171561387b5761387b613a3b565b604052919050565b600067ffffffffffffffff82111561389d5761389d613a3b565b5060051b60200190565b600082198211156138ba576138ba6139e3565b500190565b600063ffffffff808316818516808303821115613702576137026139e3565b600063ffffffff80831681851681830481118215151615613901576139016139e3565b02949350505050565b60008282101561391c5761391c6139e3565b500390565b60005b8381101561393c578181015183820152602001613924565b838111156136745750506000910152565b600063ffffffff821680613963576139636139e3565b6000190192915050565b6000600019821415613981576139816139e3565b5060010190565b600063ffffffff808316818114156139a2576139a26139e3565b6001019392505050565b6000826139bb576139bb6139f9565b500690565b600063ffffffff808416806139d7576139d76139f9565b92169190910692915050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b80151581146122a457600080fdfea26469706673582212201e0a96e9792cb3e470e1168acb98fb28e84caf229fa48a6bf0d10210e18cc4e764736f6c63430008070033';

type CommitmentPoolMainConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CommitmentPoolMainConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CommitmentPoolMain__factory extends ContractFactory {
  constructor(...args: CommitmentPoolMainConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'CommitmentPoolMain';
  }

  deploy(
    _treeHeight: BigNumberish,
    _rootHistoryLength: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<CommitmentPoolMain> {
    return super.deploy(_treeHeight, _rootHistoryLength, overrides || {}) as Promise<CommitmentPoolMain>;
  }
  getDeployTransaction(
    _treeHeight: BigNumberish,
    _rootHistoryLength: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(_treeHeight, _rootHistoryLength, overrides || {});
  }
  attach(address: string): CommitmentPoolMain {
    return super.attach(address) as CommitmentPoolMain;
  }
  connect(signer: Signer): CommitmentPoolMain__factory {
    return super.connect(signer) as CommitmentPoolMain__factory;
  }
  static readonly contractName: 'CommitmentPoolMain';
  public readonly contractName: 'CommitmentPoolMain';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CommitmentPoolMainInterface {
    return new utils.Interface(_abi) as CommitmentPoolMainInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): CommitmentPoolMain {
    return new Contract(address, _abi, signerOrProvider) as CommitmentPoolMain;
  }
}
