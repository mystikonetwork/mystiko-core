/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides, BigNumberish } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { CommitmentPoolERC20, CommitmentPoolERC20Interface } from '../CommitmentPoolERC20';

const _abi = [
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_treeHeight',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '_rootHistoryLength',
        type: 'uint32',
      },
      {
        internalType: 'address',
        name: '_token',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
    ],
    name: 'CommitmentIncluded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'rollupFee',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'leafIndex',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'bytes',
        name: 'encryptedNote',
        type: 'bytes',
      },
    ],
    name: 'CommitmentQueued',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'rootHash',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'serialNumber',
        type: 'uint256',
      },
    ],
    name: 'CommitmentSpent',
    type: 'event',
  },
  {
    inputs: [],
    name: 'FIELD_SIZE',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_actor',
        type: 'address',
      },
    ],
    name: 'addEnqueueWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_roller',
        type: 'address',
      },
    ],
    name: 'addRollupWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'asset',
    outputs: [
      {
        internalType: 'contract IERC20Metadata',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetDecimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetName',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetSymbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetType',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_newOperator',
        type: 'address',
      },
    ],
    name: 'changeOperator',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'commitmentIncludedCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'commitmentQueue',
    outputs: [
      {
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'rollupFee',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'commitmentQueueSize',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'currentRoot',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'currentRootIndex',
    outputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
    ],
    name: 'disableRollupVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_numInputs',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '_numOutputs',
        type: 'uint32',
      },
    ],
    name: 'disableTransactVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
      {
        internalType: 'address',
        name: '_rollupVerifier',
        type: 'address',
      },
    ],
    name: 'enableRollupVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_numInputs',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '_numOutputs',
        type: 'uint32',
      },
      {
        internalType: 'address',
        name: '_transactVerifier',
        type: 'address',
      },
    ],
    name: 'enableTransactVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
        ],
        internalType: 'struct ICommitmentPool.CommitmentRequest',
        name: '_request',
        type: 'tuple',
      },
      {
        internalType: 'address',
        name: '_executor',
        type: 'address',
      },
    ],
    name: 'enqueue',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'enqueueWhitelist',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'historicCommitments',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'root',
        type: 'uint256',
      },
    ],
    name: 'isKnownRoot',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isRollupWhitelistDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isVerifierUpdateDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'minRollupFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'operator',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_actor',
        type: 'address',
      },
    ],
    name: 'removeEnqueueWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_roller',
        type: 'address',
      },
    ],
    name: 'removeRollupWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'a',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256[2]',
                    name: 'X',
                    type: 'uint256[2]',
                  },
                  {
                    internalType: 'uint256[2]',
                    name: 'Y',
                    type: 'uint256[2]',
                  },
                ],
                internalType: 'struct IVerifier.G2Point',
                name: 'b',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'c',
                type: 'tuple',
              },
            ],
            internalType: 'struct IVerifier.Proof',
            name: 'proof',
            type: 'tuple',
          },
          {
            internalType: 'uint32',
            name: 'rollupSize',
            type: 'uint32',
          },
          {
            internalType: 'uint256',
            name: 'newRoot',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'leafHash',
            type: 'uint256',
          },
        ],
        internalType: 'struct ICommitmentPool.RollupRequest',
        name: '_request',
        type: 'tuple',
      },
    ],
    name: 'rollup',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    name: 'rollupVerifiers',
    outputs: [
      {
        internalType: 'contract IVerifier',
        name: 'verifier',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'enabled',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'rollupWhitelist',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    name: 'rootHistory',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'rootHistoryLength',
    outputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sanctionsContract',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_minRollupFee',
        type: 'uint256',
      },
    ],
    name: 'setMinRollupFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'spentSerialNumbers',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'toggleRollupWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_check',
        type: 'bool',
      },
    ],
    name: 'toggleSanctionCheck',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'toggleVerifierUpdate',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'a',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256[2]',
                    name: 'X',
                    type: 'uint256[2]',
                  },
                  {
                    internalType: 'uint256[2]',
                    name: 'Y',
                    type: 'uint256[2]',
                  },
                ],
                internalType: 'struct IVerifier.G2Point',
                name: 'b',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'c',
                type: 'tuple',
              },
            ],
            internalType: 'struct IVerifier.Proof',
            name: 'proof',
            type: 'tuple',
          },
          {
            internalType: 'uint256',
            name: 'rootHash',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'serialNumbers',
            type: 'uint256[]',
          },
          {
            internalType: 'uint256[]',
            name: 'sigHashes',
            type: 'uint256[]',
          },
          {
            internalType: 'bytes32',
            name: 'sigPk',
            type: 'bytes32',
          },
          {
            internalType: 'uint256',
            name: 'publicAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'relayerFeeAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'outCommitments',
            type: 'uint256[]',
          },
          {
            internalType: 'uint256[]',
            name: 'outRollupFees',
            type: 'uint256[]',
          },
          {
            internalType: 'address',
            name: 'publicRecipient',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'relayerAddress',
            type: 'address',
          },
          {
            internalType: 'bytes[]',
            name: 'outEncryptedNotes',
            type: 'bytes[]',
          },
        ],
        internalType: 'struct ICommitmentPool.TransactRequest',
        name: '_request',
        type: 'tuple',
      },
      {
        internalType: 'bytes',
        name: '_signature',
        type: 'bytes',
      },
    ],
    name: 'transact',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    name: 'transactVerifiers',
    outputs: [
      {
        internalType: 'contract IVerifier',
        name: 'verifier',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'enabled',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'treeCapacity',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_sanction',
        type: 'address',
      },
    ],
    name: 'updateSanctionContractAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x60a0604052600180546001600160a81b0319167340c57923924b5c5c5455c48d93317139addac8fb17905560006007819055600855600b805463ffffffff191690553480156200004e57600080fd5b50604051620048dc380380620048dc8339810160408190526200007191620008c9565b600160005580838363ffffffff8116620000e55760405162461bcd60e51b815260206004820152602b60248201527f5f726f6f74486973746f72794c656e6774682073686f756c642062652067726560448201526a061746572207468616e20360ac1b606482015260840160405180910390fd5b600b8054600160201b600160e01b03191633680100000000000000000263ffffffff60201b19161764010000000063ffffffff84811691909102919091179091556200013590831660026200096c565b608052620001438262000194565b600a819055600b5463ffffffff166000908152600960205260409020555050600f80546001600160a01b03909216620100000262010000600160b01b03199092169190911790555062000a4d915050565b600063ffffffff8216620001c957507f09f658457775074ff4c842032a5ec2f1134c32784cca59d594caac8c503b7923919050565b8163ffffffff16600114156200020057507f1a77569b79cb7c2eaf9368de9e3b1efc0a606561e5ab299c2337340f3cdd576a919050565b8163ffffffff16600214156200023757507f111bd0002b1e3b8f1978c932b5ccb2fab87fdb0acab2ddb266f9a346dcb11ee1919050565b8163ffffffff16600314156200026e57507f040868ea2a363e05d7ae44280f69b49e429ab096ca2844efe91f8d6b3dad57dd919050565b8163ffffffff1660041415620002a457507ef8f605c92c8502c8fe83be1b83b24e3f67312a388f30cbadb5dee8974137c3919050565b8163ffffffff1660051415620002db57507f1adc043c99adbc0c86a60a36db0f661e2dd96f36ede322f954386d8935a0c5d9919050565b8163ffffffff16600614156200031257507f2a1fedfa71da723ac3e9b35cef752fa1b647b2b737a23e91241cb7bdc419e3f4919050565b8163ffffffff16600714156200034957507f17fe1974543c4c4b228e1292f7e3200d31435fc910ee5a8c5cafd329cc4b256b919050565b8163ffffffff16600814156200038057507f0e84a586eb63a0eec0f1fe5785022441f0e29e4ae859c7ce1f5fc88a42ad2e6b919050565b8163ffffffff1660091415620003b757507f193deb901f6eeb032e02e093280db17e373d4ff52bafda9215b46bb9b0a86f3e919050565b8163ffffffff16600a1415620003ee57507f1d10ca7b985697cb519565a5006c3f44b020b2edab9b7422ed15dc34532f9406919050565b8163ffffffff16600b14156200042557507f1dc200763555467a4e583e00badfdc1fb4d3d3f8f1cc81f31fd2f8b387776081919050565b8163ffffffff16600c14156200045c57507f203dd11fdba0ed13b20ca2d6952f3feb7461836a03512e0cccce8467b320b2f6919050565b8163ffffffff16600d14156200049357507f0591af64e64a3e69caf23eee2bdea90885343a49f547ee9464e95d8d6267e4f7919050565b8163ffffffff16600e1415620004ca57507f2af572f1077a32f46dc8e307d43c0fa6753b400b2107325976b8df7380545ff6919050565b8163ffffffff16600f14156200050157507f043227ae4b70b1aacd04e35e6aaed7b56d91220c31e97aaf52e12a6a56984e52919050565b8163ffffffff16601014156200053857507f2976f1f6a91d83d4c528dad69ece6d3d91934b0e5657e915b360c8c4c2fb54e6919050565b8163ffffffff16601114156200056e57507ee5c251c9e093658be0cd1b0df55b6f70f3d09146c1c8b4212a4ddcde700dbc919050565b8163ffffffff1660121415620005a557507f0267cbbc1bc2f1c3e3073d2ee60df8cc0bfef39fe3cee735c9ad5c8ad30064d2919050565b8163ffffffff1660131415620005dc57507f2f356057bc56f67dbf159a0e8935022acd5e982dce9f4071adc43e4d57ce27e6919050565b8163ffffffff16601414156200061357507f273db68f52f12a9d8022ae524050064e42d4d1661c9bcce958acf89b5e8b127b919050565b8163ffffffff16601514156200064a57507f0496a18ad4cca81b7c98ceb197439ad925e0f7f62d69dfa42cf9574be77fe30f919050565b8163ffffffff16601614156200068157507f24f89a3f943d421b2f3a554b65459f42b820ac09d6fd9d693df5f8ba732ab596919050565b8163ffffffff1660171415620006b857507f1b55bfd751c6807df36876cdce68034ab43210be2bc8afa8043c7f428604e7a7919050565b8163ffffffff1660181415620006ef57507f16d6595a398cf20f2489b90e958166f1e19c537c0c46e9b8ea5462391ee8f143919050565b8163ffffffff16601914156200072657507f0f01447ef8f621592474b678ed2fc404ebaf22a6fce15364bb4152a88c113613919050565b8163ffffffff16601a14156200075d57507f026c2dffee48bacbc9d21cf90aa7c6e525ab01db6966a9e7e53b3d3f4d1f5a4d919050565b8163ffffffff16601b14156200079457507f234fe90732795745b2c504c791242a2bb193baa1cbeab57db9324b6bb9134817919050565b8163ffffffff16601c1415620007cb57507f23a8e0a7e60981c52ebb498c260d5bef4d7c65145d17128996a77c33a3262a7e919050565b8163ffffffff16601d14156200080257507f24ee69d2565210c7027ff6fc2657ed029278bc79f41077fe3281ea5d5d8e80f9919050565b8163ffffffff16601e14156200083957507f1de402fa32463bb2917b733aeef0197a49cacacd1fe860c3acc8cd3b65a30a68919050565b8163ffffffff16601f14156200087057507f1d3015a0f6a7b3f754171d0540628107e50e25debceb16e0e33ae4205501896d919050565b8163ffffffff1660201415620008a757507f264a260539342647256819046bae05bed903a8d19b3c90439d67317d5d881322919050565b506000919050565b805163ffffffff81168114620008c457600080fd5b919050565b600080600060608486031215620008df57600080fd5b620008ea84620008af565b9250620008fa60208501620008af565b60408501519092506001600160a01b03811681146200091857600080fd5b809150509250925092565b600181815b808511156200096457816000190482111562000948576200094862000a37565b808516156200095657918102915b93841c939080029062000928565b509250929050565b60006200097a838362000981565b9392505050565b600082620009925750600162000a31565b81620009a15750600062000a31565b8160018114620009ba5760028114620009c557620009e5565b600191505062000a31565b60ff841115620009d957620009d962000a37565b50506001821b62000a31565b5060208310610133831016604e8410600b841016171562000a0a575081810a62000a31565b62000a16838362000923565b806000190482111562000a2d5762000a2d62000a37565b0290505b92915050565b634e487b7160e01b600052601160045260246000fd5b608051613e6562000a77600039600081816108c4015281816114e60152611f060152613e656000f3fe6080604052600436106102dc5760003560e01c80639937e14711610184578063c259e2e6116100d6578063c9abeb641161008a578063e4ed567111610064578063e4ed56711461091c578063fdab463d14610965578063ffa89b881461097b57600080fd5b8063c9abeb64146108b2578063de155921146108e6578063deeff7cd146108fc57600080fd5b8063c3098df9116100bb578063c3098df91461082e578063c9230c5d1461085b578063c9a6999c1461087057600080fd5b8063c259e2e6146107e7578063c2d416011461080757600080fd5b8063a9b1d29611610138578063ba9bd07d11610112578063ba9bd07d14610726578063bc22be141461074b578063c19355391461077b57600080fd5b8063a9b1d296146106d0578063ac967fad146106f0578063b4318ead1461070657600080fd5b80639b0a6fea116101695780639b0a6fea146106705780639cc6b35414610690578063a6232a93146106b057600080fd5b80639937e1471461063a5780639ae39ca31461065057600080fd5b8063414a37ba1161023d57806378d60cd7116101f15780637fa4b09c116101cb5780637fa4b09c146105b8578063806ae362146105d857806390eeb02b1461060857600080fd5b806378d60cd7146105485780637a9fff08146105685780637cbf0ff61461059857600080fd5b806353af27d51161022257806353af27d5146104d1578063570ca735146104f15780637013ea961461051857600080fd5b8063414a37ba146104655780634eb069f7146104a757600080fd5b8063176de7a81161029457806338d52e0f1161027957806338d52e0f146103ce5780633fae882e1461040c5780633fe3347a1461041f57600080fd5b8063176de7a81461038357806334c33e83146103ae57600080fd5b806305335faa116102c557806305335faa1461032357806306394c9b1461034357806314a7737d1461036357600080fd5b806302d498f1146102e157806303db987414610303575b600080fd5b3480156102ed57600080fd5b506103016102fc366004613582565b61099a565b005b34801561030f57600080fd5b5061030161031e366004613582565b610a15565b34801561032f57600080fd5b5061030161033e36600461359d565b610a88565b34801561034f57600080fd5b5061030161035e366004613582565b610af4565b34801561036f57600080fd5b5061030161037e3660046136f5565b610b87565b34801561038f57600080fd5b506103986111da565b6040516103a59190613abc565b60405180910390f35b3480156103ba57600080fd5b506103016103c9366004613582565b61126b565b3480156103da57600080fd5b50600f546103f4906201000090046001600160a01b031681565b6040516001600160a01b0390911681526020016103a5565b61030161041a366004613769565b6112f7565b34801561042b57600080fd5b5060408051808201909152600581527f65726332300000000000000000000000000000000000000000000000000000006020820152610398565b34801561047157600080fd5b506104997f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000181565b6040519081526020016103a5565b3480156104b357600080fd5b50600f546104c19060ff1681565b60405190151581526020016103a5565b3480156104dd57600080fd5b506001546103f4906001600160a01b031681565b3480156104fd57600080fd5b50600b546103f490600160401b90046001600160a01b031681565b34801561052457600080fd5b506104c1610533366004613582565b600d6020526000908152604090205460ff1681565b34801561055457600080fd5b506104c161056336600461364e565b611e4f565b34801561057457600080fd5b506104c1610583366004613582565b600e6020526000908152604090205460ff1681565b3480156105a457600080fd5b506103016105b33660046138f8565b612038565b3480156105c457600080fd5b506103016105d3366004613980565b6120df565b3480156105e457600080fd5b506104c16105f33660046138f8565b60046020526000908152604090205460ff1681565b34801561061457600080fd5b50600b546106259063ffffffff1681565b60405163ffffffff90911681526020016103a5565b34801561064657600080fd5b50610499600c5481565b34801561065c57600080fd5b5061030161066b36600461359d565b612256565b34801561067c57600080fd5b5061030161068b366004613911565b6122bb565b34801561069c57600080fd5b506103016106ab366004613582565b612400565b3480156106bc57600080fd5b506104c16106cb3660046138f8565b612473565b3480156106dc57600080fd5b506103016106eb366004613582565b6124ef565b3480156106fc57600080fd5b5061049960075481565b34801561071257600080fd5b5061030161072136600461359d565b612565565b34801561073257600080fd5b50600b5461062590640100000000900463ffffffff1681565b34801561075757600080fd5b506104c16107663660046138f8565b60056020526000908152604090205460ff1681565b34801561078757600080fd5b506107c8610796366004613956565b60026020908152600092835260408084209091529082529020546001600160a01b03811690600160a01b900460ff1682565b604080516001600160a01b0390931683529015156020830152016103a5565b3480156107f357600080fd5b50610301610802366004613956565b6125d5565b34801561081357600080fd5b5061081c612740565b60405160ff90911681526020016103a5565b34801561083a57600080fd5b50610499610849366004613911565b60096020526000908152604090205481565b34801561086757600080fd5b506103986127c8565b34801561087c57600080fd5b506107c861088b366004613911565b6003602052600090815260409020546001600160a01b03811690600160a01b900460ff1682565b3480156108be57600080fd5b506104997f000000000000000000000000000000000000000000000000000000000000000081565b3480156108f257600080fd5b5061049960085481565b34801561090857600080fd5b5061030161091736600461392c565b612818565b34801561092857600080fd5b506109506109373660046138f8565b6006602052600090815260409020805460019091015482565b604080519283526020830191909152016103a5565b34801561097157600080fd5b50610499600a5481565b34801561098757600080fd5b50600f546104c190610100900460ff1681565b600b54600160401b90046001600160a01b031633146109f15760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b60448201526064015b60405180910390fd5b6001600160a01b03166000908152600d60205260409020805460ff19166001179055565b600b54600160401b90046001600160a01b03163314610a675760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b60448201526064016109e8565b6001600160a01b03166000908152600e60205260409020805460ff19169055565b600b54600160401b90046001600160a01b03163314610ada5760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b60448201526064016109e8565b600f80549115156101000261ff0019909216919091179055565b600b54600160401b90046001600160a01b03163314610b465760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b60448201526064016109e8565b600b80546001600160a01b03909216600160401b027fffffffff0000000000000000000000000000000000000000ffffffffffffffff909216919091179055565b600f54610100900460ff1680610bac5750336000908152600d602052604090205460ff165b610bf85760405162461bcd60e51b815260206004820152601860248201527f4f6e6c792077686974656c697374656420726f6c6c65722e000000000000000060448201526064016109e8565b610c058160400151612473565b15610c525760405162461bcd60e51b815260206004820152601560248201527f6e6577526f6f74206973206475706c696361746564000000000000000000000060448201526064016109e8565b6000816020015163ffffffff16118015610c785750600754816020015163ffffffff1611155b8015610ca5575060208181015163ffffffff16600090815260039091526040902054600160a01b900460ff165b610ce65760405162461bcd60e51b8152602060048201526012602482015271696e76616c696420726f6c6c757053697a6560701b60448201526064016109e8565b806020015163ffffffff16600854610cfe9190613d7c565b15610d575760405162461bcd60e51b815260206004820152602360248201527f696e76616c696420726f6c6c757053697a652061742063757272656e7420737460448201526261746560e81b60648201526084016109e8565b6000610d69600854836020015161297d565b90506000826020015163ffffffff1667ffffffffffffffff811115610d9057610d90613e0b565b604051908082528060200260200182016040528015610db9578160200160208202803683370190505b506008549091506000905b846020015163ffffffff16600854610ddc9190613c77565b811015610f0657600081815260066020526040902054610e3e5760405162461bcd60e51b815260206004820152601260248201527f696e646578206f7574206f6620626f756e64000000000000000000000000000060448201526064016109e8565b60008181526006602052604090205460085481908590610e5e9085613cda565b81518110610e6e57610e6e613df5565b602002602001018181525050600660008381526020019081526020016000206001015483610e9c9190613c77565b6000838152600660205260408120818155600190810191909155600754919450610ec591613cda565b60075560405181907ffe6b097b46a78e08506a3143b6337c2505ba77df76fe05c3663a987395d6341390600090a25080610efe81613d3d565b915050610dc4565b5060007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000183604051602001610f3b9190613a3b565b6040516020818303038152906040528051906020012060001c610f5e9190613d7c565b905080856060015114610fb35760405162461bcd60e51b815260206004820152601060248201527f696e76616c6964206c656166486173680000000000000000000000000000000060448201526064016109e8565b60408051600480825260a0820190925260009160208201608080368337019050509050600a5481600081518110610fec57610fec613df5565b60200260200101818152505085604001518160018151811061101057611010613df5565b60200260200101818152505085606001518160028151811061103457611034613df5565b602002602001018181525050848160038151811061105457611054613df5565b6020908102919091018101919091528681015163ffffffff16600090815260039091526040808220548851915163c941764760e01b81526001600160a01b039091169163c9417647916110ac91908690600401613acf565b602060405180830381600087803b1580156110c657600080fd5b505af11580156110da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110fe91906135ba565b90508061114d5760405162461bcd60e51b815260206004820152600d60248201527f696e76616c69642070726f6f660000000000000000000000000000000000000060448201526064016109e8565b611156846129b5565b866020015163ffffffff1660085461116e9190613c77565b6008556040870151600a55600b5463ffffffff640100000000820481169161119891166001613c8f565b6111a29190613d90565b600b805463ffffffff191663ffffffff9290921691821790556040978801516000918252600960205297902096909655505050505050565b6060600f60029054906101000a90046001600160a01b03166001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b15801561122a57600080fd5b505afa15801561123e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261126691908101906135d7565b905090565b600b54600160401b90046001600160a01b031633146112bd5760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b60448201526064016109e8565b600180547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b6002600054141561134a5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016109e8565b600260008181556040848101515160e08601515163ffffffff808316855260209586528385209082168552909452912054909190600160a01b900460ff166113d45760405162461bcd60e51b815260206004820152601260248201527f696e76616c696420692f6f206c656e677468000000000000000000000000000060448201526064016109e8565b8163ffffffff168460600151511461142e5760405162461bcd60e51b815260206004820152601860248201527f696e76616c696420736967486173686573206c656e677468000000000000000060448201526064016109e8565b8063ffffffff1684610100015151146114895760405162461bcd60e51b815260206004820152601c60248201527f696e76616c6964206f7574526f6c6c757046656573206c656e6774680000000060448201526064016109e8565b8063ffffffff1684610160015151146114e45760405162461bcd60e51b815260206004820181905260248201527f696e76616c6964206f7574456e637279707465644e6f746573206c656e67746860448201526064016109e8565b7f00000000000000000000000000000000000000000000000000000000000000008163ffffffff1660075460085461151c9190613c77565b6115269190613c77565b11156115635760405162461bcd60e51b815260206004820152600c60248201526b1d1c9959481a5cc8199d5b1b60a21b60448201526064016109e8565b6115718461012001516129d2565b156115be5760405162461bcd60e51b815260206004820152601260248201527f73616e6374696f6e65642061646472657373000000000000000000000000000060448201526064016109e8565b60006115c985612a75565b905060006115d78286612b8a565b60808701519091506001600160a01b038216146116365760405162461bcd60e51b815260206004820152601160248201527f696e76616c6964207369676e617475726500000000000000000000000000000060448201526064016109e8565b6000611643846002613cae565b61164e866002613cae565b611659906004613c8f565b6116639190613c8f565b63ffffffff1667ffffffffffffffff81111561168157611681613e0b565b6040519080825280602002602001820160405280156116aa578160200160208202803683370190505b5090506116ba8760200151612473565b6117065760405162461bcd60e51b815260206004820152600c60248201527f696e76616c696420726f6f74000000000000000000000000000000000000000060448201526064016109e8565b86602001518160008151811061171e5761171e613df5565b60200260200101818152505060005b8563ffffffff168163ffffffff161015611890576005600089604001518363ffffffff168151811061176157611761613df5565b60209081029190910181015182528101919091526040016000205460ff16156117cc5760405162461bcd60e51b815260206004820152601760248201527f746865206e6f746520686173206265656e207370656e7400000000000000000060448201526064016109e8565b87604001518163ffffffff16815181106117e8576117e8613df5565b6020026020010151828260016117fe9190613c8f565b63ffffffff168151811061181457611814613df5565b60200260200101818152505087606001518163ffffffff168151811061183c5761183c613df5565b602002602001015182878360016118539190613c8f565b61185d9190613c8f565b63ffffffff168151811061187357611873613df5565b60209081029190910101528061188881613d58565b91505061172d565b506080870151816118a2876002613cae565b6118ad906001613c8f565b63ffffffff16815181106118c3576118c3613df5565b602090810291909101015260a0870151816118df876002613cae565b6118ea906002613c8f565b63ffffffff168151811061190057611900613df5565b602090810291909101015260c08701518161191c876002613cae565b611927906003613c8f565b63ffffffff168151811061193d5761193d613df5565b60200260200101818152505060005b8463ffffffff168163ffffffff161015611b5257600460008960e001518363ffffffff168151811061198057611980613df5565b60209081029190910181015182528101919091526040016000205460ff16156119eb5760405162461bcd60e51b815260206004820152601460248201527f6475706c696361746520636f6d6d69746d656e7400000000000000000000000060448201526064016109e8565b600c548861010001518263ffffffff1681518110611a0b57611a0b613df5565b60200260200101511015611a615760405162461bcd60e51b815260206004820152601260248201527f726f6c6c75702066656520746f6f206c6f77000000000000000000000000000060448201526064016109e8565b8760e001518163ffffffff1681518110611a7d57611a7d613df5565b60200260200101518282886002611a949190613cae565b611a9f906004613c8f565b611aa99190613c8f565b63ffffffff1681518110611abf57611abf613df5565b6020026020010181815250508761010001518163ffffffff1681518110611ae857611ae8613df5565b6020026020010151828287896002611b009190613cae565b611b0a9190613c8f565b611b15906004613c8f565b611b1f9190613c8f565b63ffffffff1681518110611b3557611b35613df5565b602090810291909101015280611b4a81613d58565b91505061194c565b5063ffffffff80861660009081526002602090815260408083209388168352929052818120548951925163c941764760e01b815291926001600160a01b039091169163c941764791611ba8918690600401613acf565b602060405180830381600087803b158015611bc257600080fd5b505af1158015611bd6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bfa91906135ba565b905080611c495760405162461bcd60e51b815260206004820152601660248201527f696e76616c6964207472616e736163742070726f6f660000000000000000000060448201526064016109e8565b60005b8663ffffffff168163ffffffff161015611d16576001600560008b604001518463ffffffff1681518110611c8257611c82613df5565b6020026020010151815260200190815260200160002060006101000a81548160ff02191690831515021790555088604001518163ffffffff1681518110611ccb57611ccb613df5565b602002602001015189602001517f3c2372ab6130817bd6b8fc6dbaecae947e84201b49535d358debaa6c34c23ecf60405160405180910390a380611d0e81613d58565b915050611c4c565b5060005b8563ffffffff168163ffffffff161015611e05576001600460008b60e001518463ffffffff1681518110611d5057611d50613df5565b6020026020010151815260200190815260200160002060006101000a81548160ff021916908315150217905550611df38960e001518263ffffffff1681518110611d9c57611d9c613df5565b60200260200101518a61010001518363ffffffff1681518110611dc157611dc1613df5565b60200260200101518b61016001518463ffffffff1681518110611de657611de6613df5565b6020026020010151612bae565b80611dfd81613d58565b915050611d1a565b5060a088015115611e2357611e238861012001518960a00151612c44565b60c088015115611e4057611e408861014001518960c00151612c44565b50506001600055505050505050565b336000908152600e602052604081205460ff16611eae5760405162461bcd60e51b815260206004820152601860248201527f4f6e6c792077686974656c69737465642073656e6465722e000000000000000060448201526064016109e8565b600c5483606001511015611f045760405162461bcd60e51b815260206004820152601260248201527f726f6c6c75702066656520746f6f20666577000000000000000000000000000060448201526064016109e8565b7f0000000000000000000000000000000000000000000000000000000000000000600754600854611f359190613c77565b10611f715760405162461bcd60e51b815260206004820152600c60248201526b1d1c9959481a5cc8199d5b1b60a21b60448201526064016109e8565b60208084015160009081526004909152604090205460ff1615611fe05760405162461bcd60e51b815260206004820152602160248201527f74686520636f6d6d69746d656e7420686173206265656e207375626d697474656044820152601960fa1b60648201526084016109e8565b60208084018051600090815260049092526040909120805460ff191660011790555160608401516080850151612017929190612bae565b60408301511561202f5761202f828460400151612c44565b50600192915050565b600b54600160401b90046001600160a01b0316331461208a5760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b60448201526064016109e8565b600081116120da5760405162461bcd60e51b815260206004820152601560248201527f696e76616c6964205f6d696e526f6c6c7570466565000000000000000000000060448201526064016109e8565b600c55565b600b54600160401b90046001600160a01b031633146121315760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b60448201526064016109e8565b600f5460ff16156121905760405162461bcd60e51b8152602060048201526024808201527f566572696669657220757064617465732068617665206265656e2064697361626044820152633632b21760e11b60648201526084016109e8565b60008363ffffffff16116121e65760405162461bcd60e51b815260206004820152601460248201527f6e756d496e707574732073686f756c64203e203000000000000000000000000060448201526064016109e8565b6040805180820182526001600160a01b0392831681526001602080830191825263ffffffff9687166000908152600282528481209690971687529490945293209251835492511515600160a01b0274ffffffffffffffffffffffffffffffffffffffffff19909316911617179055565b600b54600160401b90046001600160a01b031633146122a85760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b60448201526064016109e8565b600f805460ff1916911515919091179055565b600b54600160401b90046001600160a01b0316331461230d5760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b60448201526064016109e8565b60008163ffffffff16116123585760405162461bcd60e51b8152602060048201526012602482015271696e76616c696420726f6c6c757053697a6560701b60448201526064016109e8565b600f5460ff16156123b75760405162461bcd60e51b8152602060048201526024808201527f566572696669657220757064617465732068617665206265656e2064697361626044820152633632b21760e11b60648201526084016109e8565b63ffffffff8116600090815260036020526040902054600160a01b900460ff16156123fd5763ffffffff81166000908152600360205260409020805460ff60a01b191690555b50565b600b54600160401b90046001600160a01b031633146124525760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b60448201526064016109e8565b6001600160a01b03166000908152600d60205260409020805460ff19169055565b600b5460009063ffffffff165b63ffffffff81166000908152600960205260409020548314156124a65750600192915050565b63ffffffff81166124c45750600b54640100000000900463ffffffff165b806124ce81613d1d565b600b5490925063ffffffff8084169116141590506124805750600092915050565b600b54600160401b90046001600160a01b031633146125415760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b60448201526064016109e8565b6001600160a01b03166000908152600e60205260409020805460ff19166001179055565b600b54600160401b90046001600160a01b031633146125b75760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b60448201526064016109e8565b60018054911515600160a01b0260ff60a01b19909216919091179055565b600b54600160401b90046001600160a01b031633146126275760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b60448201526064016109e8565b600f5460ff16156126865760405162461bcd60e51b8152602060048201526024808201527f566572696669657220757064617465732068617665206265656e2064697361626044820152633632b21760e11b60648201526084016109e8565b60008263ffffffff16116126dc5760405162461bcd60e51b815260206004820152601460248201527f6e756d496e707574732073686f756c64203e203000000000000000000000000060448201526064016109e8565b63ffffffff828116600090815260026020908152604080832093851683529290522054600160a01b900460ff161561273c5763ffffffff8083166000908152600260209081526040808320938516835292905220805460ff60a01b191690555b5050565b6000600f60029054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561279057600080fd5b505afa1580156127a4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061126691906139c3565b6060600f60029054906101000a90046001600160a01b03166001600160a01b03166306fdde036040518163ffffffff1660e01b815260040160006040518083038186803b15801561122a57600080fd5b600b54600160401b90046001600160a01b0316331461286a5760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b60448201526064016109e8565b600f5460ff16156128c95760405162461bcd60e51b8152602060048201526024808201527f566572696669657220757064617465732068617665206265656e2064697361626044820152633632b21760e11b60648201526084016109e8565b60008263ffffffff16116129145760405162461bcd60e51b8152602060048201526012602482015271696e76616c696420726f6c6c757053697a6560701b60448201526064016109e8565b6040805180820182526001600160a01b0392831681526001602080830191825263ffffffff90951660009081526003909552919093209251835491511515600160a01b0274ffffffffffffffffffffffffffffffffffffffffff19909216921691909117179055565b60011c637fffffff1660005b63ffffffff8216156129ae57600183901c925060018263ffffffff16901c9150612989565b5090919050565b600f546123fd906201000090046001600160a01b03163383612c5d565b600154600090600160a01b900460ff16156129ef57506000919050565b60015460405163df592f7d60e01b81526001600160a01b03848116600483015290911690819063df592f7d9060240160206040518083038186803b158015612a3657600080fd5b505afa158015612a4a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a6e91906135ba565b9392505050565b6101208101516101408201516040516bffffffffffffffffffffffff19606093841b811660208301529190921b1660348201526000908190604801604051602081830303815290604052905060005b836101600151518163ffffffff161015612b3357818461016001518263ffffffff1681518110612af657612af6613df5565b6020026020010151604051602001612b0f929190613a8d565b60405160208183030381529060405291508080612b2b90613d58565b915050612ac4565b508051602080830191909120604080517f19457468657265756d205369676e6564204d6573736167653a0a33320000000081850152603c8082019390935281518082039093018352605c0190528051910120612a6e565b6000806000612b998585612cc9565b91509150612ba681612d39565b509392505050565b6000600854600754612bc09190613c77565b604080518082018252868152602080820187815260008581526006909252929020905181559051600191820155600754919250612bfd9190613c77565b60075560405184907ff533f9705aac5020e21695ea3553ac7b6881070d2b6900ab2b1e3050304b5bf990612c3690869085908790613b6b565b60405180910390a250505050565b600f5461273c906201000090046001600160a01b031683835b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b179052612cc4908490612ef4565b505050565b600080825160411415612d005760208301516040840151606085015160001a612cf487828585612fd9565b94509450505050612d32565b825160401415612d2a5760208301516040840151612d1f8683836130c6565b935093505050612d32565b506000905060025b9250929050565b6000816004811115612d4d57612d4d613ddf565b1415612d565750565b6001816004811115612d6a57612d6a613ddf565b1415612db85760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016109e8565b6002816004811115612dcc57612dcc613ddf565b1415612e1a5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016109e8565b6003816004811115612e2e57612e2e613ddf565b1415612e875760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016109e8565b6004816004811115612e9b57612e9b613ddf565b14156123fd5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016109e8565b6000612f49826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166131189092919063ffffffff16565b805190915015612cc45780806020019051810190612f6791906135ba565b612cc45760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016109e8565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561301057506000905060036130bd565b8460ff16601b1415801561302857508460ff16601c14155b1561303957506000905060046130bd565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561308d573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166130b6576000600192509250506130bd565b9150600090505b94509492505050565b6000807f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8316816130fc60ff86901c601b613c77565b905061310a87828885612fd9565b935093505050935093915050565b6060613127848460008561312f565b949350505050565b6060824710156131a75760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016109e8565b6001600160a01b0385163b6131fe5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016109e8565b600080866001600160a01b0316858760405161321a9190613a71565b60006040518083038185875af1925050503d8060008114613257576040519150601f19603f3d011682016040523d82523d6000602084013e61325c565b606091505b509150915061326c828286613277565b979650505050505050565b60608315613286575081612a6e565b8251156132965782518084602001fd5b8160405162461bcd60e51b81526004016109e89190613abc565b80356001600160a01b03811681146132c757600080fd5b919050565b600082601f8301126132dd57600080fd5b813560206132f26132ed83613c2b565b613bfa565b80838252828201915082860187848660051b890101111561331257600080fd5b6000805b8681101561335557823567ffffffffffffffff811115613334578283fd5b6133428b88838d0101613428565b8652509385019391850191600101613316565b509198975050505050505050565b600082601f83011261337457600080fd5b61337c613b8a565b80838560408601111561338e57600080fd5b60005b60028110156133b0578135845260209384019390910190600101613391565b509095945050505050565b600082601f8301126133cc57600080fd5b813560206133dc6132ed83613c2b565b80838252828201915082860187848660051b89010111156133fc57600080fd5b60005b8581101561341b578135845292840192908401906001016133ff565b5090979650505050505050565b600082601f83011261343957600080fd5b81356134476132ed82613c4f565b81815284602083860101111561345c57600080fd5b816020850160208301376000918101602001919091529392505050565b60006040828403121561348b57600080fd5b6040516040810181811067ffffffffffffffff821117156134ae576134ae613e0b565b604052823581526020928301359281019290925250919050565b60008183036101008112156134dc57600080fd5b6040516060810181811067ffffffffffffffff821117156134ff576134ff613e0b565b60405291508161350f8585613479565b81526080603f198301121561352357600080fd5b61352b613b8a565b915061353a8560408601613363565b82526135498560808601613363565b60208301528160208201526135618560c08601613479565b6040820152505092915050565b803563ffffffff811681146132c757600080fd5b60006020828403121561359457600080fd5b612a6e826132b0565b6000602082840312156135af57600080fd5b8135612a6e81613e21565b6000602082840312156135cc57600080fd5b8151612a6e81613e21565b6000602082840312156135e957600080fd5b815167ffffffffffffffff81111561360057600080fd5b8201601f8101841361361157600080fd5b805161361f6132ed82613c4f565b81815285602083850101111561363457600080fd5b613645826020830160208601613cf1565b95945050505050565b6000806040838503121561366157600080fd5b823567ffffffffffffffff8082111561367957600080fd5b9084019060a0828703121561368d57600080fd5b613695613bb3565b823581526020830135602082015260408301356040820152606083013560608201526080830135828111156136c957600080fd5b6136d588828601613428565b60808301525093506136ec915050602084016132b0565b90509250929050565b6000610160828403121561370857600080fd5b6040516080810181811067ffffffffffffffff8211171561372b5761372b613e0b565b60405261373884846134c8565b8152613747610100840161356e565b6020820152610120830135604082015261014090920135606083015250919050565b6000806040838503121561377c57600080fd5b823567ffffffffffffffff8082111561379457600080fd5b9084019061026082870312156137a957600080fd5b6137b1613bd6565b6137bb87846134c8565b815261010080840135602083015261012080850135848111156137dd57600080fd5b6137e98a8288016133bb565b604085015250610140808601358581111561380357600080fd5b61380f8b8289016133bb565b60608601525061016080870135608086015261018087013560a08601526101a087013560c08601526101c08701358681111561384a57600080fd5b6138568c828a016133bb565b60e0870152506101e08701358681111561386f57600080fd5b61387b8c828a016133bb565b858701525061388d61020088016132b0565b8386015261389e61022088016132b0565b828601526102408701359350858411156138b757600080fd5b6138c38b8589016132cc565b9085015250919550505060208501359150808211156138e157600080fd5b506138ee85828601613428565b9150509250929050565b60006020828403121561390a57600080fd5b5035919050565b60006020828403121561392357600080fd5b612a6e8261356e565b6000806040838503121561393f57600080fd5b6139488361356e565b91506136ec602084016132b0565b6000806040838503121561396957600080fd5b6139728361356e565b91506136ec6020840161356e565b60008060006060848603121561399557600080fd5b61399e8461356e565b92506139ac6020850161356e565b91506139ba604085016132b0565b90509250925092565b6000602082840312156139d557600080fd5b815160ff81168114612a6e57600080fd5b8060005b6002811015613a095781518452602093840193909101906001016139ea565b50505050565b60008151808452613a27816020860160208601613cf1565b601f01601f19169290920160200192915050565b815160009082906020808601845b83811015613a6557815185529382019390820190600101613a49565b50929695505050505050565b60008251613a83818460208701613cf1565b9190910192915050565b60008351613a9f818460208801613cf1565b835190830190613ab3818360208801613cf1565b01949350505050565b602081526000612a6e6020830184613a0f565b6000610120808301613aec84875180518252602090810151910152565b602080870151613b006040870182516139e6565b810151613b1060808701826139e6565b506040870151805160c08701526020015160e08601526101008501929092528451908190526101408401918581019160005b81811015613b5e57835185529382019392820192600101613b42565b5092979650505050505050565b8381528260208201526060604082015260006136456060830184613a0f565b6040805190810167ffffffffffffffff81118282101715613bad57613bad613e0b565b60405290565b60405160a0810167ffffffffffffffff81118282101715613bad57613bad613e0b565b604051610180810167ffffffffffffffff81118282101715613bad57613bad613e0b565b604051601f8201601f1916810167ffffffffffffffff81118282101715613c2357613c23613e0b565b604052919050565b600067ffffffffffffffff821115613c4557613c45613e0b565b5060051b60200190565b600067ffffffffffffffff821115613c6957613c69613e0b565b50601f01601f191660200190565b60008219821115613c8a57613c8a613db3565b500190565b600063ffffffff808316818516808303821115613ab357613ab3613db3565b600063ffffffff80831681851681830481118215151615613cd157613cd1613db3565b02949350505050565b600082821015613cec57613cec613db3565b500390565b60005b83811015613d0c578181015183820152602001613cf4565b83811115613a095750506000910152565b600063ffffffff821680613d3357613d33613db3565b6000190192915050565b6000600019821415613d5157613d51613db3565b5060010190565b600063ffffffff80831681811415613d7257613d72613db3565b6001019392505050565b600082613d8b57613d8b613dc9565b500690565b600063ffffffff80841680613da757613da7613dc9565b92169190910692915050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b80151581146123fd57600080fdfea26469706673582212201b08426538c308a404f9704d8cc0ca1a09675d6b2a8222a47c8d72a99ba23a8f64736f6c63430008070033';

type CommitmentPoolERC20ConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CommitmentPoolERC20ConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CommitmentPoolERC20__factory extends ContractFactory {
  constructor(...args: CommitmentPoolERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'CommitmentPoolERC20';
  }

  deploy(
    _treeHeight: BigNumberish,
    _rootHistoryLength: BigNumberish,
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<CommitmentPoolERC20> {
    return super.deploy(
      _treeHeight,
      _rootHistoryLength,
      _token,
      overrides || {},
    ) as Promise<CommitmentPoolERC20>;
  }
  getDeployTransaction(
    _treeHeight: BigNumberish,
    _rootHistoryLength: BigNumberish,
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(_treeHeight, _rootHistoryLength, _token, overrides || {});
  }
  attach(address: string): CommitmentPoolERC20 {
    return super.attach(address) as CommitmentPoolERC20;
  }
  connect(signer: Signer): CommitmentPoolERC20__factory {
    return super.connect(signer) as CommitmentPoolERC20__factory;
  }
  static readonly contractName: 'CommitmentPoolERC20';
  public readonly contractName: 'CommitmentPoolERC20';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CommitmentPoolERC20Interface {
    return new utils.Interface(_abi) as CommitmentPoolERC20Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): CommitmentPoolERC20 {
    return new Contract(address, _abi, signerOrProvider) as CommitmentPoolERC20;
  }
}
