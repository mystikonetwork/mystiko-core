import DefaultProtocol, {
  FIELD_SIZE,
  VERIFY_SK_SIZE,
  VERIFY_PK_SIZE,
  ENCRYPT_SK_SIZE,
  ENCRYPT_PK_SIZE,
  RANDOM_SK_SIZE,
  HASH_SIZE,
  MERKLE_TREE_LEVELS,
} from './default.js';

export default {
  FIELD_SIZE,
  VERIFY_SK_SIZE,
  VERIFY_PK_SIZE,
  ENCRYPT_SK_SIZE,
  ENCRYPT_PK_SIZE,
  RANDOM_SK_SIZE,
  HASH_SIZE,
  MERKLE_TREE_LEVELS,
  randomBigInt: DefaultProtocol.randomBigInt,
  randomBytes: DefaultProtocol.randomBytes,
  secretKeyForVerification: DefaultProtocol.secretKeyForVerification,
  publicKeyForVerification: DefaultProtocol.publicKeyForVerification,
  secretKeyForEncryption: DefaultProtocol.secretKeyForEncryption,
  publicKeyForEncryption: DefaultProtocol.publicKeyForEncryption,
  fullPublicKey: DefaultProtocol.fullPublicKey,
  fullSecretKey: DefaultProtocol.fullSecretKey,
  separatedPublicKeys: DefaultProtocol.separatedPublicKeys,
  separatedSecretKeys: DefaultProtocol.separatedSecretKeys,
  shieldedAddress: DefaultProtocol.shieldedAddress,
  isShieldedAddress: DefaultProtocol.isShieldedAddress,
  publicKeysFromShieldedAddress: DefaultProtocol.publicKeysFromShieldedAddress,
  encryptAsymmetric: DefaultProtocol.encryptAsymmetric,
  decryptAsymmetric: DefaultProtocol.decryptAsymmetric,
  encryptSymmetric: DefaultProtocol.encryptSymmetric,
  decryptSymmetric: DefaultProtocol.decryptSymmetric,
  hash: DefaultProtocol.hash,
  hash2: DefaultProtocol.hash2,
  checkSum: DefaultProtocol.checkSum,
  buffToBigInt: DefaultProtocol.buffToBigInt,
  bigIntToBuff: DefaultProtocol.bigIntToBuff,
  commitment: DefaultProtocol.commitment,
  commitmentWithShieldedAddress: DefaultProtocol.commitmentWithShieldedAddress,
  serialNumber: DefaultProtocol.serialNumber,
  zkProve: DefaultProtocol.zkProve,
  zkVerify: DefaultProtocol.zkVerify,
};
