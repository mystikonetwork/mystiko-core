/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides, BigNumberish } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { CommitmentPoolERC20, CommitmentPoolERC20Interface } from '../CommitmentPoolERC20';

const _abi = [
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_treeHeight',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '_rootHistoryLength',
        type: 'uint32',
      },
      {
        internalType: 'address',
        name: '_token',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
    ],
    name: 'CommitmentIncluded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'rollupFee',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'leafIndex',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'bytes',
        name: 'encryptedNote',
        type: 'bytes',
      },
    ],
    name: 'CommitmentQueued',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'rootHash',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'serialNumber',
        type: 'uint256',
      },
    ],
    name: 'CommitmentSpent',
    type: 'event',
  },
  {
    inputs: [],
    name: 'FIELD_SIZE',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_actor',
        type: 'address',
      },
    ],
    name: 'addInputWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_roller',
        type: 'address',
      },
    ],
    name: 'addRollupWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'asset',
    outputs: [
      {
        internalType: 'contract IERC20Metadata',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetDecimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetName',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetSymbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetType',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_newOperator',
        type: 'address',
      },
    ],
    name: 'changeOperator',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'commitmentIncludedCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'commitmentQueue',
    outputs: [
      {
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'rollupFee',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'commitmentQueueSize',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'currentRoot',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'currentRootIndex',
    outputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
    ],
    name: 'disableRollupVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_numInputs',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '_numOutputs',
        type: 'uint32',
      },
    ],
    name: 'disableTransactVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
      {
        internalType: 'address',
        name: '_rollupVerifier',
        type: 'address',
      },
    ],
    name: 'enableRollupVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_numInputs',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '_numOutputs',
        type: 'uint32',
      },
      {
        internalType: 'address',
        name: '_transactVerifier',
        type: 'address',
      },
    ],
    name: 'enableTransactVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
        ],
        internalType: 'struct ICommitmentPool.CommitmentRequest',
        name: '_request',
        type: 'tuple',
      },
      {
        internalType: 'address',
        name: '_executor',
        type: 'address',
      },
    ],
    name: 'enqueue',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'enqueueWhitelist',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'historicCommitments',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'root',
        type: 'uint256',
      },
    ],
    name: 'isKnownRoot',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isRollupWhitelistDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isVerifierUpdateDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'minRollupFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'operator',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_actor',
        type: 'address',
      },
    ],
    name: 'removeInputWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_roller',
        type: 'address',
      },
    ],
    name: 'removeRollupWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'a',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256[2]',
                    name: 'X',
                    type: 'uint256[2]',
                  },
                  {
                    internalType: 'uint256[2]',
                    name: 'Y',
                    type: 'uint256[2]',
                  },
                ],
                internalType: 'struct IVerifier.G2Point',
                name: 'b',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'c',
                type: 'tuple',
              },
            ],
            internalType: 'struct IVerifier.Proof',
            name: 'proof',
            type: 'tuple',
          },
          {
            internalType: 'uint32',
            name: 'rollupSize',
            type: 'uint32',
          },
          {
            internalType: 'uint256',
            name: 'newRoot',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'leafHash',
            type: 'uint256',
          },
        ],
        internalType: 'struct ICommitmentPool.RollupRequest',
        name: '_request',
        type: 'tuple',
      },
    ],
    name: 'rollup',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    name: 'rollupVerifiers',
    outputs: [
      {
        internalType: 'contract IVerifier',
        name: 'verifier',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'enabled',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'rollupWhitelist',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    name: 'rootHistory',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'rootHistoryLength',
    outputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sanctionsContract',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_minRollupFee',
        type: 'uint256',
      },
    ],
    name: 'setMinRollupFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'spentSerialNumbers',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'toggleRollupWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_check',
        type: 'bool',
      },
    ],
    name: 'toggleSanctionCheck',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'toggleVerifierUpdate',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'a',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256[2]',
                    name: 'X',
                    type: 'uint256[2]',
                  },
                  {
                    internalType: 'uint256[2]',
                    name: 'Y',
                    type: 'uint256[2]',
                  },
                ],
                internalType: 'struct IVerifier.G2Point',
                name: 'b',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'c',
                type: 'tuple',
              },
            ],
            internalType: 'struct IVerifier.Proof',
            name: 'proof',
            type: 'tuple',
          },
          {
            internalType: 'uint256',
            name: 'rootHash',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'serialNumbers',
            type: 'uint256[]',
          },
          {
            internalType: 'uint256[]',
            name: 'sigHashes',
            type: 'uint256[]',
          },
          {
            internalType: 'bytes32',
            name: 'sigPk',
            type: 'bytes32',
          },
          {
            internalType: 'uint256',
            name: 'publicAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'relayerFeeAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'outCommitments',
            type: 'uint256[]',
          },
          {
            internalType: 'uint256[]',
            name: 'outRollupFees',
            type: 'uint256[]',
          },
          {
            internalType: 'address',
            name: 'publicRecipient',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'relayerAddress',
            type: 'address',
          },
          {
            internalType: 'bytes[]',
            name: 'outEncryptedNotes',
            type: 'bytes[]',
          },
        ],
        internalType: 'struct ICommitmentPool.TransactRequest',
        name: '_request',
        type: 'tuple',
      },
      {
        internalType: 'bytes',
        name: '_signature',
        type: 'bytes',
      },
    ],
    name: 'transact',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    name: 'transactVerifiers',
    outputs: [
      {
        internalType: 'contract IVerifier',
        name: 'verifier',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'enabled',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'treeCapacity',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_sanction',
        type: 'address',
      },
    ],
    name: 'updateSanctionContractAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x60a0604052600180546001600160a81b0319167340c57923924b5c5c5455c48d93317139addac8fb17905560006007819055600855600b805463ffffffff191690553480156200004e57600080fd5b50604051620048e1380380620048e18339810160408190526200007191620008c9565b600160005580838363ffffffff8116620000e55760405162461bcd60e51b815260206004820152602b60248201527f5f726f6f74486973746f72794c656e6774682073686f756c642062652067726560448201526a061746572207468616e20360ac1b606482015260840160405180910390fd5b600b8054600160201b600160e01b03191633680100000000000000000263ffffffff60201b19161764010000000063ffffffff84811691909102919091179091556200013590831660026200096c565b608052620001438262000194565b600a819055600b5463ffffffff166000908152600960205260409020555050600f80546001600160a01b03909216620100000262010000600160b01b03199092169190911790555062000a4d915050565b600063ffffffff8216620001c957507f09f658457775074ff4c842032a5ec2f1134c32784cca59d594caac8c503b7923919050565b8163ffffffff16600114156200020057507f1a77569b79cb7c2eaf9368de9e3b1efc0a606561e5ab299c2337340f3cdd576a919050565b8163ffffffff16600214156200023757507f111bd0002b1e3b8f1978c932b5ccb2fab87fdb0acab2ddb266f9a346dcb11ee1919050565b8163ffffffff16600314156200026e57507f040868ea2a363e05d7ae44280f69b49e429ab096ca2844efe91f8d6b3dad57dd919050565b8163ffffffff1660041415620002a457507ef8f605c92c8502c8fe83be1b83b24e3f67312a388f30cbadb5dee8974137c3919050565b8163ffffffff1660051415620002db57507f1adc043c99adbc0c86a60a36db0f661e2dd96f36ede322f954386d8935a0c5d9919050565b8163ffffffff16600614156200031257507f2a1fedfa71da723ac3e9b35cef752fa1b647b2b737a23e91241cb7bdc419e3f4919050565b8163ffffffff16600714156200034957507f17fe1974543c4c4b228e1292f7e3200d31435fc910ee5a8c5cafd329cc4b256b919050565b8163ffffffff16600814156200038057507f0e84a586eb63a0eec0f1fe5785022441f0e29e4ae859c7ce1f5fc88a42ad2e6b919050565b8163ffffffff1660091415620003b757507f193deb901f6eeb032e02e093280db17e373d4ff52bafda9215b46bb9b0a86f3e919050565b8163ffffffff16600a1415620003ee57507f1d10ca7b985697cb519565a5006c3f44b020b2edab9b7422ed15dc34532f9406919050565b8163ffffffff16600b14156200042557507f1dc200763555467a4e583e00badfdc1fb4d3d3f8f1cc81f31fd2f8b387776081919050565b8163ffffffff16600c14156200045c57507f203dd11fdba0ed13b20ca2d6952f3feb7461836a03512e0cccce8467b320b2f6919050565b8163ffffffff16600d14156200049357507f0591af64e64a3e69caf23eee2bdea90885343a49f547ee9464e95d8d6267e4f7919050565b8163ffffffff16600e1415620004ca57507f2af572f1077a32f46dc8e307d43c0fa6753b400b2107325976b8df7380545ff6919050565b8163ffffffff16600f14156200050157507f043227ae4b70b1aacd04e35e6aaed7b56d91220c31e97aaf52e12a6a56984e52919050565b8163ffffffff16601014156200053857507f2976f1f6a91d83d4c528dad69ece6d3d91934b0e5657e915b360c8c4c2fb54e6919050565b8163ffffffff16601114156200056e57507ee5c251c9e093658be0cd1b0df55b6f70f3d09146c1c8b4212a4ddcde700dbc919050565b8163ffffffff1660121415620005a557507f0267cbbc1bc2f1c3e3073d2ee60df8cc0bfef39fe3cee735c9ad5c8ad30064d2919050565b8163ffffffff1660131415620005dc57507f2f356057bc56f67dbf159a0e8935022acd5e982dce9f4071adc43e4d57ce27e6919050565b8163ffffffff16601414156200061357507f273db68f52f12a9d8022ae524050064e42d4d1661c9bcce958acf89b5e8b127b919050565b8163ffffffff16601514156200064a57507f0496a18ad4cca81b7c98ceb197439ad925e0f7f62d69dfa42cf9574be77fe30f919050565b8163ffffffff16601614156200068157507f24f89a3f943d421b2f3a554b65459f42b820ac09d6fd9d693df5f8ba732ab596919050565b8163ffffffff1660171415620006b857507f1b55bfd751c6807df36876cdce68034ab43210be2bc8afa8043c7f428604e7a7919050565b8163ffffffff1660181415620006ef57507f16d6595a398cf20f2489b90e958166f1e19c537c0c46e9b8ea5462391ee8f143919050565b8163ffffffff16601914156200072657507f0f01447ef8f621592474b678ed2fc404ebaf22a6fce15364bb4152a88c113613919050565b8163ffffffff16601a14156200075d57507f026c2dffee48bacbc9d21cf90aa7c6e525ab01db6966a9e7e53b3d3f4d1f5a4d919050565b8163ffffffff16601b14156200079457507f234fe90732795745b2c504c791242a2bb193baa1cbeab57db9324b6bb9134817919050565b8163ffffffff16601c1415620007cb57507f23a8e0a7e60981c52ebb498c260d5bef4d7c65145d17128996a77c33a3262a7e919050565b8163ffffffff16601d14156200080257507f24ee69d2565210c7027ff6fc2657ed029278bc79f41077fe3281ea5d5d8e80f9919050565b8163ffffffff16601e14156200083957507f1de402fa32463bb2917b733aeef0197a49cacacd1fe860c3acc8cd3b65a30a68919050565b8163ffffffff16601f14156200087057507f1d3015a0f6a7b3f754171d0540628107e50e25debceb16e0e33ae4205501896d919050565b8163ffffffff1660201415620008a757507f264a260539342647256819046bae05bed903a8d19b3c90439d67317d5d881322919050565b506000919050565b805163ffffffff81168114620008c457600080fd5b919050565b600080600060608486031215620008df57600080fd5b620008ea84620008af565b9250620008fa60208501620008af565b60408501519092506001600160a01b03811681146200091857600080fd5b809150509250925092565b600181815b808511156200096457816000190482111562000948576200094862000a37565b808516156200095657918102915b93841c939080029062000928565b509250929050565b60006200097a838362000981565b9392505050565b600082620009925750600162000a31565b81620009a15750600062000a31565b8160018114620009ba5760028114620009c557620009e5565b600191505062000a31565b60ff841115620009d957620009d962000a37565b50506001821b62000a31565b5060208310610133831016604e8410600b841016171562000a0a575081810a62000a31565b62000a16838362000923565b806000190482111562000a2d5762000a2d62000a37565b0290505b92915050565b634e487b7160e01b600052601160045260246000fd5b608051613e6a62000a77600039600081816108a4015281816114730152611f090152613e6a6000f3fe6080604052600436106102dc5760003560e01c80639937e14711610184578063c2d41601116100d6578063de1559211161008a578063ee438d4a11610064578063ee438d4a14610945578063fdab463d14610965578063ffa89b881461097b57600080fd5b8063de155921146108c6578063deeff7cd146108dc578063e4ed5671146108fc57600080fd5b8063c9230c5d116100bb578063c9230c5d1461083b578063c9a6999c14610850578063c9abeb641461089257600080fd5b8063c2d41601146107e7578063c3098df91461080e57600080fd5b8063ac967fad11610138578063bc22be1411610112578063bc22be141461072b578063c19355391461075b578063c259e2e6146107c757600080fd5b8063ac967fad146106d0578063b4318ead146106e6578063ba9bd07d1461070657600080fd5b80639b0a6fea116101695780639b0a6fea146106705780639cc6b35414610690578063a6232a93146106b057600080fd5b80639937e1471461063a5780639ae39ca31461065057600080fd5b80634eb069f71161023d57806378d60cd7116101f15780637fa4b09c116101cb5780637fa4b09c146105b8578063806ae362146105d857806390eeb02b1461060857600080fd5b806378d60cd7146105485780637a9fff08146105685780637cbf0ff61461059857600080fd5b8063570ca73511610222578063570ca735146104d15780636e970a89146104f85780637013ea961461051857600080fd5b80634eb069f71461048757806353af27d5146104b157600080fd5b806334c33e83116102945780633fae882e116102795780633fae882e146103ec5780633fe3347a146103ff578063414a37ba1461044557600080fd5b806334c33e831461038e57806338d52e0f146103ae57600080fd5b806306394c9b116102c557806306394c9b1461032357806314a7737d14610343578063176de7a81461036357600080fd5b806302d498f1146102e157806305335faa14610303575b600080fd5b3480156102ed57600080fd5b506103016102fc366004613587565b61099a565b005b34801561030f57600080fd5b5061030161031e3660046135a2565b610a15565b34801561032f57600080fd5b5061030161033e366004613587565b610a81565b34801561034f57600080fd5b5061030161035e3660046136fa565b610b14565b34801561036f57600080fd5b50610378611167565b6040516103859190613ac1565b60405180910390f35b34801561039a57600080fd5b506103016103a9366004613587565b6111f8565b3480156103ba57600080fd5b50600f546103d4906201000090046001600160a01b031681565b6040516001600160a01b039091168152602001610385565b6103016103fa36600461376e565b611284565b34801561040b57600080fd5b5060408051808201909152600581527f65726332300000000000000000000000000000000000000000000000000000006020820152610378565b34801561045157600080fd5b506104797f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000181565b604051908152602001610385565b34801561049357600080fd5b50600f546104a19060ff1681565b6040519015158152602001610385565b3480156104bd57600080fd5b506001546103d4906001600160a01b031681565b3480156104dd57600080fd5b50600b546103d490600160401b90046001600160a01b031681565b34801561050457600080fd5b50610301610513366004613587565b611ddc565b34801561052457600080fd5b506104a1610533366004613587565b600d6020526000908152604090205460ff1681565b34801561055457600080fd5b506104a1610563366004613653565b611e52565b34801561057457600080fd5b506104a1610583366004613587565b600e6020526000908152604090205460ff1681565b3480156105a457600080fd5b506103016105b33660046138fd565b61203b565b3480156105c457600080fd5b506103016105d3366004613985565b6120e2565b3480156105e457600080fd5b506104a16105f33660046138fd565b60046020526000908152604090205460ff1681565b34801561061457600080fd5b50600b546106259063ffffffff1681565b60405163ffffffff9091168152602001610385565b34801561064657600080fd5b50610479600c5481565b34801561065c57600080fd5b5061030161066b3660046135a2565b612259565b34801561067c57600080fd5b5061030161068b366004613916565b6122be565b34801561069c57600080fd5b506103016106ab366004613587565b612403565b3480156106bc57600080fd5b506104a16106cb3660046138fd565b612476565b3480156106dc57600080fd5b5061047960075481565b3480156106f257600080fd5b506103016107013660046135a2565b6124f2565b34801561071257600080fd5b50600b5461062590640100000000900463ffffffff1681565b34801561073757600080fd5b506104a16107463660046138fd565b60056020526000908152604090205460ff1681565b34801561076757600080fd5b506107a861077636600461395b565b60026020908152600092835260408084209091529082529020546001600160a01b03811690600160a01b900460ff1682565b604080516001600160a01b039093168352901515602083015201610385565b3480156107d357600080fd5b506103016107e236600461395b565b612562565b3480156107f357600080fd5b506107fc6126cd565b60405160ff9091168152602001610385565b34801561081a57600080fd5b50610479610829366004613916565b60096020526000908152604090205481565b34801561084757600080fd5b50610378612755565b34801561085c57600080fd5b506107a861086b366004613916565b6003602052600090815260409020546001600160a01b03811690600160a01b900460ff1682565b34801561089e57600080fd5b506104797f000000000000000000000000000000000000000000000000000000000000000081565b3480156108d257600080fd5b5061047960085481565b3480156108e857600080fd5b506103016108f7366004613931565b6127a5565b34801561090857600080fd5b506109306109173660046138fd565b6006602052600090815260409020805460019091015482565b60408051928352602083019190915201610385565b34801561095157600080fd5b50610301610960366004613587565b61290a565b34801561097157600080fd5b50610479600a5481565b34801561098757600080fd5b50600f546104a190610100900460ff1681565b600b54600160401b90046001600160a01b031633146109f15760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b60448201526064015b60405180910390fd5b6001600160a01b03166000908152600d60205260409020805460ff19166001179055565b600b54600160401b90046001600160a01b03163314610a675760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b60448201526064016109e8565b600f80549115156101000261ff0019909216919091179055565b600b54600160401b90046001600160a01b03163314610ad35760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b60448201526064016109e8565b600b80546001600160a01b03909216600160401b027fffffffff0000000000000000000000000000000000000000ffffffffffffffff909216919091179055565b600f54610100900460ff1680610b395750336000908152600d602052604090205460ff165b610b855760405162461bcd60e51b815260206004820152601860248201527f4f6e6c792077686974656c697374656420726f6c6c65722e000000000000000060448201526064016109e8565b610b928160400151612476565b15610bdf5760405162461bcd60e51b815260206004820152601560248201527f6e6577526f6f74206973206475706c696361746564000000000000000000000060448201526064016109e8565b6000816020015163ffffffff16118015610c055750600754816020015163ffffffff1611155b8015610c32575060208181015163ffffffff16600090815260039091526040902054600160a01b900460ff165b610c735760405162461bcd60e51b8152602060048201526012602482015271696e76616c696420726f6c6c757053697a6560701b60448201526064016109e8565b806020015163ffffffff16600854610c8b9190613d81565b15610ce45760405162461bcd60e51b815260206004820152602360248201527f696e76616c696420726f6c6c757053697a652061742063757272656e7420737460448201526261746560e81b60648201526084016109e8565b6000610cf6600854836020015161297d565b90506000826020015163ffffffff1667ffffffffffffffff811115610d1d57610d1d613e10565b604051908082528060200260200182016040528015610d46578160200160208202803683370190505b506008549091506000905b846020015163ffffffff16600854610d699190613c7c565b811015610e9357600081815260066020526040902054610dcb5760405162461bcd60e51b815260206004820152601260248201527f696e646578206f7574206f6620626f756e64000000000000000000000000000060448201526064016109e8565b60008181526006602052604090205460085481908590610deb9085613cdf565b81518110610dfb57610dfb613dfa565b602002602001018181525050600660008381526020019081526020016000206001015483610e299190613c7c565b6000838152600660205260408120818155600190810191909155600754919450610e5291613cdf565b60075560405181907ffe6b097b46a78e08506a3143b6337c2505ba77df76fe05c3663a987395d6341390600090a25080610e8b81613d42565b915050610d51565b5060007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000183604051602001610ec89190613a40565b6040516020818303038152906040528051906020012060001c610eeb9190613d81565b905080856060015114610f405760405162461bcd60e51b815260206004820152601060248201527f696e76616c6964206c656166486173680000000000000000000000000000000060448201526064016109e8565b60408051600480825260a0820190925260009160208201608080368337019050509050600a5481600081518110610f7957610f79613dfa565b602002602001018181525050856040015181600181518110610f9d57610f9d613dfa565b602002602001018181525050856060015181600281518110610fc157610fc1613dfa565b6020026020010181815250508481600381518110610fe157610fe1613dfa565b6020908102919091018101919091528681015163ffffffff16600090815260039091526040808220548851915163c941764760e01b81526001600160a01b039091169163c94176479161103991908690600401613ad4565b602060405180830381600087803b15801561105357600080fd5b505af1158015611067573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061108b91906135bf565b9050806110da5760405162461bcd60e51b815260206004820152600d60248201527f696e76616c69642070726f6f660000000000000000000000000000000000000060448201526064016109e8565b6110e3846129b5565b866020015163ffffffff166008546110fb9190613c7c565b6008556040870151600a55600b5463ffffffff640100000000820481169161112591166001613c94565b61112f9190613d95565b600b805463ffffffff191663ffffffff9290921691821790556040978801516000918252600960205297902096909655505050505050565b6060600f60029054906101000a90046001600160a01b03166001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b1580156111b757600080fd5b505afa1580156111cb573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526111f391908101906135dc565b905090565b600b54600160401b90046001600160a01b0316331461124a5760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b60448201526064016109e8565b600180547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b600260005414156112d75760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016109e8565b600260008181556040848101515160e08601515163ffffffff808316855260209586528385209082168552909452912054909190600160a01b900460ff166113615760405162461bcd60e51b815260206004820152601260248201527f696e76616c696420692f6f206c656e677468000000000000000000000000000060448201526064016109e8565b8163ffffffff16846060015151146113bb5760405162461bcd60e51b815260206004820152601860248201527f696e76616c696420736967486173686573206c656e677468000000000000000060448201526064016109e8565b8063ffffffff1684610100015151146114165760405162461bcd60e51b815260206004820152601c60248201527f696e76616c6964206f7574526f6c6c757046656573206c656e6774680000000060448201526064016109e8565b8063ffffffff1684610160015151146114715760405162461bcd60e51b815260206004820181905260248201527f696e76616c6964206f7574456e637279707465644e6f746573206c656e67746860448201526064016109e8565b7f00000000000000000000000000000000000000000000000000000000000000008163ffffffff166007546008546114a99190613c7c565b6114b39190613c7c565b11156114f05760405162461bcd60e51b815260206004820152600c60248201526b1d1c9959481a5cc8199d5b1b60a21b60448201526064016109e8565b6114fe8461012001516129d2565b1561154b5760405162461bcd60e51b815260206004820152601260248201527f73616e6374696f6e65642061646472657373000000000000000000000000000060448201526064016109e8565b600061155685612a75565b905060006115648286612b8a565b60808701519091506001600160a01b038216146115c35760405162461bcd60e51b815260206004820152601160248201527f696e76616c6964207369676e617475726500000000000000000000000000000060448201526064016109e8565b60006115d0846002613cb3565b6115db866002613cb3565b6115e6906004613c94565b6115f09190613c94565b63ffffffff1667ffffffffffffffff81111561160e5761160e613e10565b604051908082528060200260200182016040528015611637578160200160208202803683370190505b5090506116478760200151612476565b6116935760405162461bcd60e51b815260206004820152600c60248201527f696e76616c696420726f6f74000000000000000000000000000000000000000060448201526064016109e8565b8660200151816000815181106116ab576116ab613dfa565b60200260200101818152505060005b8563ffffffff168163ffffffff16101561181d576005600089604001518363ffffffff16815181106116ee576116ee613dfa565b60209081029190910181015182528101919091526040016000205460ff16156117595760405162461bcd60e51b815260206004820152601760248201527f746865206e6f746520686173206265656e207370656e7400000000000000000060448201526064016109e8565b87604001518163ffffffff168151811061177557611775613dfa565b60200260200101518282600161178b9190613c94565b63ffffffff16815181106117a1576117a1613dfa565b60200260200101818152505087606001518163ffffffff16815181106117c9576117c9613dfa565b602002602001015182878360016117e09190613c94565b6117ea9190613c94565b63ffffffff168151811061180057611800613dfa565b60209081029190910101528061181581613d5d565b9150506116ba565b5060808701518161182f876002613cb3565b61183a906001613c94565b63ffffffff168151811061185057611850613dfa565b602090810291909101015260a08701518161186c876002613cb3565b611877906002613c94565b63ffffffff168151811061188d5761188d613dfa565b602090810291909101015260c0870151816118a9876002613cb3565b6118b4906003613c94565b63ffffffff16815181106118ca576118ca613dfa565b60200260200101818152505060005b8463ffffffff168163ffffffff161015611adf57600460008960e001518363ffffffff168151811061190d5761190d613dfa565b60209081029190910181015182528101919091526040016000205460ff16156119785760405162461bcd60e51b815260206004820152601460248201527f6475706c696361746520636f6d6d69746d656e7400000000000000000000000060448201526064016109e8565b600c548861010001518263ffffffff168151811061199857611998613dfa565b602002602001015110156119ee5760405162461bcd60e51b815260206004820152601260248201527f726f6c6c75702066656520746f6f206c6f77000000000000000000000000000060448201526064016109e8565b8760e001518163ffffffff1681518110611a0a57611a0a613dfa565b60200260200101518282886002611a219190613cb3565b611a2c906004613c94565b611a369190613c94565b63ffffffff1681518110611a4c57611a4c613dfa565b6020026020010181815250508761010001518163ffffffff1681518110611a7557611a75613dfa565b6020026020010151828287896002611a8d9190613cb3565b611a979190613c94565b611aa2906004613c94565b611aac9190613c94565b63ffffffff1681518110611ac257611ac2613dfa565b602090810291909101015280611ad781613d5d565b9150506118d9565b5063ffffffff80861660009081526002602090815260408083209388168352929052818120548951925163c941764760e01b815291926001600160a01b039091169163c941764791611b35918690600401613ad4565b602060405180830381600087803b158015611b4f57600080fd5b505af1158015611b63573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b8791906135bf565b905080611bd65760405162461bcd60e51b815260206004820152601660248201527f696e76616c6964207472616e736163742070726f6f660000000000000000000060448201526064016109e8565b60005b8663ffffffff168163ffffffff161015611ca3576001600560008b604001518463ffffffff1681518110611c0f57611c0f613dfa565b6020026020010151815260200190815260200160002060006101000a81548160ff02191690831515021790555088604001518163ffffffff1681518110611c5857611c58613dfa565b602002602001015189602001517f3c2372ab6130817bd6b8fc6dbaecae947e84201b49535d358debaa6c34c23ecf60405160405180910390a380611c9b81613d5d565b915050611bd9565b5060005b8563ffffffff168163ffffffff161015611d92576001600460008b60e001518463ffffffff1681518110611cdd57611cdd613dfa565b6020026020010151815260200190815260200160002060006101000a81548160ff021916908315150217905550611d808960e001518263ffffffff1681518110611d2957611d29613dfa565b60200260200101518a61010001518363ffffffff1681518110611d4e57611d4e613dfa565b60200260200101518b61016001518463ffffffff1681518110611d7357611d73613dfa565b6020026020010151612bae565b80611d8a81613d5d565b915050611ca7565b5060a088015115611db057611db08861012001518960a00151612c49565b60c088015115611dcd57611dcd8861014001518960c00151612c49565b50506001600055505050505050565b600b54600160401b90046001600160a01b03163314611e2e5760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b60448201526064016109e8565b6001600160a01b03166000908152600e60205260409020805460ff19166001179055565b336000908152600e602052604081205460ff16611eb15760405162461bcd60e51b815260206004820152601760248201527f4f6e6c792077686974656c697374656420696e7075742e00000000000000000060448201526064016109e8565b600c5483606001511015611f075760405162461bcd60e51b815260206004820152601260248201527f726f6c6c75702066656520746f6f20666577000000000000000000000000000060448201526064016109e8565b7f0000000000000000000000000000000000000000000000000000000000000000600754600854611f389190613c7c565b10611f745760405162461bcd60e51b815260206004820152600c60248201526b1d1c9959481a5cc8199d5b1b60a21b60448201526064016109e8565b60208084015160009081526004909152604090205460ff1615611fe35760405162461bcd60e51b815260206004820152602160248201527f74686520636f6d6d69746d656e7420686173206265656e207375626d697474656044820152601960fa1b60648201526084016109e8565b60208084018051600090815260049092526040909120805460ff19166001179055516060840151608085015161201a929190612bae565b60408301511561203257612032828460400151612c49565b50600192915050565b600b54600160401b90046001600160a01b0316331461208d5760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b60448201526064016109e8565b600081116120dd5760405162461bcd60e51b815260206004820152601560248201527f696e76616c6964205f6d696e526f6c6c7570466565000000000000000000000060448201526064016109e8565b600c55565b600b54600160401b90046001600160a01b031633146121345760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b60448201526064016109e8565b600f5460ff16156121935760405162461bcd60e51b8152602060048201526024808201527f566572696669657220757064617465732068617665206265656e2064697361626044820152633632b21760e11b60648201526084016109e8565b60008363ffffffff16116121e95760405162461bcd60e51b815260206004820152601460248201527f6e756d496e707574732073686f756c64203e203000000000000000000000000060448201526064016109e8565b6040805180820182526001600160a01b0392831681526001602080830191825263ffffffff9687166000908152600282528481209690971687529490945293209251835492511515600160a01b0274ffffffffffffffffffffffffffffffffffffffffff19909316911617179055565b600b54600160401b90046001600160a01b031633146122ab5760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b60448201526064016109e8565b600f805460ff1916911515919091179055565b600b54600160401b90046001600160a01b031633146123105760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b60448201526064016109e8565b60008163ffffffff161161235b5760405162461bcd60e51b8152602060048201526012602482015271696e76616c696420726f6c6c757053697a6560701b60448201526064016109e8565b600f5460ff16156123ba5760405162461bcd60e51b8152602060048201526024808201527f566572696669657220757064617465732068617665206265656e2064697361626044820152633632b21760e11b60648201526084016109e8565b63ffffffff8116600090815260036020526040902054600160a01b900460ff16156124005763ffffffff81166000908152600360205260409020805460ff60a01b191690555b50565b600b54600160401b90046001600160a01b031633146124555760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b60448201526064016109e8565b6001600160a01b03166000908152600d60205260409020805460ff19169055565b600b5460009063ffffffff165b63ffffffff81166000908152600960205260409020548314156124a95750600192915050565b63ffffffff81166124c75750600b54640100000000900463ffffffff165b806124d181613d22565b600b5490925063ffffffff8084169116141590506124835750600092915050565b600b54600160401b90046001600160a01b031633146125445760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b60448201526064016109e8565b60018054911515600160a01b0260ff60a01b19909216919091179055565b600b54600160401b90046001600160a01b031633146125b45760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b60448201526064016109e8565b600f5460ff16156126135760405162461bcd60e51b8152602060048201526024808201527f566572696669657220757064617465732068617665206265656e2064697361626044820152633632b21760e11b60648201526084016109e8565b60008263ffffffff16116126695760405162461bcd60e51b815260206004820152601460248201527f6e756d496e707574732073686f756c64203e203000000000000000000000000060448201526064016109e8565b63ffffffff828116600090815260026020908152604080832093851683529290522054600160a01b900460ff16156126c95763ffffffff8083166000908152600260209081526040808320938516835292905220805460ff60a01b191690555b5050565b6000600f60029054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561271d57600080fd5b505afa158015612731573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111f391906139c8565b6060600f60029054906101000a90046001600160a01b03166001600160a01b03166306fdde036040518163ffffffff1660e01b815260040160006040518083038186803b1580156111b757600080fd5b600b54600160401b90046001600160a01b031633146127f75760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b60448201526064016109e8565b600f5460ff16156128565760405162461bcd60e51b8152602060048201526024808201527f566572696669657220757064617465732068617665206265656e2064697361626044820152633632b21760e11b60648201526084016109e8565b60008263ffffffff16116128a15760405162461bcd60e51b8152602060048201526012602482015271696e76616c696420726f6c6c757053697a6560701b60448201526064016109e8565b6040805180820182526001600160a01b0392831681526001602080830191825263ffffffff90951660009081526003909552919093209251835491511515600160a01b0274ffffffffffffffffffffffffffffffffffffffffff19909216921691909117179055565b600b54600160401b90046001600160a01b0316331461295c5760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b60448201526064016109e8565b6001600160a01b03166000908152600e60205260409020805460ff19169055565b60011c637fffffff1660005b63ffffffff8216156129ae57600183901c925060018263ffffffff16901c9150612989565b5090919050565b600f54612400906201000090046001600160a01b03163383612c62565b600154600090600160a01b900460ff16156129ef57506001919050565b60015460405163df592f7d60e01b81526001600160a01b03848116600483015290911690819063df592f7d9060240160206040518083038186803b158015612a3657600080fd5b505afa158015612a4a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a6e91906135bf565b9392505050565b6101208101516101408201516040516bffffffffffffffffffffffff19606093841b811660208301529190921b1660348201526000908190604801604051602081830303815290604052905060005b836101600151518163ffffffff161015612b3357818461016001518263ffffffff1681518110612af657612af6613dfa565b6020026020010151604051602001612b0f929190613a92565b60405160208183030381529060405291508080612b2b90613d5d565b915050612ac4565b508051602080830191909120604080517f19457468657265756d205369676e6564204d6573736167653a0a33320000000081850152603c8082019390935281518082039093018352605c0190528051910120612a6e565b6000806000612b998585612cce565b91509150612ba681612d3e565b509392505050565b60408051808201825284815260208082018581526007805460009081526006909352938220925183555160019092019190915560085491549091612bf191613c7c565b90506007546001612c029190613c7c565b60075560405184907ff533f9705aac5020e21695ea3553ac7b6881070d2b6900ab2b1e3050304b5bf990612c3b90869085908790613b70565b60405180910390a250505050565b600f546126c9906201000090046001600160a01b031683835b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b179052612cc9908490612ef9565b505050565b600080825160411415612d055760208301516040840151606085015160001a612cf987828585612fde565b94509450505050612d37565b825160401415612d2f5760208301516040840151612d248683836130cb565b935093505050612d37565b506000905060025b9250929050565b6000816004811115612d5257612d52613de4565b1415612d5b5750565b6001816004811115612d6f57612d6f613de4565b1415612dbd5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016109e8565b6002816004811115612dd157612dd1613de4565b1415612e1f5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016109e8565b6003816004811115612e3357612e33613de4565b1415612e8c5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016109e8565b6004816004811115612ea057612ea0613de4565b14156124005760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016109e8565b6000612f4e826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661311d9092919063ffffffff16565b805190915015612cc95780806020019051810190612f6c91906135bf565b612cc95760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016109e8565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561301557506000905060036130c2565b8460ff16601b1415801561302d57508460ff16601c14155b1561303e57506000905060046130c2565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015613092573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166130bb576000600192509250506130c2565b9150600090505b94509492505050565b6000807f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83168161310160ff86901c601b613c7c565b905061310f87828885612fde565b935093505050935093915050565b606061312c8484600085613134565b949350505050565b6060824710156131ac5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016109e8565b6001600160a01b0385163b6132035760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016109e8565b600080866001600160a01b0316858760405161321f9190613a76565b60006040518083038185875af1925050503d806000811461325c576040519150601f19603f3d011682016040523d82523d6000602084013e613261565b606091505b509150915061327182828661327c565b979650505050505050565b6060831561328b575081612a6e565b82511561329b5782518084602001fd5b8160405162461bcd60e51b81526004016109e89190613ac1565b80356001600160a01b03811681146132cc57600080fd5b919050565b600082601f8301126132e257600080fd5b813560206132f76132f283613c30565b613bff565b80838252828201915082860187848660051b890101111561331757600080fd5b6000805b8681101561335a57823567ffffffffffffffff811115613339578283fd5b6133478b88838d010161342d565b865250938501939185019160010161331b565b509198975050505050505050565b600082601f83011261337957600080fd5b613381613b8f565b80838560408601111561339357600080fd5b60005b60028110156133b5578135845260209384019390910190600101613396565b509095945050505050565b600082601f8301126133d157600080fd5b813560206133e16132f283613c30565b80838252828201915082860187848660051b890101111561340157600080fd5b60005b8581101561342057813584529284019290840190600101613404565b5090979650505050505050565b600082601f83011261343e57600080fd5b813561344c6132f282613c54565b81815284602083860101111561346157600080fd5b816020850160208301376000918101602001919091529392505050565b60006040828403121561349057600080fd5b6040516040810181811067ffffffffffffffff821117156134b3576134b3613e10565b604052823581526020928301359281019290925250919050565b60008183036101008112156134e157600080fd5b6040516060810181811067ffffffffffffffff8211171561350457613504613e10565b604052915081613514858561347e565b81526080603f198301121561352857600080fd5b613530613b8f565b915061353f8560408601613368565b825261354e8560808601613368565b60208301528160208201526135668560c0860161347e565b6040820152505092915050565b803563ffffffff811681146132cc57600080fd5b60006020828403121561359957600080fd5b612a6e826132b5565b6000602082840312156135b457600080fd5b8135612a6e81613e26565b6000602082840312156135d157600080fd5b8151612a6e81613e26565b6000602082840312156135ee57600080fd5b815167ffffffffffffffff81111561360557600080fd5b8201601f8101841361361657600080fd5b80516136246132f282613c54565b81815285602083850101111561363957600080fd5b61364a826020830160208601613cf6565b95945050505050565b6000806040838503121561366657600080fd5b823567ffffffffffffffff8082111561367e57600080fd5b9084019060a0828703121561369257600080fd5b61369a613bb8565b823581526020830135602082015260408301356040820152606083013560608201526080830135828111156136ce57600080fd5b6136da8882860161342d565b60808301525093506136f1915050602084016132b5565b90509250929050565b6000610160828403121561370d57600080fd5b6040516080810181811067ffffffffffffffff8211171561373057613730613e10565b60405261373d84846134cd565b815261374c6101008401613573565b6020820152610120830135604082015261014090920135606083015250919050565b6000806040838503121561378157600080fd5b823567ffffffffffffffff8082111561379957600080fd5b9084019061026082870312156137ae57600080fd5b6137b6613bdb565b6137c087846134cd565b815261010080840135602083015261012080850135848111156137e257600080fd5b6137ee8a8288016133c0565b604085015250610140808601358581111561380857600080fd5b6138148b8289016133c0565b60608601525061016080870135608086015261018087013560a08601526101a087013560c08601526101c08701358681111561384f57600080fd5b61385b8c828a016133c0565b60e0870152506101e08701358681111561387457600080fd5b6138808c828a016133c0565b858701525061389261020088016132b5565b838601526138a361022088016132b5565b828601526102408701359350858411156138bc57600080fd5b6138c88b8589016132d1565b9085015250919550505060208501359150808211156138e657600080fd5b506138f38582860161342d565b9150509250929050565b60006020828403121561390f57600080fd5b5035919050565b60006020828403121561392857600080fd5b612a6e82613573565b6000806040838503121561394457600080fd5b61394d83613573565b91506136f1602084016132b5565b6000806040838503121561396e57600080fd5b61397783613573565b91506136f160208401613573565b60008060006060848603121561399a57600080fd5b6139a384613573565b92506139b160208501613573565b91506139bf604085016132b5565b90509250925092565b6000602082840312156139da57600080fd5b815160ff81168114612a6e57600080fd5b8060005b6002811015613a0e5781518452602093840193909101906001016139ef565b50505050565b60008151808452613a2c816020860160208601613cf6565b601f01601f19169290920160200192915050565b815160009082906020808601845b83811015613a6a57815185529382019390820190600101613a4e565b50929695505050505050565b60008251613a88818460208701613cf6565b9190910192915050565b60008351613aa4818460208801613cf6565b835190830190613ab8818360208801613cf6565b01949350505050565b602081526000612a6e6020830184613a14565b6000610120808301613af184875180518252602090810151910152565b602080870151613b056040870182516139eb565b810151613b1560808701826139eb565b506040870151805160c08701526020015160e08601526101008501929092528451908190526101408401918581019160005b81811015613b6357835185529382019392820192600101613b47565b5092979650505050505050565b83815282602082015260606040820152600061364a6060830184613a14565b6040805190810167ffffffffffffffff81118282101715613bb257613bb2613e10565b60405290565b60405160a0810167ffffffffffffffff81118282101715613bb257613bb2613e10565b604051610180810167ffffffffffffffff81118282101715613bb257613bb2613e10565b604051601f8201601f1916810167ffffffffffffffff81118282101715613c2857613c28613e10565b604052919050565b600067ffffffffffffffff821115613c4a57613c4a613e10565b5060051b60200190565b600067ffffffffffffffff821115613c6e57613c6e613e10565b50601f01601f191660200190565b60008219821115613c8f57613c8f613db8565b500190565b600063ffffffff808316818516808303821115613ab857613ab8613db8565b600063ffffffff80831681851681830481118215151615613cd657613cd6613db8565b02949350505050565b600082821015613cf157613cf1613db8565b500390565b60005b83811015613d11578181015183820152602001613cf9565b83811115613a0e5750506000910152565b600063ffffffff821680613d3857613d38613db8565b6000190192915050565b6000600019821415613d5657613d56613db8565b5060010190565b600063ffffffff80831681811415613d7757613d77613db8565b6001019392505050565b600082613d9057613d90613dce565b500690565b600063ffffffff80841680613dac57613dac613dce565b92169190910692915050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b801515811461240057600080fdfea26469706673582212204ca98dd10c859ee3199fd6cbca5c2851f597d76be75992ac08abc6bad2d1221a64736f6c63430008070033';

type CommitmentPoolERC20ConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CommitmentPoolERC20ConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CommitmentPoolERC20__factory extends ContractFactory {
  constructor(...args: CommitmentPoolERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'CommitmentPoolERC20';
  }

  deploy(
    _treeHeight: BigNumberish,
    _rootHistoryLength: BigNumberish,
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<CommitmentPoolERC20> {
    return super.deploy(
      _treeHeight,
      _rootHistoryLength,
      _token,
      overrides || {},
    ) as Promise<CommitmentPoolERC20>;
  }
  getDeployTransaction(
    _treeHeight: BigNumberish,
    _rootHistoryLength: BigNumberish,
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(_treeHeight, _rootHistoryLength, _token, overrides || {});
  }
  attach(address: string): CommitmentPoolERC20 {
    return super.attach(address) as CommitmentPoolERC20;
  }
  connect(signer: Signer): CommitmentPoolERC20__factory {
    return super.connect(signer) as CommitmentPoolERC20__factory;
  }
  static readonly contractName: 'CommitmentPoolERC20';
  public readonly contractName: 'CommitmentPoolERC20';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CommitmentPoolERC20Interface {
    return new utils.Interface(_abi) as CommitmentPoolERC20Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): CommitmentPoolERC20 {
    return new Contract(address, _abi, signerOrProvider) as CommitmentPoolERC20;
  }
}
