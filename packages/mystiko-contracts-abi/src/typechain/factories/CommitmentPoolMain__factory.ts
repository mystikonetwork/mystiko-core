/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides, BigNumberish } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { CommitmentPoolMain, CommitmentPoolMainInterface } from '../CommitmentPoolMain';

const _abi = [
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_treeHeight',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '_rootHistoryLength',
        type: 'uint32',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
    ],
    name: 'CommitmentIncluded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'rollupFee',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'leafIndex',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'bytes',
        name: 'encryptedNote',
        type: 'bytes',
      },
    ],
    name: 'CommitmentQueued',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'rootHash',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'serialNumber',
        type: 'uint256',
      },
    ],
    name: 'CommitmentSpent',
    type: 'event',
  },
  {
    inputs: [],
    name: 'FIELD_SIZE',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_actor',
        type: 'address',
      },
    ],
    name: 'addInputWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_roller',
        type: 'address',
      },
    ],
    name: 'addRollupWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetType',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_newOperator',
        type: 'address',
      },
    ],
    name: 'changeOperator',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'commitmentIncludedCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'commitmentQueue',
    outputs: [
      {
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'rollupFee',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'commitmentQueueSize',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'currentRoot',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'currentRootIndex',
    outputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
    ],
    name: 'disableRollupVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_numInputs',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '_numOutputs',
        type: 'uint32',
      },
    ],
    name: 'disableTransactVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
      {
        internalType: 'address',
        name: '_rollupVerifier',
        type: 'address',
      },
    ],
    name: 'enableRollupVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_numInputs',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '_numOutputs',
        type: 'uint32',
      },
      {
        internalType: 'address',
        name: '_transactVerifier',
        type: 'address',
      },
    ],
    name: 'enableTransactVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
        ],
        internalType: 'struct ICommitmentPool.CommitmentRequest',
        name: '_request',
        type: 'tuple',
      },
      {
        internalType: 'address',
        name: '_executor',
        type: 'address',
      },
    ],
    name: 'enqueue',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'enqueueWhitelist',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'historicCommitments',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'root',
        type: 'uint256',
      },
    ],
    name: 'isKnownRoot',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isRollupWhitelistDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isVerifierUpdateDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'minRollupFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'operator',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_actor',
        type: 'address',
      },
    ],
    name: 'removeInputWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_roller',
        type: 'address',
      },
    ],
    name: 'removeRollupWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'a',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256[2]',
                    name: 'X',
                    type: 'uint256[2]',
                  },
                  {
                    internalType: 'uint256[2]',
                    name: 'Y',
                    type: 'uint256[2]',
                  },
                ],
                internalType: 'struct IVerifier.G2Point',
                name: 'b',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'c',
                type: 'tuple',
              },
            ],
            internalType: 'struct IVerifier.Proof',
            name: 'proof',
            type: 'tuple',
          },
          {
            internalType: 'uint32',
            name: 'rollupSize',
            type: 'uint32',
          },
          {
            internalType: 'uint256',
            name: 'newRoot',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'leafHash',
            type: 'uint256',
          },
        ],
        internalType: 'struct ICommitmentPool.RollupRequest',
        name: '_request',
        type: 'tuple',
      },
    ],
    name: 'rollup',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    name: 'rollupVerifiers',
    outputs: [
      {
        internalType: 'contract IVerifier',
        name: 'verifier',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'enabled',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'rollupWhitelist',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    name: 'rootHistory',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'rootHistoryLength',
    outputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sanctionsContract',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_minRollupFee',
        type: 'uint256',
      },
    ],
    name: 'setMinRollupFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'spentSerialNumbers',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'toggleRollupWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'toggleVerifierUpdate',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'a',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256[2]',
                    name: 'X',
                    type: 'uint256[2]',
                  },
                  {
                    internalType: 'uint256[2]',
                    name: 'Y',
                    type: 'uint256[2]',
                  },
                ],
                internalType: 'struct IVerifier.G2Point',
                name: 'b',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'c',
                type: 'tuple',
              },
            ],
            internalType: 'struct IVerifier.Proof',
            name: 'proof',
            type: 'tuple',
          },
          {
            internalType: 'uint256',
            name: 'rootHash',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'serialNumbers',
            type: 'uint256[]',
          },
          {
            internalType: 'uint256[]',
            name: 'sigHashes',
            type: 'uint256[]',
          },
          {
            internalType: 'bytes32',
            name: 'sigPk',
            type: 'bytes32',
          },
          {
            internalType: 'uint256',
            name: 'publicAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'relayerFeeAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'outCommitments',
            type: 'uint256[]',
          },
          {
            internalType: 'uint256[]',
            name: 'outRollupFees',
            type: 'uint256[]',
          },
          {
            internalType: 'address',
            name: 'publicRecipient',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'relayerAddress',
            type: 'address',
          },
          {
            internalType: 'bytes[]',
            name: 'outEncryptedNotes',
            type: 'bytes[]',
          },
        ],
        internalType: 'struct ICommitmentPool.TransactRequest',
        name: '_request',
        type: 'tuple',
      },
      {
        internalType: 'bytes',
        name: '_signature',
        type: 'bytes',
      },
    ],
    name: 'transact',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    name: 'transactVerifiers',
    outputs: [
      {
        internalType: 'contract IVerifier',
        name: 'verifier',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'enabled',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'treeCapacity',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_check',
        type: 'bool',
      },
    ],
    name: 'updateSanctionCheck',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_sanction',
        type: 'address',
      },
    ],
    name: 'updateSanctionContractAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    stateMutability: 'payable',
    type: 'receive',
  },
];

const _bytecode =
  '0x60a0604052600180546001600160a81b031916740140c57923924b5c5c5455c48d93317139addac8fb17905560006007819055600855600b805463ffffffff191690553480156200004f57600080fd5b506040516200446a3803806200446a8339810160408190526200007291620008a0565b6001600055818163ffffffff8116620000e55760405162461bcd60e51b815260206004820152602b60248201527f5f726f6f74486973746f72794c656e6774682073686f756c642062652067726560448201526a061746572207468616e20360ac1b606482015260840160405180910390fd5b600b8054600160201b600160e01b03191633680100000000000000000263ffffffff60201b19161764010000000063ffffffff848116919091029190911790915562000135908316600262000921565b60805262000143826200016b565b600a819055600b5463ffffffff166000908152600960205260409020555062000a0292505050565b600063ffffffff8216620001a057507f09f658457775074ff4c842032a5ec2f1134c32784cca59d594caac8c503b7923919050565b8163ffffffff1660011415620001d757507f1a77569b79cb7c2eaf9368de9e3b1efc0a606561e5ab299c2337340f3cdd576a919050565b8163ffffffff16600214156200020e57507f111bd0002b1e3b8f1978c932b5ccb2fab87fdb0acab2ddb266f9a346dcb11ee1919050565b8163ffffffff16600314156200024557507f040868ea2a363e05d7ae44280f69b49e429ab096ca2844efe91f8d6b3dad57dd919050565b8163ffffffff16600414156200027b57507ef8f605c92c8502c8fe83be1b83b24e3f67312a388f30cbadb5dee8974137c3919050565b8163ffffffff1660051415620002b257507f1adc043c99adbc0c86a60a36db0f661e2dd96f36ede322f954386d8935a0c5d9919050565b8163ffffffff1660061415620002e957507f2a1fedfa71da723ac3e9b35cef752fa1b647b2b737a23e91241cb7bdc419e3f4919050565b8163ffffffff16600714156200032057507f17fe1974543c4c4b228e1292f7e3200d31435fc910ee5a8c5cafd329cc4b256b919050565b8163ffffffff16600814156200035757507f0e84a586eb63a0eec0f1fe5785022441f0e29e4ae859c7ce1f5fc88a42ad2e6b919050565b8163ffffffff16600914156200038e57507f193deb901f6eeb032e02e093280db17e373d4ff52bafda9215b46bb9b0a86f3e919050565b8163ffffffff16600a1415620003c557507f1d10ca7b985697cb519565a5006c3f44b020b2edab9b7422ed15dc34532f9406919050565b8163ffffffff16600b1415620003fc57507f1dc200763555467a4e583e00badfdc1fb4d3d3f8f1cc81f31fd2f8b387776081919050565b8163ffffffff16600c14156200043357507f203dd11fdba0ed13b20ca2d6952f3feb7461836a03512e0cccce8467b320b2f6919050565b8163ffffffff16600d14156200046a57507f0591af64e64a3e69caf23eee2bdea90885343a49f547ee9464e95d8d6267e4f7919050565b8163ffffffff16600e1415620004a157507f2af572f1077a32f46dc8e307d43c0fa6753b400b2107325976b8df7380545ff6919050565b8163ffffffff16600f1415620004d857507f043227ae4b70b1aacd04e35e6aaed7b56d91220c31e97aaf52e12a6a56984e52919050565b8163ffffffff16601014156200050f57507f2976f1f6a91d83d4c528dad69ece6d3d91934b0e5657e915b360c8c4c2fb54e6919050565b8163ffffffff16601114156200054557507ee5c251c9e093658be0cd1b0df55b6f70f3d09146c1c8b4212a4ddcde700dbc919050565b8163ffffffff16601214156200057c57507f0267cbbc1bc2f1c3e3073d2ee60df8cc0bfef39fe3cee735c9ad5c8ad30064d2919050565b8163ffffffff1660131415620005b357507f2f356057bc56f67dbf159a0e8935022acd5e982dce9f4071adc43e4d57ce27e6919050565b8163ffffffff1660141415620005ea57507f273db68f52f12a9d8022ae524050064e42d4d1661c9bcce958acf89b5e8b127b919050565b8163ffffffff16601514156200062157507f0496a18ad4cca81b7c98ceb197439ad925e0f7f62d69dfa42cf9574be77fe30f919050565b8163ffffffff16601614156200065857507f24f89a3f943d421b2f3a554b65459f42b820ac09d6fd9d693df5f8ba732ab596919050565b8163ffffffff16601714156200068f57507f1b55bfd751c6807df36876cdce68034ab43210be2bc8afa8043c7f428604e7a7919050565b8163ffffffff1660181415620006c657507f16d6595a398cf20f2489b90e958166f1e19c537c0c46e9b8ea5462391ee8f143919050565b8163ffffffff1660191415620006fd57507f0f01447ef8f621592474b678ed2fc404ebaf22a6fce15364bb4152a88c113613919050565b8163ffffffff16601a14156200073457507f026c2dffee48bacbc9d21cf90aa7c6e525ab01db6966a9e7e53b3d3f4d1f5a4d919050565b8163ffffffff16601b14156200076b57507f234fe90732795745b2c504c791242a2bb193baa1cbeab57db9324b6bb9134817919050565b8163ffffffff16601c1415620007a257507f23a8e0a7e60981c52ebb498c260d5bef4d7c65145d17128996a77c33a3262a7e919050565b8163ffffffff16601d1415620007d957507f24ee69d2565210c7027ff6fc2657ed029278bc79f41077fe3281ea5d5d8e80f9919050565b8163ffffffff16601e14156200081057507f1de402fa32463bb2917b733aeef0197a49cacacd1fe860c3acc8cd3b65a30a68919050565b8163ffffffff16601f14156200084757507f1d3015a0f6a7b3f754171d0540628107e50e25debceb16e0e33ae4205501896d919050565b8163ffffffff16602014156200087e57507f264a260539342647256819046bae05bed903a8d19b3c90439d67317d5d881322919050565b506000919050565b805163ffffffff811681146200089b57600080fd5b919050565b60008060408385031215620008b457600080fd5b620008bf8362000886565b9150620008cf6020840162000886565b90509250929050565b600181815b8085111562000919578160001904821115620008fd57620008fd620009ec565b808516156200090b57918102915b93841c9390800290620008dd565b509250929050565b60006200092f838362000936565b9392505050565b6000826200094757506001620009e6565b816200095657506000620009e6565b81600181146200096f57600281146200097a576200099a565b6001915050620009e6565b60ff8411156200098e576200098e620009ec565b50506001821b620009e6565b5060208310610133831016604e8410600b8410161715620009bf575081810a620009e6565b620009cb8383620008d8565b8060001904821115620009e257620009e2620009ec565b0290505b92915050565b634e487b7160e01b600052601160045260246000fd5b608051613a3e62000a2c600039600081816107dc0152818161138a0152611dca0152613a3e6000f3fe6080604052600436106102a45760003560e01c806390eeb02b1161016e578063c259e2e6116100cb578063deeff7cd1161007f578063ee438d4a11610064578063ee438d4a1461087d578063fdab463d1461089d578063ffa89b88146108b357600080fd5b8063deeff7cd14610814578063e4ed56711461083457600080fd5b8063c9a6999c116100b0578063c9a6999c14610788578063c9abeb64146107ca578063de155921146107fe57600080fd5b8063c259e2e61461073b578063c3098df91461075b57600080fd5b8063a6232a9311610122578063ba9bd07d11610107578063ba9bd07d1461067a578063bc22be141461069f578063c1935539146106cf57600080fd5b8063a6232a9314610644578063ac967fad1461066457600080fd5b80639ae39ca3116101535780639ae39ca3146105e45780639b0a6fea146106045780639cc6b3541461062457600080fd5b806390eeb02b1461059c5780639937e147146105ce57600080fd5b80634eb069f71161021c57806378d60cd7116101d05780637cbf0ff6116101b55780637cbf0ff61461052c5780637fa4b09c1461054c578063806ae3621461056c57600080fd5b806378d60cd7146104dc5780637a9fff08146104fc57600080fd5b8063570ca73511610201578063570ca735146104655780636e970a891461048c5780637013ea96146104ac57600080fd5b80634eb069f71461040357806353af27d51461042d57600080fd5b80632994d0e4116102735780633fae882e116102585780633fae882e146103725780633fe3347a14610385578063414a37ba146103c157600080fd5b80632994d0e41461033257806334c33e831461035257600080fd5b806302d498f1146102b057806305335faa146102d257806306394c9b146102f257806314a7737d1461031257600080fd5b366102ab57005b600080fd5b3480156102bc57600080fd5b506102d06102cb366004613230565b6108d2565b005b3480156102de57600080fd5b506102d06102ed36600461324b565b61094d565b3480156102fe57600080fd5b506102d061030d366004613230565b6109b9565b34801561031e57600080fd5b506102d061032d36600461332c565b610a4c565b34801561033e57600080fd5b506102d061034d36600461324b565b61109f565b34801561035e57600080fd5b506102d061036d366004613230565b61110f565b6102d06103803660046133a0565b61119b565b34801561039157600080fd5b50604080518082018252600481526336b0b4b760e11b602082015290516103b891906136b4565b60405180910390f35b3480156103cd57600080fd5b506103f57f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000181565b6040519081526020016103b8565b34801561040f57600080fd5b50600f5461041d9060ff1681565b60405190151581526020016103b8565b34801561043957600080fd5b5060015461044d906001600160a01b031681565b6040516001600160a01b0390911681526020016103b8565b34801561047157600080fd5b50600b5461044d90600160401b90046001600160a01b031681565b34801561049857600080fd5b506102d06104a7366004613230565b611cf3565b3480156104b857600080fd5b5061041d6104c7366004613230565b600d6020526000908152604090205460ff1681565b3480156104e857600080fd5b5061041d6104f7366004613285565b611d69565b34801561050857600080fd5b5061041d610517366004613230565b600e6020526000908152604090205460ff1681565b34801561053857600080fd5b506102d061054736600461352f565b611efc565b34801561055857600080fd5b506102d06105673660046135b7565b611fa3565b34801561057857600080fd5b5061041d61058736600461352f565b60046020526000908152604090205460ff1681565b3480156105a857600080fd5b50600b546105b99063ffffffff1681565b60405163ffffffff90911681526020016103b8565b3480156105da57600080fd5b506103f5600c5481565b3480156105f057600080fd5b506102d06105ff36600461324b565b61211a565b34801561061057600080fd5b506102d061061f366004613548565b61217f565b34801561063057600080fd5b506102d061063f366004613230565b6122c4565b34801561065057600080fd5b5061041d61065f36600461352f565b612337565b34801561067057600080fd5b506103f560075481565b34801561068657600080fd5b50600b546105b990640100000000900463ffffffff1681565b3480156106ab57600080fd5b5061041d6106ba36600461352f565b60056020526000908152604090205460ff1681565b3480156106db57600080fd5b5061071c6106ea36600461358d565b60026020908152600092835260408084209091529082529020546001600160a01b03811690600160a01b900460ff1682565b604080516001600160a01b0390931683529015156020830152016103b8565b34801561074757600080fd5b506102d061075636600461358d565b6123b3565b34801561076757600080fd5b506103f5610776366004613548565b60096020526000908152604090205481565b34801561079457600080fd5b5061071c6107a3366004613548565b6003602052600090815260409020546001600160a01b03811690600160a01b900460ff1682565b3480156107d657600080fd5b506103f57f000000000000000000000000000000000000000000000000000000000000000081565b34801561080a57600080fd5b506103f560085481565b34801561082057600080fd5b506102d061082f366004613563565b61251e565b34801561084057600080fd5b5061086861084f36600461352f565b6006602052600090815260409020805460019091015482565b604080519283526020830191909152016103b8565b34801561088957600080fd5b506102d0610898366004613230565b612683565b3480156108a957600080fd5b506103f5600a5481565b3480156108bf57600080fd5b50600f5461041d90610100900460ff1681565b600b54600160401b90046001600160a01b031633146109295760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b60448201526064015b60405180910390fd5b6001600160a01b03166000908152600d60205260409020805460ff19166001179055565b600b54600160401b90046001600160a01b0316331461099f5760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b6044820152606401610920565b600f80549115156101000261ff0019909216919091179055565b600b54600160401b90046001600160a01b03163314610a0b5760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b6044820152606401610920565b600b80546001600160a01b03909216600160401b027fffffffff0000000000000000000000000000000000000000ffffffffffffffff909216919091179055565b600f54610100900460ff1680610a715750336000908152600d602052604090205460ff165b610abd5760405162461bcd60e51b815260206004820152601860248201527f4f6e6c792077686974656c697374656420726f6c6c65722e00000000000000006044820152606401610920565b610aca8160400151612337565b15610b175760405162461bcd60e51b815260206004820152601560248201527f6e6577526f6f74206973206475706c69636174656400000000000000000000006044820152606401610920565b6000816020015163ffffffff16118015610b3d5750600754816020015163ffffffff1611155b8015610b6a575060208181015163ffffffff16600090815260039091526040902054600160a01b900460ff165b610bab5760405162461bcd60e51b8152602060048201526012602482015271696e76616c696420726f6c6c757053697a6560701b6044820152606401610920565b806020015163ffffffff16600854610bc39190613955565b15610c1c5760405162461bcd60e51b815260206004820152602360248201527f696e76616c696420726f6c6c757053697a652061742063757272656e7420737460448201526261746560e81b6064820152608401610920565b6000610c2e60085483602001516126f6565b90506000826020015163ffffffff1667ffffffffffffffff811115610c5557610c556139e4565b604051908082528060200260200182016040528015610c7e578160200160208202803683370190505b506008549091506000905b846020015163ffffffff16600854610ca19190613850565b811015610dcb57600081815260066020526040902054610d035760405162461bcd60e51b815260206004820152601260248201527f696e646578206f7574206f6620626f756e6400000000000000000000000000006044820152606401610920565b60008181526006602052604090205460085481908590610d2390856138b3565b81518110610d3357610d336139ce565b602002602001018181525050600660008381526020019081526020016000206001015483610d619190613850565b6000838152600660205260408120818155600190810191909155600754919450610d8a916138b3565b60075560405181907ffe6b097b46a78e08506a3143b6337c2505ba77df76fe05c3663a987395d6341390600090a25080610dc381613916565b915050610c89565b5060007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000183604051602001610e00919061364f565b6040516020818303038152906040528051906020012060001c610e239190613955565b905080856060015114610e785760405162461bcd60e51b815260206004820152601060248201527f696e76616c6964206c65616648617368000000000000000000000000000000006044820152606401610920565b60408051600480825260a0820190925260009160208201608080368337019050509050600a5481600081518110610eb157610eb16139ce565b602002602001018181525050856040015181600181518110610ed557610ed56139ce565b602002602001018181525050856060015181600281518110610ef957610ef96139ce565b6020026020010181815250508481600381518110610f1957610f196139ce565b6020908102919091018101919091528681015163ffffffff16600090815260039091526040808220548851915163c941764760e01b81526001600160a01b039091169163c941764791610f71919086906004016136c7565b602060405180830381600087803b158015610f8b57600080fd5b505af1158015610f9f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fc39190613268565b9050806110125760405162461bcd60e51b815260206004820152600d60248201527f696e76616c69642070726f6f66000000000000000000000000000000000000006044820152606401610920565b61101b8461272e565b866020015163ffffffff166008546110339190613850565b6008556040870151600a55600b5463ffffffff640100000000820481169161105d91166001613868565b6110679190613969565b600b805463ffffffff191663ffffffff9290921691821790556040978801516000918252600960205297902096909655505050505050565b600b54600160401b90046001600160a01b031633146110f15760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b6044820152606401610920565b60018054911515600160a01b0260ff60a01b19909216919091179055565b600b54600160401b90046001600160a01b031633146111615760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b6044820152606401610920565b600180547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b600260005414156111ee5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610920565b600260008181556040848101515160e08601515163ffffffff808316855260209586528385209082168552909452912054909190600160a01b900460ff166112785760405162461bcd60e51b815260206004820152601260248201527f696e76616c696420692f6f206c656e67746800000000000000000000000000006044820152606401610920565b8163ffffffff16846060015151146112d25760405162461bcd60e51b815260206004820152601860248201527f696e76616c696420736967486173686573206c656e67746800000000000000006044820152606401610920565b8063ffffffff16846101000151511461132d5760405162461bcd60e51b815260206004820152601c60248201527f696e76616c6964206f7574526f6c6c757046656573206c656e677468000000006044820152606401610920565b8063ffffffff1684610160015151146113885760405162461bcd60e51b815260206004820181905260248201527f696e76616c6964206f7574456e637279707465644e6f746573206c656e6774686044820152606401610920565b7f00000000000000000000000000000000000000000000000000000000000000008163ffffffff166007546008546113c09190613850565b6113ca9190613850565b11156114075760405162461bcd60e51b815260206004820152600c60248201526b1d1c9959481a5cc8199d5b1b60a21b6044820152606401610920565b6114158461012001516127c6565b156114625760405162461bcd60e51b815260206004820152601260248201527f73616e6374696f6e6564206164647265737300000000000000000000000000006044820152606401610920565b600061146d85612868565b9050600061147b828661297d565b60808701519091506001600160a01b038216146114da5760405162461bcd60e51b815260206004820152601160248201527f696e76616c6964207369676e61747572650000000000000000000000000000006044820152606401610920565b60006114e7846002613887565b6114f2866002613887565b6114fd906004613868565b6115079190613868565b63ffffffff1667ffffffffffffffff811115611525576115256139e4565b60405190808252806020026020018201604052801561154e578160200160208202803683370190505b50905061155e8760200151612337565b6115aa5760405162461bcd60e51b815260206004820152600c60248201527f696e76616c696420726f6f7400000000000000000000000000000000000000006044820152606401610920565b8660200151816000815181106115c2576115c26139ce565b60200260200101818152505060005b8563ffffffff168163ffffffff161015611734576005600089604001518363ffffffff1681518110611605576116056139ce565b60209081029190910181015182528101919091526040016000205460ff16156116705760405162461bcd60e51b815260206004820152601760248201527f746865206e6f746520686173206265656e207370656e740000000000000000006044820152606401610920565b87604001518163ffffffff168151811061168c5761168c6139ce565b6020026020010151828260016116a29190613868565b63ffffffff16815181106116b8576116b86139ce565b60200260200101818152505087606001518163ffffffff16815181106116e0576116e06139ce565b602002602001015182878360016116f79190613868565b6117019190613868565b63ffffffff1681518110611717576117176139ce565b60209081029190910101528061172c81613931565b9150506115d1565b50608087015181611746876002613887565b611751906001613868565b63ffffffff1681518110611767576117676139ce565b602090810291909101015260a087015181611783876002613887565b61178e906002613868565b63ffffffff16815181106117a4576117a46139ce565b602090810291909101015260c0870151816117c0876002613887565b6117cb906003613868565b63ffffffff16815181106117e1576117e16139ce565b60200260200101818152505060005b8463ffffffff168163ffffffff1610156119f657600460008960e001518363ffffffff1681518110611824576118246139ce565b60209081029190910181015182528101919091526040016000205460ff161561188f5760405162461bcd60e51b815260206004820152601460248201527f6475706c696361746520636f6d6d69746d656e740000000000000000000000006044820152606401610920565b600c548861010001518263ffffffff16815181106118af576118af6139ce565b602002602001015110156119055760405162461bcd60e51b815260206004820152601260248201527f726f6c6c75702066656520746f6f206c6f7700000000000000000000000000006044820152606401610920565b8760e001518163ffffffff1681518110611921576119216139ce565b602002602001015182828860026119389190613887565b611943906004613868565b61194d9190613868565b63ffffffff1681518110611963576119636139ce565b6020026020010181815250508761010001518163ffffffff168151811061198c5761198c6139ce565b60200260200101518282878960026119a49190613887565b6119ae9190613868565b6119b9906004613868565b6119c39190613868565b63ffffffff16815181106119d9576119d96139ce565b6020908102919091010152806119ee81613931565b9150506117f0565b5063ffffffff80861660009081526002602090815260408083209388168352929052818120548951925163c941764760e01b815291926001600160a01b039091169163c941764791611a4c9186906004016136c7565b602060405180830381600087803b158015611a6657600080fd5b505af1158015611a7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a9e9190613268565b905080611aed5760405162461bcd60e51b815260206004820152601660248201527f696e76616c6964207472616e736163742070726f6f66000000000000000000006044820152606401610920565b60005b8663ffffffff168163ffffffff161015611bba576001600560008b604001518463ffffffff1681518110611b2657611b266139ce565b6020026020010151815260200190815260200160002060006101000a81548160ff02191690831515021790555088604001518163ffffffff1681518110611b6f57611b6f6139ce565b602002602001015189602001517f3c2372ab6130817bd6b8fc6dbaecae947e84201b49535d358debaa6c34c23ecf60405160405180910390a380611bb281613931565b915050611af0565b5060005b8563ffffffff168163ffffffff161015611ca9576001600460008b60e001518463ffffffff1681518110611bf457611bf46139ce565b6020026020010151815260200190815260200160002060006101000a81548160ff021916908315150217905550611c978960e001518263ffffffff1681518110611c4057611c406139ce565b60200260200101518a61010001518363ffffffff1681518110611c6557611c656139ce565b60200260200101518b61016001518463ffffffff1681518110611c8a57611c8a6139ce565b60200260200101516129a1565b80611ca181613931565b915050611bbe565b5060a088015115611cc757611cc78861012001518960a00151612a3c565b60c088015115611ce457611ce48861014001518960c00151612a3c565b50506001600055505050505050565b600b54600160401b90046001600160a01b03163314611d455760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b6044820152606401610920565b6001600160a01b03166000908152600e60205260409020805460ff19166001179055565b336000908152600e602052604081205460ff16611dc85760405162461bcd60e51b815260206004820152601760248201527f4f6e6c792077686974656c697374656420696e7075742e0000000000000000006044820152606401610920565b7f0000000000000000000000000000000000000000000000000000000000000000600754600854611df99190613850565b10611e355760405162461bcd60e51b815260206004820152600c60248201526b1d1c9959481a5cc8199d5b1b60a21b6044820152606401610920565b60208084015160009081526004909152604090205460ff1615611ea45760405162461bcd60e51b815260206004820152602160248201527f74686520636f6d6d69746d656e7420686173206265656e207375626d697474656044820152601960fa1b6064820152608401610920565b60208084018051600090815260049092526040909120805460ff191660011790555160608401516080850151611edb9291906129a1565b604083015115611ef357611ef3828460400151612b32565b50600192915050565b600b54600160401b90046001600160a01b03163314611f4e5760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b6044820152606401610920565b60008111611f9e5760405162461bcd60e51b815260206004820152601560248201527f696e76616c6964205f6d696e526f6c6c757046656500000000000000000000006044820152606401610920565b600c55565b600b54600160401b90046001600160a01b03163314611ff55760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b6044820152606401610920565b600f5460ff16156120545760405162461bcd60e51b8152602060048201526024808201527f566572696669657220757064617465732068617665206265656e2064697361626044820152633632b21760e11b6064820152608401610920565b60008363ffffffff16116120aa5760405162461bcd60e51b815260206004820152601460248201527f6e756d496e707574732073686f756c64203e20300000000000000000000000006044820152606401610920565b6040805180820182526001600160a01b0392831681526001602080830191825263ffffffff9687166000908152600282528481209690971687529490945293209251835492511515600160a01b0274ffffffffffffffffffffffffffffffffffffffffff19909316911617179055565b600b54600160401b90046001600160a01b0316331461216c5760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b6044820152606401610920565b600f805460ff1916911515919091179055565b600b54600160401b90046001600160a01b031633146121d15760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b6044820152606401610920565b60008163ffffffff161161221c5760405162461bcd60e51b8152602060048201526012602482015271696e76616c696420726f6c6c757053697a6560701b6044820152606401610920565b600f5460ff161561227b5760405162461bcd60e51b8152602060048201526024808201527f566572696669657220757064617465732068617665206265656e2064697361626044820152633632b21760e11b6064820152608401610920565b63ffffffff8116600090815260036020526040902054600160a01b900460ff16156122c15763ffffffff81166000908152600360205260409020805460ff60a01b191690555b50565b600b54600160401b90046001600160a01b031633146123165760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b6044820152606401610920565b6001600160a01b03166000908152600d60205260409020805460ff19169055565b600b5460009063ffffffff165b63ffffffff811660009081526009602052604090205483141561236a5750600192915050565b63ffffffff81166123885750600b54640100000000900463ffffffff165b80612392816138f6565b600b5490925063ffffffff8084169116141590506123445750600092915050565b600b54600160401b90046001600160a01b031633146124055760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b6044820152606401610920565b600f5460ff16156124645760405162461bcd60e51b8152602060048201526024808201527f566572696669657220757064617465732068617665206265656e2064697361626044820152633632b21760e11b6064820152608401610920565b60008263ffffffff16116124ba5760405162461bcd60e51b815260206004820152601460248201527f6e756d496e707574732073686f756c64203e20300000000000000000000000006044820152606401610920565b63ffffffff828116600090815260026020908152604080832093851683529290522054600160a01b900460ff161561251a5763ffffffff8083166000908152600260209081526040808320938516835292905220805460ff60a01b191690555b5050565b600b54600160401b90046001600160a01b031633146125705760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b6044820152606401610920565b600f5460ff16156125cf5760405162461bcd60e51b8152602060048201526024808201527f566572696669657220757064617465732068617665206265656e2064697361626044820152633632b21760e11b6064820152608401610920565b60008263ffffffff161161261a5760405162461bcd60e51b8152602060048201526012602482015271696e76616c696420726f6c6c757053697a6560701b6044820152606401610920565b6040805180820182526001600160a01b0392831681526001602080830191825263ffffffff90951660009081526003909552919093209251835491511515600160a01b0274ffffffffffffffffffffffffffffffffffffffffff19909216921691909117179055565b600b54600160401b90046001600160a01b031633146126d55760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b6044820152606401610920565b6001600160a01b03166000908152600e60205260409020805460ff19169055565b60011c637fffffff1660005b63ffffffff82161561272757600183901c925060018263ffffffff16901c9150612702565b5090919050565b604051600090339083908381818185875af1925050503d8060008114612770576040519150601f19603f3d011682016040523d82523d6000602084013e612775565b606091505b505090508061251a5760405162461bcd60e51b815260206004820152601a60248201527f726f6c6c757020666565207472616e73666572206661696c65640000000000006044820152606401610920565b600154600090600160a01b900460ff166127e257506001919050565b60015460405163df592f7d60e01b81526001600160a01b03848116600483015290911690819063df592f7d9060240160206040518083038186803b15801561282957600080fd5b505afa15801561283d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128619190613268565b9392505050565b6101208101516101408201516040516bffffffffffffffffffffffff19606093841b811660208301529190921b1660348201526000908190604801604051602081830303815290604052905060005b836101600151518163ffffffff16101561292657818461016001518263ffffffff16815181106128e9576128e96139ce565b6020026020010151604051602001612902929190613685565b6040516020818303038152906040529150808061291e90613931565b9150506128b7565b508051602080830191909120604080517f19457468657265756d205369676e6564204d6573736167653a0a33320000000081850152603c8082019390935281518082039093018352605c0190528051910120612861565b600080600061298c8585612bd5565b9150915061299981612c45565b509392505050565b604080518082018252848152602080820185815260078054600090815260069093529382209251835551600190920191909155600854915490916129e491613850565b905060075460016129f59190613850565b60075560405184907ff533f9705aac5020e21695ea3553ac7b6881070d2b6900ab2b1e3050304b5bf990612a2e90869085908790613763565b60405180910390a250505050565b3415612a8a5760405162461bcd60e51b815260206004820152601860248201527f6e6f206d61696e6e657420746f6b656e20616c6c6f77656400000000000000006044820152606401610920565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114612ad7576040519150601f19603f3d011682016040523d82523d6000602084013e612adc565b606091505b5050905080612b2d5760405162461bcd60e51b815260206004820152600f60248201527f7769746864726177206661696c656400000000000000000000000000000000006044820152606401610920565b505050565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114612b7f576040519150601f19603f3d011682016040523d82523d6000602084013e612b84565b606091505b5050905080612b2d5760405162461bcd60e51b815260206004820152601c60248201527f6578656375746f7220666565207472616e73666572206661696c6564000000006044820152606401610920565b600080825160411415612c0c5760208301516040840151606085015160001a612c0087828585612e00565b94509450505050612c3e565b825160401415612c365760208301516040840151612c2b868383612eed565b935093505050612c3e565b506000905060025b9250929050565b6000816004811115612c5957612c596139b8565b1415612c625750565b6001816004811115612c7657612c766139b8565b1415612cc45760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610920565b6002816004811115612cd857612cd86139b8565b1415612d265760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610920565b6003816004811115612d3a57612d3a6139b8565b1415612d935760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610920565b6004816004811115612da757612da76139b8565b14156122c15760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610920565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115612e375750600090506003612ee4565b8460ff16601b14158015612e4f57508460ff16601c14155b15612e605750600090506004612ee4565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015612eb4573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116612edd57600060019250925050612ee4565b9150600090505b94509492505050565b6000807f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831681612f2360ff86901c601b613850565b9050612f3187828885612e00565b935093505050935093915050565b80356001600160a01b0381168114612f5657600080fd5b919050565b600082601f830112612f6c57600080fd5b81356020612f81612f7c8361382c565b6137fb565b80838252828201915082860187848660051b8901011115612fa157600080fd5b6000805b86811015612fe457823567ffffffffffffffff811115612fc3578283fd5b612fd18b88838d01016130b7565b8652509385019391850191600101612fa5565b509198975050505050505050565b600082601f83011261300357600080fd5b61300b61378b565b80838560408601111561301d57600080fd5b60005b600281101561303f578135845260209384019390910190600101613020565b509095945050505050565b600082601f83011261305b57600080fd5b8135602061306b612f7c8361382c565b80838252828201915082860187848660051b890101111561308b57600080fd5b60005b858110156130aa5781358452928401929084019060010161308e565b5090979650505050505050565b600082601f8301126130c857600080fd5b813567ffffffffffffffff8111156130e2576130e26139e4565b6130f5601f8201601f19166020016137fb565b81815284602083860101111561310a57600080fd5b816020850160208301376000918101602001919091529392505050565b60006040828403121561313957600080fd5b6040516040810181811067ffffffffffffffff8211171561315c5761315c6139e4565b604052823581526020928301359281019290925250919050565b600081830361010081121561318a57600080fd5b6040516060810181811067ffffffffffffffff821117156131ad576131ad6139e4565b6040529150816131bd8585613127565b81526080603f19830112156131d157600080fd5b6131d961378b565b91506131e88560408601612ff2565b82526131f78560808601612ff2565b602083015281602082015261320f8560c08601613127565b6040820152505092915050565b803563ffffffff81168114612f5657600080fd5b60006020828403121561324257600080fd5b61286182612f3f565b60006020828403121561325d57600080fd5b8135612861816139fa565b60006020828403121561327a57600080fd5b8151612861816139fa565b6000806040838503121561329857600080fd5b823567ffffffffffffffff808211156132b057600080fd5b9084019060a082870312156132c457600080fd5b6132cc6137b4565b8235815260208301356020820152604083013560408201526060830135606082015260808301358281111561330057600080fd5b61330c888286016130b7565b608083015250935061332391505060208401612f3f565b90509250929050565b6000610160828403121561333f57600080fd5b6040516080810181811067ffffffffffffffff82111715613362576133626139e4565b60405261336f8484613176565b815261337e610100840161321c565b6020820152610120830135604082015261014090920135606083015250919050565b600080604083850312156133b357600080fd5b823567ffffffffffffffff808211156133cb57600080fd5b9084019061026082870312156133e057600080fd5b6133e86137d7565b6133f28784613176565b8152610100808401356020830152610120808501358481111561341457600080fd5b6134208a82880161304a565b604085015250610140808601358581111561343a57600080fd5b6134468b82890161304a565b60608601525061016080870135608086015261018087013560a08601526101a087013560c08601526101c08701358681111561348157600080fd5b61348d8c828a0161304a565b60e0870152506101e0870135868111156134a657600080fd5b6134b28c828a0161304a565b85870152506134c46102008801612f3f565b838601526134d56102208801612f3f565b828601526102408701359350858411156134ee57600080fd5b6134fa8b858901612f5b565b90850152509195505050602085013591508082111561351857600080fd5b50613525858286016130b7565b9150509250929050565b60006020828403121561354157600080fd5b5035919050565b60006020828403121561355a57600080fd5b6128618261321c565b6000806040838503121561357657600080fd5b61357f8361321c565b915061332360208401612f3f565b600080604083850312156135a057600080fd5b6135a98361321c565b91506133236020840161321c565b6000806000606084860312156135cc57600080fd5b6135d58461321c565b92506135e36020850161321c565b91506135f160408501612f3f565b90509250925092565b8060005b600281101561361d5781518452602093840193909101906001016135fe565b50505050565b6000815180845261363b8160208601602086016138ca565b601f01601f19169290920160200192915050565b815160009082906020808601845b838110156136795781518552938201939082019060010161365d565b50929695505050505050565b600083516136978184602088016138ca565b8351908301906136ab8183602088016138ca565b01949350505050565b6020815260006128616020830184613623565b60006101208083016136e484875180518252602090810151910152565b6020808701516136f86040870182516135fa565b81015161370860808701826135fa565b506040870151805160c08701526020015160e08601526101008501929092528451908190526101408401918581019160005b818110156137565783518552938201939282019260010161373a565b5092979650505050505050565b8381528260208201526060604082015260006137826060830184613623565b95945050505050565b6040805190810167ffffffffffffffff811182821017156137ae576137ae6139e4565b60405290565b60405160a0810167ffffffffffffffff811182821017156137ae576137ae6139e4565b604051610180810167ffffffffffffffff811182821017156137ae576137ae6139e4565b604051601f8201601f1916810167ffffffffffffffff81118282101715613824576138246139e4565b604052919050565b600067ffffffffffffffff821115613846576138466139e4565b5060051b60200190565b600082198211156138635761386361398c565b500190565b600063ffffffff8083168185168083038211156136ab576136ab61398c565b600063ffffffff808316818516818304811182151516156138aa576138aa61398c565b02949350505050565b6000828210156138c5576138c561398c565b500390565b60005b838110156138e55781810151838201526020016138cd565b8381111561361d5750506000910152565b600063ffffffff82168061390c5761390c61398c565b6000190192915050565b600060001982141561392a5761392a61398c565b5060010190565b600063ffffffff8083168181141561394b5761394b61398c565b6001019392505050565b600082613964576139646139a2565b500690565b600063ffffffff80841680613980576139806139a2565b92169190910692915050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b80151581146122c157600080fdfea2646970667358221220398ad7796790039ddb8e85fe1bf16321d935a6190fe4871496e271f25c96c71564736f6c63430008070033';

type CommitmentPoolMainConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CommitmentPoolMainConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CommitmentPoolMain__factory extends ContractFactory {
  constructor(...args: CommitmentPoolMainConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'CommitmentPoolMain';
  }

  deploy(
    _treeHeight: BigNumberish,
    _rootHistoryLength: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<CommitmentPoolMain> {
    return super.deploy(_treeHeight, _rootHistoryLength, overrides || {}) as Promise<CommitmentPoolMain>;
  }
  getDeployTransaction(
    _treeHeight: BigNumberish,
    _rootHistoryLength: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(_treeHeight, _rootHistoryLength, overrides || {});
  }
  attach(address: string): CommitmentPoolMain {
    return super.attach(address) as CommitmentPoolMain;
  }
  connect(signer: Signer): CommitmentPoolMain__factory {
    return super.connect(signer) as CommitmentPoolMain__factory;
  }
  static readonly contractName: 'CommitmentPoolMain';
  public readonly contractName: 'CommitmentPoolMain';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CommitmentPoolMainInterface {
    return new utils.Interface(_abi) as CommitmentPoolMainInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): CommitmentPoolMain {
    return new Contract(address, _abi, signerOrProvider) as CommitmentPoolMain;
  }
}
