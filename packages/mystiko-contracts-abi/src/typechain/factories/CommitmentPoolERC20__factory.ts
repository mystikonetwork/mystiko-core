/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides, BigNumberish } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { CommitmentPoolERC20, CommitmentPoolERC20Interface } from '../CommitmentPoolERC20';

const _abi = [
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_treeHeight',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '_rootHistoryLength',
        type: 'uint32',
      },
      {
        internalType: 'address',
        name: '_token',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
    ],
    name: 'CommitmentIncluded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'rollupFee',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'leafIndex',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'bytes',
        name: 'encryptedNote',
        type: 'bytes',
      },
    ],
    name: 'CommitmentQueued',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'rootHash',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'serialNumber',
        type: 'uint256',
      },
    ],
    name: 'CommitmentSpent',
    type: 'event',
  },
  {
    inputs: [],
    name: 'FIELD_SIZE',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_actor',
        type: 'address',
      },
    ],
    name: 'addEnqueueWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_roller',
        type: 'address',
      },
    ],
    name: 'addRollupWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'asset',
    outputs: [
      {
        internalType: 'contract IERC20Metadata',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetDecimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetName',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetSymbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetType',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_newOperator',
        type: 'address',
      },
    ],
    name: 'changeOperator',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'commitmentIncludedCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'commitmentQueue',
    outputs: [
      {
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'rollupFee',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'commitmentQueueSize',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'currentRoot',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'currentRootIndex',
    outputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
    ],
    name: 'disableRollupVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_numInputs',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '_numOutputs',
        type: 'uint32',
      },
    ],
    name: 'disableTransactVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
      {
        internalType: 'address',
        name: '_rollupVerifier',
        type: 'address',
      },
    ],
    name: 'enableRollupVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_numInputs',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '_numOutputs',
        type: 'uint32',
      },
      {
        internalType: 'address',
        name: '_transactVerifier',
        type: 'address',
      },
    ],
    name: 'enableTransactVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
        ],
        internalType: 'struct ICommitmentPool.CommitmentRequest',
        name: '_request',
        type: 'tuple',
      },
      {
        internalType: 'address',
        name: '_executor',
        type: 'address',
      },
    ],
    name: 'enqueue',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'enqueueWhitelist',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'historicCommitments',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'root',
        type: 'uint256',
      },
    ],
    name: 'isKnownRoot',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isRollupWhitelistDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isSanctionCheckDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isVerifierUpdateDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'minRollupFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'operator',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_actor',
        type: 'address',
      },
    ],
    name: 'removeEnqueueWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_roller',
        type: 'address',
      },
    ],
    name: 'removeRollupWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'a',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256[2]',
                    name: 'X',
                    type: 'uint256[2]',
                  },
                  {
                    internalType: 'uint256[2]',
                    name: 'Y',
                    type: 'uint256[2]',
                  },
                ],
                internalType: 'struct IVerifier.G2Point',
                name: 'b',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'c',
                type: 'tuple',
              },
            ],
            internalType: 'struct IVerifier.Proof',
            name: 'proof',
            type: 'tuple',
          },
          {
            internalType: 'uint32',
            name: 'rollupSize',
            type: 'uint32',
          },
          {
            internalType: 'uint256',
            name: 'newRoot',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'leafHash',
            type: 'uint256',
          },
        ],
        internalType: 'struct ICommitmentPool.RollupRequest',
        name: '_request',
        type: 'tuple',
      },
    ],
    name: 'rollup',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    name: 'rollupVerifiers',
    outputs: [
      {
        internalType: 'contract IVerifier',
        name: 'verifier',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'enabled',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'rollupWhitelist',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    name: 'rootHistory',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'rootHistoryLength',
    outputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sanctionsContract',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_minRollupFee',
        type: 'uint256',
      },
    ],
    name: 'setMinRollupFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'spentSerialNumbers',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'toggleRollupWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_check',
        type: 'bool',
      },
    ],
    name: 'toggleSanctionCheck',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'toggleVerifierUpdate',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'a',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256[2]',
                    name: 'X',
                    type: 'uint256[2]',
                  },
                  {
                    internalType: 'uint256[2]',
                    name: 'Y',
                    type: 'uint256[2]',
                  },
                ],
                internalType: 'struct IVerifier.G2Point',
                name: 'b',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'c',
                type: 'tuple',
              },
            ],
            internalType: 'struct IVerifier.Proof',
            name: 'proof',
            type: 'tuple',
          },
          {
            internalType: 'uint256',
            name: 'rootHash',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'serialNumbers',
            type: 'uint256[]',
          },
          {
            internalType: 'uint256[]',
            name: 'sigHashes',
            type: 'uint256[]',
          },
          {
            internalType: 'bytes32',
            name: 'sigPk',
            type: 'bytes32',
          },
          {
            internalType: 'uint256',
            name: 'publicAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'relayerFeeAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'outCommitments',
            type: 'uint256[]',
          },
          {
            internalType: 'uint256[]',
            name: 'outRollupFees',
            type: 'uint256[]',
          },
          {
            internalType: 'address',
            name: 'publicRecipient',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'relayerAddress',
            type: 'address',
          },
          {
            internalType: 'bytes[]',
            name: 'outEncryptedNotes',
            type: 'bytes[]',
          },
        ],
        internalType: 'struct ICommitmentPool.TransactRequest',
        name: '_request',
        type: 'tuple',
      },
      {
        internalType: 'bytes',
        name: '_signature',
        type: 'bytes',
      },
    ],
    name: 'transact',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    name: 'transactVerifiers',
    outputs: [
      {
        internalType: 'contract IVerifier',
        name: 'verifier',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'enabled',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'treeCapacity',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_sanction',
        type: 'address',
      },
    ],
    name: 'updateSanctionContractAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x60a0604052600180546001600160a81b0319167340c57923924b5c5c5455c48d93317139addac8fb17905560006007819055600855600b805463ffffffff191690553480156200004e57600080fd5b5060405162004908380380620049088339810160408190526200007191620008c9565b600160005580838363ffffffff8116620000e55760405162461bcd60e51b815260206004820152602b60248201527f5f726f6f74486973746f72794c656e6774682073686f756c642062652067726560448201526a061746572207468616e20360ac1b606482015260840160405180910390fd5b600b8054600160201b600160e01b03191633680100000000000000000263ffffffff60201b19161764010000000063ffffffff84811691909102919091179091556200013590831660026200096c565b608052620001438262000194565b600a819055600b5463ffffffff166000908152600960205260409020555050600f80546001600160a01b03909216620100000262010000600160b01b03199092169190911790555062000a4d915050565b600063ffffffff8216620001c957507f09f658457775074ff4c842032a5ec2f1134c32784cca59d594caac8c503b7923919050565b8163ffffffff16600114156200020057507f1a77569b79cb7c2eaf9368de9e3b1efc0a606561e5ab299c2337340f3cdd576a919050565b8163ffffffff16600214156200023757507f111bd0002b1e3b8f1978c932b5ccb2fab87fdb0acab2ddb266f9a346dcb11ee1919050565b8163ffffffff16600314156200026e57507f040868ea2a363e05d7ae44280f69b49e429ab096ca2844efe91f8d6b3dad57dd919050565b8163ffffffff1660041415620002a457507ef8f605c92c8502c8fe83be1b83b24e3f67312a388f30cbadb5dee8974137c3919050565b8163ffffffff1660051415620002db57507f1adc043c99adbc0c86a60a36db0f661e2dd96f36ede322f954386d8935a0c5d9919050565b8163ffffffff16600614156200031257507f2a1fedfa71da723ac3e9b35cef752fa1b647b2b737a23e91241cb7bdc419e3f4919050565b8163ffffffff16600714156200034957507f17fe1974543c4c4b228e1292f7e3200d31435fc910ee5a8c5cafd329cc4b256b919050565b8163ffffffff16600814156200038057507f0e84a586eb63a0eec0f1fe5785022441f0e29e4ae859c7ce1f5fc88a42ad2e6b919050565b8163ffffffff1660091415620003b757507f193deb901f6eeb032e02e093280db17e373d4ff52bafda9215b46bb9b0a86f3e919050565b8163ffffffff16600a1415620003ee57507f1d10ca7b985697cb519565a5006c3f44b020b2edab9b7422ed15dc34532f9406919050565b8163ffffffff16600b14156200042557507f1dc200763555467a4e583e00badfdc1fb4d3d3f8f1cc81f31fd2f8b387776081919050565b8163ffffffff16600c14156200045c57507f203dd11fdba0ed13b20ca2d6952f3feb7461836a03512e0cccce8467b320b2f6919050565b8163ffffffff16600d14156200049357507f0591af64e64a3e69caf23eee2bdea90885343a49f547ee9464e95d8d6267e4f7919050565b8163ffffffff16600e1415620004ca57507f2af572f1077a32f46dc8e307d43c0fa6753b400b2107325976b8df7380545ff6919050565b8163ffffffff16600f14156200050157507f043227ae4b70b1aacd04e35e6aaed7b56d91220c31e97aaf52e12a6a56984e52919050565b8163ffffffff16601014156200053857507f2976f1f6a91d83d4c528dad69ece6d3d91934b0e5657e915b360c8c4c2fb54e6919050565b8163ffffffff16601114156200056e57507ee5c251c9e093658be0cd1b0df55b6f70f3d09146c1c8b4212a4ddcde700dbc919050565b8163ffffffff1660121415620005a557507f0267cbbc1bc2f1c3e3073d2ee60df8cc0bfef39fe3cee735c9ad5c8ad30064d2919050565b8163ffffffff1660131415620005dc57507f2f356057bc56f67dbf159a0e8935022acd5e982dce9f4071adc43e4d57ce27e6919050565b8163ffffffff16601414156200061357507f273db68f52f12a9d8022ae524050064e42d4d1661c9bcce958acf89b5e8b127b919050565b8163ffffffff16601514156200064a57507f0496a18ad4cca81b7c98ceb197439ad925e0f7f62d69dfa42cf9574be77fe30f919050565b8163ffffffff16601614156200068157507f24f89a3f943d421b2f3a554b65459f42b820ac09d6fd9d693df5f8ba732ab596919050565b8163ffffffff1660171415620006b857507f1b55bfd751c6807df36876cdce68034ab43210be2bc8afa8043c7f428604e7a7919050565b8163ffffffff1660181415620006ef57507f16d6595a398cf20f2489b90e958166f1e19c537c0c46e9b8ea5462391ee8f143919050565b8163ffffffff16601914156200072657507f0f01447ef8f621592474b678ed2fc404ebaf22a6fce15364bb4152a88c113613919050565b8163ffffffff16601a14156200075d57507f026c2dffee48bacbc9d21cf90aa7c6e525ab01db6966a9e7e53b3d3f4d1f5a4d919050565b8163ffffffff16601b14156200079457507f234fe90732795745b2c504c791242a2bb193baa1cbeab57db9324b6bb9134817919050565b8163ffffffff16601c1415620007cb57507f23a8e0a7e60981c52ebb498c260d5bef4d7c65145d17128996a77c33a3262a7e919050565b8163ffffffff16601d14156200080257507f24ee69d2565210c7027ff6fc2657ed029278bc79f41077fe3281ea5d5d8e80f9919050565b8163ffffffff16601e14156200083957507f1de402fa32463bb2917b733aeef0197a49cacacd1fe860c3acc8cd3b65a30a68919050565b8163ffffffff16601f14156200087057507f1d3015a0f6a7b3f754171d0540628107e50e25debceb16e0e33ae4205501896d919050565b8163ffffffff1660201415620008a757507f264a260539342647256819046bae05bed903a8d19b3c90439d67317d5d881322919050565b506000919050565b805163ffffffff81168114620008c457600080fd5b919050565b600080600060608486031215620008df57600080fd5b620008ea84620008af565b9250620008fa60208501620008af565b60408501519092506001600160a01b03811681146200091857600080fd5b809150509250925092565b600181815b808511156200096457816000190482111562000948576200094862000a37565b808516156200095657918102915b93841c939080029062000928565b509250929050565b60006200097a838362000981565b9392505050565b600082620009925750600162000a31565b81620009a15750600062000a31565b8160018114620009ba5760028114620009c557620009e5565b600191505062000a31565b60ff841115620009d957620009d962000a37565b50506001821b62000a31565b5060208310610133831016604e8410600b841016171562000a0a575081810a62000a31565b62000a16838362000923565b806000190482111562000a2d5762000a2d62000a37565b0290505b92915050565b634e487b7160e01b600052601160045260246000fd5b608051613e9162000a77600039600081816108f0015281816115120152611f320152613e916000f3fe6080604052600436106102e75760003560e01c80639937e14711610184578063c259e2e6116100d6578063c9abeb641161008a578063e4ed567111610064578063e4ed567114610948578063fdab463d14610991578063ffa89b88146109a757600080fd5b8063c9abeb64146108de578063de15592114610912578063deeff7cd1461092857600080fd5b8063c3098df9116100bb578063c3098df91461085a578063c9230c5d14610887578063c9a6999c1461089c57600080fd5b8063c259e2e614610813578063c2d416011461083357600080fd5b8063a9b1d29611610138578063ba9bd07d11610112578063ba9bd07d14610752578063bc22be1414610777578063c1935539146107a757600080fd5b8063a9b1d296146106fc578063ac967fad1461071c578063b4318ead1461073257600080fd5b80639b0a6fea116101695780639b0a6fea1461069c5780639cc6b354146106bc578063a6232a93146106dc57600080fd5b80639937e147146106665780639ae39ca31461067c57600080fd5b8063414a37ba1161023d57806378d60cd7116101f15780637fa4b09c116101cb5780637fa4b09c146105e4578063806ae3621461060457806390eeb02b1461063457600080fd5b806378d60cd7146105745780637a9fff08146105945780637cbf0ff6146105c457600080fd5b806353af27d51161022257806353af27d5146104fd578063570ca7351461051d5780637013ea961461054457600080fd5b8063414a37ba146104a15780634eb069f7146104e357600080fd5b8063176de7a81161029f57806338d52e0f1161027957806338d52e0f1461040a5780633fae882e146104485780633fe3347a1461045b57600080fd5b8063176de7a81461038e57806330d78036146103b957806334c33e83146103ea57600080fd5b806305335faa116102d057806305335faa1461032e57806306394c9b1461034e57806314a7737d1461036e57600080fd5b806302d498f1146102ec57806303db98741461030e575b600080fd5b3480156102f857600080fd5b5061030c6103073660046135ae565b6109c6565b005b34801561031a57600080fd5b5061030c6103293660046135ae565b610a41565b34801561033a57600080fd5b5061030c6103493660046135c9565b610ab4565b34801561035a57600080fd5b5061030c6103693660046135ae565b610b20565b34801561037a57600080fd5b5061030c610389366004613721565b610bb3565b34801561039a57600080fd5b506103a3611206565b6040516103b09190613ae8565b60405180910390f35b3480156103c557600080fd5b506001546103da90600160a01b900460ff1681565b60405190151581526020016103b0565b3480156103f657600080fd5b5061030c6104053660046135ae565b611297565b34801561041657600080fd5b50600f54610430906201000090046001600160a01b031681565b6040516001600160a01b0390911681526020016103b0565b61030c610456366004613795565b611323565b34801561046757600080fd5b5060408051808201909152600581527f657263323000000000000000000000000000000000000000000000000000000060208201526103a3565b3480156104ad57600080fd5b506104d57f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000181565b6040519081526020016103b0565b3480156104ef57600080fd5b50600f546103da9060ff1681565b34801561050957600080fd5b50600154610430906001600160a01b031681565b34801561052957600080fd5b50600b5461043090600160401b90046001600160a01b031681565b34801561055057600080fd5b506103da61055f3660046135ae565b600d6020526000908152604090205460ff1681565b34801561058057600080fd5b506103da61058f36600461367a565b611e7b565b3480156105a057600080fd5b506103da6105af3660046135ae565b600e6020526000908152604090205460ff1681565b3480156105d057600080fd5b5061030c6105df366004613924565b612064565b3480156105f057600080fd5b5061030c6105ff3660046139ac565b61210b565b34801561061057600080fd5b506103da61061f366004613924565b60046020526000908152604090205460ff1681565b34801561064057600080fd5b50600b546106519063ffffffff1681565b60405163ffffffff90911681526020016103b0565b34801561067257600080fd5b506104d5600c5481565b34801561068857600080fd5b5061030c6106973660046135c9565b612282565b3480156106a857600080fd5b5061030c6106b736600461393d565b6122e7565b3480156106c857600080fd5b5061030c6106d73660046135ae565b61242c565b3480156106e857600080fd5b506103da6106f7366004613924565b61249f565b34801561070857600080fd5b5061030c6107173660046135ae565b61251b565b34801561072857600080fd5b506104d560075481565b34801561073e57600080fd5b5061030c61074d3660046135c9565b612591565b34801561075e57600080fd5b50600b5461065190640100000000900463ffffffff1681565b34801561078357600080fd5b506103da610792366004613924565b60056020526000908152604090205460ff1681565b3480156107b357600080fd5b506107f46107c2366004613982565b60026020908152600092835260408084209091529082529020546001600160a01b03811690600160a01b900460ff1682565b604080516001600160a01b0390931683529015156020830152016103b0565b34801561081f57600080fd5b5061030c61082e366004613982565b612601565b34801561083f57600080fd5b5061084861276c565b60405160ff90911681526020016103b0565b34801561086657600080fd5b506104d561087536600461393d565b60096020526000908152604090205481565b34801561089357600080fd5b506103a36127f4565b3480156108a857600080fd5b506107f46108b736600461393d565b6003602052600090815260409020546001600160a01b03811690600160a01b900460ff1682565b3480156108ea57600080fd5b506104d57f000000000000000000000000000000000000000000000000000000000000000081565b34801561091e57600080fd5b506104d560085481565b34801561093457600080fd5b5061030c610943366004613958565b612844565b34801561095457600080fd5b5061097c610963366004613924565b6006602052600090815260409020805460019091015482565b604080519283526020830191909152016103b0565b34801561099d57600080fd5b506104d5600a5481565b3480156109b357600080fd5b50600f546103da90610100900460ff1681565b600b54600160401b90046001600160a01b03163314610a1d5760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b60448201526064015b60405180910390fd5b6001600160a01b03166000908152600d60205260409020805460ff19166001179055565b600b54600160401b90046001600160a01b03163314610a935760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b6044820152606401610a14565b6001600160a01b03166000908152600e60205260409020805460ff19169055565b600b54600160401b90046001600160a01b03163314610b065760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b6044820152606401610a14565b600f80549115156101000261ff0019909216919091179055565b600b54600160401b90046001600160a01b03163314610b725760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b6044820152606401610a14565b600b80546001600160a01b03909216600160401b027fffffffff0000000000000000000000000000000000000000ffffffffffffffff909216919091179055565b600f54610100900460ff1680610bd85750336000908152600d602052604090205460ff165b610c245760405162461bcd60e51b815260206004820152601860248201527f4f6e6c792077686974656c697374656420726f6c6c65722e00000000000000006044820152606401610a14565b610c31816040015161249f565b15610c7e5760405162461bcd60e51b815260206004820152601560248201527f6e6577526f6f74206973206475706c69636174656400000000000000000000006044820152606401610a14565b6000816020015163ffffffff16118015610ca45750600754816020015163ffffffff1611155b8015610cd1575060208181015163ffffffff16600090815260039091526040902054600160a01b900460ff165b610d125760405162461bcd60e51b8152602060048201526012602482015271696e76616c696420726f6c6c757053697a6560701b6044820152606401610a14565b806020015163ffffffff16600854610d2a9190613da8565b15610d835760405162461bcd60e51b815260206004820152602360248201527f696e76616c696420726f6c6c757053697a652061742063757272656e7420737460448201526261746560e81b6064820152608401610a14565b6000610d9560085483602001516129a9565b90506000826020015163ffffffff1667ffffffffffffffff811115610dbc57610dbc613e37565b604051908082528060200260200182016040528015610de5578160200160208202803683370190505b506008549091506000905b846020015163ffffffff16600854610e089190613ca3565b811015610f3257600081815260066020526040902054610e6a5760405162461bcd60e51b815260206004820152601260248201527f696e646578206f7574206f6620626f756e6400000000000000000000000000006044820152606401610a14565b60008181526006602052604090205460085481908590610e8a9085613d06565b81518110610e9a57610e9a613e21565b602002602001018181525050600660008381526020019081526020016000206001015483610ec89190613ca3565b6000838152600660205260408120818155600190810191909155600754919450610ef191613d06565b60075560405181907ffe6b097b46a78e08506a3143b6337c2505ba77df76fe05c3663a987395d6341390600090a25080610f2a81613d69565b915050610df0565b5060007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000183604051602001610f679190613a67565b6040516020818303038152906040528051906020012060001c610f8a9190613da8565b905080856060015114610fdf5760405162461bcd60e51b815260206004820152601060248201527f696e76616c6964206c65616648617368000000000000000000000000000000006044820152606401610a14565b60408051600480825260a0820190925260009160208201608080368337019050509050600a548160008151811061101857611018613e21565b60200260200101818152505085604001518160018151811061103c5761103c613e21565b60200260200101818152505085606001518160028151811061106057611060613e21565b602002602001018181525050848160038151811061108057611080613e21565b6020908102919091018101919091528681015163ffffffff16600090815260039091526040808220548851915163c941764760e01b81526001600160a01b039091169163c9417647916110d891908690600401613afb565b602060405180830381600087803b1580156110f257600080fd5b505af1158015611106573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061112a91906135e6565b9050806111795760405162461bcd60e51b815260206004820152600d60248201527f696e76616c69642070726f6f66000000000000000000000000000000000000006044820152606401610a14565b611182846129e1565b866020015163ffffffff1660085461119a9190613ca3565b6008556040870151600a55600b5463ffffffff64010000000082048116916111c491166001613cbb565b6111ce9190613dbc565b600b805463ffffffff191663ffffffff9290921691821790556040978801516000918252600960205297902096909655505050505050565b6060600f60029054906101000a90046001600160a01b03166001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b15801561125657600080fd5b505afa15801561126a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526112929190810190613603565b905090565b600b54600160401b90046001600160a01b031633146112e95760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b6044820152606401610a14565b600180547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b600260005414156113765760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610a14565b600260008181556040848101515160e08601515163ffffffff808316855260209586528385209082168552909452912054909190600160a01b900460ff166114005760405162461bcd60e51b815260206004820152601260248201527f696e76616c696420692f6f206c656e67746800000000000000000000000000006044820152606401610a14565b8163ffffffff168460600151511461145a5760405162461bcd60e51b815260206004820152601860248201527f696e76616c696420736967486173686573206c656e67746800000000000000006044820152606401610a14565b8063ffffffff1684610100015151146114b55760405162461bcd60e51b815260206004820152601c60248201527f696e76616c6964206f7574526f6c6c757046656573206c656e677468000000006044820152606401610a14565b8063ffffffff1684610160015151146115105760405162461bcd60e51b815260206004820181905260248201527f696e76616c6964206f7574456e637279707465644e6f746573206c656e6774686044820152606401610a14565b7f00000000000000000000000000000000000000000000000000000000000000008163ffffffff166007546008546115489190613ca3565b6115529190613ca3565b111561158f5760405162461bcd60e51b815260206004820152600c60248201526b1d1c9959481a5cc8199d5b1b60a21b6044820152606401610a14565b61159d8461012001516129fe565b156115ea5760405162461bcd60e51b815260206004820152601260248201527f73616e6374696f6e6564206164647265737300000000000000000000000000006044820152606401610a14565b60006115f585612aa1565b905060006116038286612bb6565b60808701519091506001600160a01b038216146116625760405162461bcd60e51b815260206004820152601160248201527f696e76616c6964207369676e61747572650000000000000000000000000000006044820152606401610a14565b600061166f846002613cda565b61167a866002613cda565b611685906004613cbb565b61168f9190613cbb565b63ffffffff1667ffffffffffffffff8111156116ad576116ad613e37565b6040519080825280602002602001820160405280156116d6578160200160208202803683370190505b5090506116e6876020015161249f565b6117325760405162461bcd60e51b815260206004820152600c60248201527f696e76616c696420726f6f7400000000000000000000000000000000000000006044820152606401610a14565b86602001518160008151811061174a5761174a613e21565b60200260200101818152505060005b8563ffffffff168163ffffffff1610156118bc576005600089604001518363ffffffff168151811061178d5761178d613e21565b60209081029190910181015182528101919091526040016000205460ff16156117f85760405162461bcd60e51b815260206004820152601760248201527f746865206e6f746520686173206265656e207370656e740000000000000000006044820152606401610a14565b87604001518163ffffffff168151811061181457611814613e21565b60200260200101518282600161182a9190613cbb565b63ffffffff168151811061184057611840613e21565b60200260200101818152505087606001518163ffffffff168151811061186857611868613e21565b6020026020010151828783600161187f9190613cbb565b6118899190613cbb565b63ffffffff168151811061189f5761189f613e21565b6020908102919091010152806118b481613d84565b915050611759565b506080870151816118ce876002613cda565b6118d9906001613cbb565b63ffffffff16815181106118ef576118ef613e21565b602090810291909101015260a08701518161190b876002613cda565b611916906002613cbb565b63ffffffff168151811061192c5761192c613e21565b602090810291909101015260c087015181611948876002613cda565b611953906003613cbb565b63ffffffff168151811061196957611969613e21565b60200260200101818152505060005b8463ffffffff168163ffffffff161015611b7e57600460008960e001518363ffffffff16815181106119ac576119ac613e21565b60209081029190910181015182528101919091526040016000205460ff1615611a175760405162461bcd60e51b815260206004820152601460248201527f6475706c696361746520636f6d6d69746d656e740000000000000000000000006044820152606401610a14565b600c548861010001518263ffffffff1681518110611a3757611a37613e21565b60200260200101511015611a8d5760405162461bcd60e51b815260206004820152601260248201527f726f6c6c75702066656520746f6f206c6f7700000000000000000000000000006044820152606401610a14565b8760e001518163ffffffff1681518110611aa957611aa9613e21565b60200260200101518282886002611ac09190613cda565b611acb906004613cbb565b611ad59190613cbb565b63ffffffff1681518110611aeb57611aeb613e21565b6020026020010181815250508761010001518163ffffffff1681518110611b1457611b14613e21565b6020026020010151828287896002611b2c9190613cda565b611b369190613cbb565b611b41906004613cbb565b611b4b9190613cbb565b63ffffffff1681518110611b6157611b61613e21565b602090810291909101015280611b7681613d84565b915050611978565b5063ffffffff80861660009081526002602090815260408083209388168352929052818120548951925163c941764760e01b815291926001600160a01b039091169163c941764791611bd4918690600401613afb565b602060405180830381600087803b158015611bee57600080fd5b505af1158015611c02573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c2691906135e6565b905080611c755760405162461bcd60e51b815260206004820152601660248201527f696e76616c6964207472616e736163742070726f6f66000000000000000000006044820152606401610a14565b60005b8663ffffffff168163ffffffff161015611d42576001600560008b604001518463ffffffff1681518110611cae57611cae613e21565b6020026020010151815260200190815260200160002060006101000a81548160ff02191690831515021790555088604001518163ffffffff1681518110611cf757611cf7613e21565b602002602001015189602001517f3c2372ab6130817bd6b8fc6dbaecae947e84201b49535d358debaa6c34c23ecf60405160405180910390a380611d3a81613d84565b915050611c78565b5060005b8563ffffffff168163ffffffff161015611e31576001600460008b60e001518463ffffffff1681518110611d7c57611d7c613e21565b6020026020010151815260200190815260200160002060006101000a81548160ff021916908315150217905550611e1f8960e001518263ffffffff1681518110611dc857611dc8613e21565b60200260200101518a61010001518363ffffffff1681518110611ded57611ded613e21565b60200260200101518b61016001518463ffffffff1681518110611e1257611e12613e21565b6020026020010151612bda565b80611e2981613d84565b915050611d46565b5060a088015115611e4f57611e4f8861012001518960a00151612c70565b60c088015115611e6c57611e6c8861014001518960c00151612c70565b50506001600055505050505050565b336000908152600e602052604081205460ff16611eda5760405162461bcd60e51b815260206004820152601860248201527f4f6e6c792077686974656c69737465642073656e6465722e00000000000000006044820152606401610a14565b600c5483606001511015611f305760405162461bcd60e51b815260206004820152601260248201527f726f6c6c75702066656520746f6f2066657700000000000000000000000000006044820152606401610a14565b7f0000000000000000000000000000000000000000000000000000000000000000600754600854611f619190613ca3565b10611f9d5760405162461bcd60e51b815260206004820152600c60248201526b1d1c9959481a5cc8199d5b1b60a21b6044820152606401610a14565b60208084015160009081526004909152604090205460ff161561200c5760405162461bcd60e51b815260206004820152602160248201527f74686520636f6d6d69746d656e7420686173206265656e207375626d697474656044820152601960fa1b6064820152608401610a14565b60208084018051600090815260049092526040909120805460ff191660011790555160608401516080850151612043929190612bda565b60408301511561205b5761205b828460400151612c70565b50600192915050565b600b54600160401b90046001600160a01b031633146120b65760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b6044820152606401610a14565b600081116121065760405162461bcd60e51b815260206004820152601560248201527f696e76616c6964205f6d696e526f6c6c757046656500000000000000000000006044820152606401610a14565b600c55565b600b54600160401b90046001600160a01b0316331461215d5760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b6044820152606401610a14565b600f5460ff16156121bc5760405162461bcd60e51b8152602060048201526024808201527f566572696669657220757064617465732068617665206265656e2064697361626044820152633632b21760e11b6064820152608401610a14565b60008363ffffffff16116122125760405162461bcd60e51b815260206004820152601460248201527f6e756d496e707574732073686f756c64203e20300000000000000000000000006044820152606401610a14565b6040805180820182526001600160a01b0392831681526001602080830191825263ffffffff9687166000908152600282528481209690971687529490945293209251835492511515600160a01b0274ffffffffffffffffffffffffffffffffffffffffff19909316911617179055565b600b54600160401b90046001600160a01b031633146122d45760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b6044820152606401610a14565b600f805460ff1916911515919091179055565b600b54600160401b90046001600160a01b031633146123395760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b6044820152606401610a14565b60008163ffffffff16116123845760405162461bcd60e51b8152602060048201526012602482015271696e76616c696420726f6c6c757053697a6560701b6044820152606401610a14565b600f5460ff16156123e35760405162461bcd60e51b8152602060048201526024808201527f566572696669657220757064617465732068617665206265656e2064697361626044820152633632b21760e11b6064820152608401610a14565b63ffffffff8116600090815260036020526040902054600160a01b900460ff16156124295763ffffffff81166000908152600360205260409020805460ff60a01b191690555b50565b600b54600160401b90046001600160a01b0316331461247e5760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b6044820152606401610a14565b6001600160a01b03166000908152600d60205260409020805460ff19169055565b600b5460009063ffffffff165b63ffffffff81166000908152600960205260409020548314156124d25750600192915050565b63ffffffff81166124f05750600b54640100000000900463ffffffff165b806124fa81613d49565b600b5490925063ffffffff8084169116141590506124ac5750600092915050565b600b54600160401b90046001600160a01b0316331461256d5760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b6044820152606401610a14565b6001600160a01b03166000908152600e60205260409020805460ff19166001179055565b600b54600160401b90046001600160a01b031633146125e35760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b6044820152606401610a14565b60018054911515600160a01b0260ff60a01b19909216919091179055565b600b54600160401b90046001600160a01b031633146126535760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b6044820152606401610a14565b600f5460ff16156126b25760405162461bcd60e51b8152602060048201526024808201527f566572696669657220757064617465732068617665206265656e2064697361626044820152633632b21760e11b6064820152608401610a14565b60008263ffffffff16116127085760405162461bcd60e51b815260206004820152601460248201527f6e756d496e707574732073686f756c64203e20300000000000000000000000006044820152606401610a14565b63ffffffff828116600090815260026020908152604080832093851683529290522054600160a01b900460ff16156127685763ffffffff8083166000908152600260209081526040808320938516835292905220805460ff60a01b191690555b5050565b6000600f60029054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156127bc57600080fd5b505afa1580156127d0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061129291906139ef565b6060600f60029054906101000a90046001600160a01b03166001600160a01b03166306fdde036040518163ffffffff1660e01b815260040160006040518083038186803b15801561125657600080fd5b600b54600160401b90046001600160a01b031633146128965760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b6044820152606401610a14565b600f5460ff16156128f55760405162461bcd60e51b8152602060048201526024808201527f566572696669657220757064617465732068617665206265656e2064697361626044820152633632b21760e11b6064820152608401610a14565b60008263ffffffff16116129405760405162461bcd60e51b8152602060048201526012602482015271696e76616c696420726f6c6c757053697a6560701b6044820152606401610a14565b6040805180820182526001600160a01b0392831681526001602080830191825263ffffffff90951660009081526003909552919093209251835491511515600160a01b0274ffffffffffffffffffffffffffffffffffffffffff19909216921691909117179055565b60011c637fffffff1660005b63ffffffff8216156129da57600183901c925060018263ffffffff16901c91506129b5565b5090919050565b600f54612429906201000090046001600160a01b03163383612c89565b600154600090600160a01b900460ff1615612a1b57506000919050565b60015460405163df592f7d60e01b81526001600160a01b03848116600483015290911690819063df592f7d9060240160206040518083038186803b158015612a6257600080fd5b505afa158015612a76573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a9a91906135e6565b9392505050565b6101208101516101408201516040516bffffffffffffffffffffffff19606093841b811660208301529190921b1660348201526000908190604801604051602081830303815290604052905060005b836101600151518163ffffffff161015612b5f57818461016001518263ffffffff1681518110612b2257612b22613e21565b6020026020010151604051602001612b3b929190613ab9565b60405160208183030381529060405291508080612b5790613d84565b915050612af0565b508051602080830191909120604080517f19457468657265756d205369676e6564204d6573736167653a0a33320000000081850152603c8082019390935281518082039093018352605c0190528051910120612a9a565b6000806000612bc58585612cf5565b91509150612bd281612d65565b509392505050565b6000600854600754612bec9190613ca3565b604080518082018252868152602080820187815260008581526006909252929020905181559051600191820155600754919250612c299190613ca3565b60075560405184907ff533f9705aac5020e21695ea3553ac7b6881070d2b6900ab2b1e3050304b5bf990612c6290869085908790613b97565b60405180910390a250505050565b600f54612768906201000090046001600160a01b031683835b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b179052612cf0908490612f20565b505050565b600080825160411415612d2c5760208301516040840151606085015160001a612d2087828585613005565b94509450505050612d5e565b825160401415612d565760208301516040840151612d4b8683836130f2565b935093505050612d5e565b506000905060025b9250929050565b6000816004811115612d7957612d79613e0b565b1415612d825750565b6001816004811115612d9657612d96613e0b565b1415612de45760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610a14565b6002816004811115612df857612df8613e0b565b1415612e465760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610a14565b6003816004811115612e5a57612e5a613e0b565b1415612eb35760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610a14565b6004816004811115612ec757612ec7613e0b565b14156124295760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610a14565b6000612f75826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166131449092919063ffffffff16565b805190915015612cf05780806020019051810190612f9391906135e6565b612cf05760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610a14565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561303c57506000905060036130e9565b8460ff16601b1415801561305457508460ff16601c14155b1561306557506000905060046130e9565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156130b9573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166130e2576000600192509250506130e9565b9150600090505b94509492505050565b6000807f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83168161312860ff86901c601b613ca3565b905061313687828885613005565b935093505050935093915050565b6060613153848460008561315b565b949350505050565b6060824710156131d35760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610a14565b6001600160a01b0385163b61322a5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610a14565b600080866001600160a01b031685876040516132469190613a9d565b60006040518083038185875af1925050503d8060008114613283576040519150601f19603f3d011682016040523d82523d6000602084013e613288565b606091505b50915091506132988282866132a3565b979650505050505050565b606083156132b2575081612a9a565b8251156132c25782518084602001fd5b8160405162461bcd60e51b8152600401610a149190613ae8565b80356001600160a01b03811681146132f357600080fd5b919050565b600082601f83011261330957600080fd5b8135602061331e61331983613c57565b613c26565b80838252828201915082860187848660051b890101111561333e57600080fd5b6000805b8681101561338157823567ffffffffffffffff811115613360578283fd5b61336e8b88838d0101613454565b8652509385019391850191600101613342565b509198975050505050505050565b600082601f8301126133a057600080fd5b6133a8613bb6565b8083856040860111156133ba57600080fd5b60005b60028110156133dc5781358452602093840193909101906001016133bd565b509095945050505050565b600082601f8301126133f857600080fd5b8135602061340861331983613c57565b80838252828201915082860187848660051b890101111561342857600080fd5b60005b858110156134475781358452928401929084019060010161342b565b5090979650505050505050565b600082601f83011261346557600080fd5b813561347361331982613c7b565b81815284602083860101111561348857600080fd5b816020850160208301376000918101602001919091529392505050565b6000604082840312156134b757600080fd5b6040516040810181811067ffffffffffffffff821117156134da576134da613e37565b604052823581526020928301359281019290925250919050565b600081830361010081121561350857600080fd5b6040516060810181811067ffffffffffffffff8211171561352b5761352b613e37565b60405291508161353b85856134a5565b81526080603f198301121561354f57600080fd5b613557613bb6565b9150613566856040860161338f565b8252613575856080860161338f565b602083015281602082015261358d8560c086016134a5565b6040820152505092915050565b803563ffffffff811681146132f357600080fd5b6000602082840312156135c057600080fd5b612a9a826132dc565b6000602082840312156135db57600080fd5b8135612a9a81613e4d565b6000602082840312156135f857600080fd5b8151612a9a81613e4d565b60006020828403121561361557600080fd5b815167ffffffffffffffff81111561362c57600080fd5b8201601f8101841361363d57600080fd5b805161364b61331982613c7b565b81815285602083850101111561366057600080fd5b613671826020830160208601613d1d565b95945050505050565b6000806040838503121561368d57600080fd5b823567ffffffffffffffff808211156136a557600080fd5b9084019060a082870312156136b957600080fd5b6136c1613bdf565b823581526020830135602082015260408301356040820152606083013560608201526080830135828111156136f557600080fd5b61370188828601613454565b6080830152509350613718915050602084016132dc565b90509250929050565b6000610160828403121561373457600080fd5b6040516080810181811067ffffffffffffffff8211171561375757613757613e37565b60405261376484846134f4565b8152613773610100840161359a565b6020820152610120830135604082015261014090920135606083015250919050565b600080604083850312156137a857600080fd5b823567ffffffffffffffff808211156137c057600080fd5b9084019061026082870312156137d557600080fd5b6137dd613c02565b6137e787846134f4565b8152610100808401356020830152610120808501358481111561380957600080fd5b6138158a8288016133e7565b604085015250610140808601358581111561382f57600080fd5b61383b8b8289016133e7565b60608601525061016080870135608086015261018087013560a08601526101a087013560c08601526101c08701358681111561387657600080fd5b6138828c828a016133e7565b60e0870152506101e08701358681111561389b57600080fd5b6138a78c828a016133e7565b85870152506138b961020088016132dc565b838601526138ca61022088016132dc565b828601526102408701359350858411156138e357600080fd5b6138ef8b8589016132f8565b90850152509195505050602085013591508082111561390d57600080fd5b5061391a85828601613454565b9150509250929050565b60006020828403121561393657600080fd5b5035919050565b60006020828403121561394f57600080fd5b612a9a8261359a565b6000806040838503121561396b57600080fd5b6139748361359a565b9150613718602084016132dc565b6000806040838503121561399557600080fd5b61399e8361359a565b91506137186020840161359a565b6000806000606084860312156139c157600080fd5b6139ca8461359a565b92506139d86020850161359a565b91506139e6604085016132dc565b90509250925092565b600060208284031215613a0157600080fd5b815160ff81168114612a9a57600080fd5b8060005b6002811015613a35578151845260209384019390910190600101613a16565b50505050565b60008151808452613a53816020860160208601613d1d565b601f01601f19169290920160200192915050565b815160009082906020808601845b83811015613a9157815185529382019390820190600101613a75565b50929695505050505050565b60008251613aaf818460208701613d1d565b9190910192915050565b60008351613acb818460208801613d1d565b835190830190613adf818360208801613d1d565b01949350505050565b602081526000612a9a6020830184613a3b565b6000610120808301613b1884875180518252602090810151910152565b602080870151613b2c604087018251613a12565b810151613b3c6080870182613a12565b506040870151805160c08701526020015160e08601526101008501929092528451908190526101408401918581019160005b81811015613b8a57835185529382019392820192600101613b6e565b5092979650505050505050565b8381528260208201526060604082015260006136716060830184613a3b565b6040805190810167ffffffffffffffff81118282101715613bd957613bd9613e37565b60405290565b60405160a0810167ffffffffffffffff81118282101715613bd957613bd9613e37565b604051610180810167ffffffffffffffff81118282101715613bd957613bd9613e37565b604051601f8201601f1916810167ffffffffffffffff81118282101715613c4f57613c4f613e37565b604052919050565b600067ffffffffffffffff821115613c7157613c71613e37565b5060051b60200190565b600067ffffffffffffffff821115613c9557613c95613e37565b50601f01601f191660200190565b60008219821115613cb657613cb6613ddf565b500190565b600063ffffffff808316818516808303821115613adf57613adf613ddf565b600063ffffffff80831681851681830481118215151615613cfd57613cfd613ddf565b02949350505050565b600082821015613d1857613d18613ddf565b500390565b60005b83811015613d38578181015183820152602001613d20565b83811115613a355750506000910152565b600063ffffffff821680613d5f57613d5f613ddf565b6000190192915050565b6000600019821415613d7d57613d7d613ddf565b5060010190565b600063ffffffff80831681811415613d9e57613d9e613ddf565b6001019392505050565b600082613db757613db7613df5565b500690565b600063ffffffff80841680613dd357613dd3613df5565b92169190910692915050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b801515811461242957600080fdfea264697066735822122070cc70176a24eedc97dd2f653ea0336e8d3f82f739aee2a3321cf5c18134ab0a64736f6c63430008070033';

type CommitmentPoolERC20ConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CommitmentPoolERC20ConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CommitmentPoolERC20__factory extends ContractFactory {
  constructor(...args: CommitmentPoolERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'CommitmentPoolERC20';
  }

  deploy(
    _treeHeight: BigNumberish,
    _rootHistoryLength: BigNumberish,
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<CommitmentPoolERC20> {
    return super.deploy(
      _treeHeight,
      _rootHistoryLength,
      _token,
      overrides || {},
    ) as Promise<CommitmentPoolERC20>;
  }
  getDeployTransaction(
    _treeHeight: BigNumberish,
    _rootHistoryLength: BigNumberish,
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(_treeHeight, _rootHistoryLength, _token, overrides || {});
  }
  attach(address: string): CommitmentPoolERC20 {
    return super.attach(address) as CommitmentPoolERC20;
  }
  connect(signer: Signer): CommitmentPoolERC20__factory {
    return super.connect(signer) as CommitmentPoolERC20__factory;
  }
  static readonly contractName: 'CommitmentPoolERC20';
  public readonly contractName: 'CommitmentPoolERC20';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CommitmentPoolERC20Interface {
    return new utils.Interface(_abi) as CommitmentPoolERC20Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): CommitmentPoolERC20 {
    return new Contract(address, _abi, signerOrProvider) as CommitmentPoolERC20;
  }
}
