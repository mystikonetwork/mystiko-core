/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { MystikoV2WithLoopERC20, MystikoV2WithLoopERC20Interface } from '../MystikoV2WithLoopERC20';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_hasher3',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_token',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'FIELD_SIZE',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'asset',
    outputs: [
      {
        internalType: 'contract IERC20Metadata',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetDecimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetName',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetSymbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetType',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'associatedCommitmentPool',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'bridgeType',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_newOperator',
        type: 'address',
      },
    ],
    name: 'changeOperator',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'hashK',
            type: 'uint256',
          },
          {
            internalType: 'uint128',
            name: 'randomS',
            type: 'uint128',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoLoop.DepositRequest',
        name: '_request',
        type: 'tuple',
      },
    ],
    name: 'deposit',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'hasher3',
    outputs: [
      {
        internalType: 'contract IHasher3',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isDepositsDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'minAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'operator',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sanctionsContract',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_commitmentPoolAddress',
        type: 'address',
      },
    ],
    name: 'setAssociatedCommitmentPool',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_minAmount',
        type: 'uint256',
      },
    ],
    name: 'setMinAmount',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'toggleDeposits',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_check',
        type: 'bool',
      },
    ],
    name: 'toggleSanctionCheck',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_sanction',
        type: 'address',
      },
    ],
    name: 'updateSanctionContractAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x6080604052600080546001600160a81b0319167340c57923924b5c5c5455c48d93317139addac8fb17905534801561003657600080fd5b50604051611616380380611616833981016040819052610055916100ad565b60048054336001600160a01b0319918216179091556001805482166001600160a01b0394851617905560058054909116919092161790556100e0565b80516001600160a01b03811681146100a857600080fd5b919050565b600080604083850312156100c057600080fd5b6100c983610091565b91506100d760208401610091565b90509250929050565b611527806100ef6000396000f3fe60806040526004361061015f5760003560e01c8063897b0637116100c0578063c9230c5d11610074578063ec18d3e211610059578063ec18d3e2146103f0578063ed6ea33a14610410578063f6afe88f1461044157600080fd5b8063c9230c5d146103bb578063e19abef8146103d057600080fd5b80639b2cb5d8116100a55780639b2cb5d81461035e578063b4318ead14610374578063c2d416011461039457600080fd5b8063897b06371461031e57806399383f781461033e57600080fd5b80633fe3347a1161011757806353af27d5116100fc57806353af27d5146102be578063570ca735146102de5780636afdf048146102fe57600080fd5b80633fe3347a14610236578063414a37ba1461027c57600080fd5b80632421e155116101485780632421e155146101b157806334c33e83146101de57806338d52e0f146101fe57600080fd5b806306394c9b14610164578063176de7a814610186575b600080fd5b34801561017057600080fd5b5061018461017f36600461111e565b610454565b005b34801561019257600080fd5b5061019b6104f0565b6040516101a89190611386565b60405180910390f35b3480156101bd57600080fd5b5060408051808201909152600481526306c6f6f760e41b602082015261019b565b3480156101ea57600080fd5b506101846101f936600461111e565b610576565b34801561020a57600080fd5b5060055461021e906001600160a01b031681565b6040516001600160a01b0390911681526020016101a8565b34801561024257600080fd5b5060408051808201909152600581527f6572633230000000000000000000000000000000000000000000000000000000602082015261019b565b34801561028857600080fd5b506102b07f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000181565b6040519081526020016101a8565b3480156102ca57600080fd5b5060005461021e906001600160a01b031681565b3480156102ea57600080fd5b5060045461021e906001600160a01b031681565b34801561030a57600080fd5b5060015461021e906001600160a01b031681565b34801561032a57600080fd5b506101846103393660046112b8565b61060d565b34801561034a57600080fd5b50610184610359366004611147565b61067a565b34801561036a57600080fd5b506102b060035481565b34801561038057600080fd5b5061018461038f366004611147565b610700565b3480156103a057600080fd5b506103a9610786565b60405160ff90911681526020016101a8565b3480156103c757600080fd5b5061019b610803565b3480156103dc57600080fd5b506101846103eb36600461111e565b610848565b3480156103fc57600080fd5b5060025461021e906001600160a01b031681565b34801561041c57600080fd5b5060045461043190600160a01b900460ff1681565b60405190151581526020016101a8565b61018461044f3660046111f8565b6108df565b6004546001600160a01b031633146104c15760405162461bcd60e51b815260206004820152602560248201527f4f6e6c79206f70657261746f722063616e2063616c6c20746869732066756e636044820152643a34b7b71760d91b60648201526084015b60405180910390fd5b6004805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b600554604080516395d89b4160e01b815290516060926001600160a01b0316916395d89b41916004808301926000929190829003018186803b15801561053557600080fd5b505afa158015610549573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105719190810190611181565b905090565b6004546001600160a01b031633146105de5760405162461bcd60e51b815260206004820152602560248201527f4f6e6c79206f70657261746f722063616e2063616c6c20746869732066756e636044820152643a34b7b71760d91b60648201526084016104b8565b6000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6004546001600160a01b031633146106755760405162461bcd60e51b815260206004820152602560248201527f4f6e6c79206f70657261746f722063616e2063616c6c20746869732066756e636044820152643a34b7b71760d91b60648201526084016104b8565b600355565b6004546001600160a01b031633146106e25760405162461bcd60e51b815260206004820152602560248201527f4f6e6c79206f70657261746f722063616e2063616c6c20746869732066756e636044820152643a34b7b71760d91b60648201526084016104b8565b60048054911515600160a01b0260ff60a01b19909216919091179055565b6004546001600160a01b031633146107685760405162461bcd60e51b815260206004820152602560248201527f4f6e6c79206f70657261746f722063616e2063616c6c20746869732066756e636044820152643a34b7b71760d91b60648201526084016104b8565b60008054911515600160a01b0260ff60a01b19909216919091179055565b6005546040805163313ce56760e01b815290516000926001600160a01b03169163313ce567916004808301926020929190829003018186803b1580156107cb57600080fd5b505afa1580156107df573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057191906112ea565b600554604080516306fdde0360e01b815290516060926001600160a01b0316916306fdde03916004808301926000929190829003018186803b15801561053557600080fd5b6004546001600160a01b031633146108b05760405162461bcd60e51b815260206004820152602560248201527f4f6e6c79206f70657261746f722063616e2063616c6c20746869732066756e636044820152643a34b7b71760d91b60648201526084016104b8565b6002805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b600454600160a01b900460ff16156109395760405162461bcd60e51b815260206004820152601560248201527f6465706f73697473206172652064697361626c6564000000000000000000000060448201526064016104b8565b6003548151101561098c5760405162461bcd60e51b815260206004820152600e60248201527f616d6f756e7420746f6f2066657700000000000000000000000000000000000060448201526064016104b8565b60006109a5826040015183600001518460600151610a70565b9050808260200151146109fa5760405162461bcd60e51b815260206004820152601960248201527f636f6d6d69746d656e74206861736820696e636f72726563740000000000000060448201526064016104b8565b610a0333610c34565b15610a505760405162461bcd60e51b815260206004820152601260248201527f73616e6374696f6e65642061646472657373000000000000000000000000000060448201526064016104b8565b610a6c826000015183602001518460a001518560800151610cce565b5050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018410610aed5760405162461bcd60e51b8152602060048201526024808201527f686173684b2073686f756c64206265206c657373207468616e204649454c445f60448201526353495a4560e01b60648201526084016104b8565b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018310610b825760405162461bcd60e51b815260206004820152602660248201527f72616e646f6d532073686f756c64206265206c657373207468616e204649454c60448201527f445f53495a45000000000000000000000000000000000000000000000000000060648201526084016104b8565b60015460408051606081018252868152602081018690526fffffffffffffffffffffffffffffffff85168183015290516304b98e1d60e31b81526001600160a01b03909216916325cc70e891610bda91600401611355565b60206040518083038186803b158015610bf257600080fd5b505afa158015610c06573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c2a91906112d1565b90505b9392505050565b60008054600160a01b900460ff1615610c4f57506000919050565b60005460405163df592f7d60e01b81526001600160a01b03848116600483015290911690819063df592f7d9060240160206040518083038186803b158015610c9657600080fd5b505afa158015610caa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c2d9190611164565b600254610cef906001600160a01b0316610ce88487611478565b6000610dee565b6040805160a081018252858152602081018590526000818301819052606082018590526080820184905260025492516378d60cd760e01b815291926001600160a01b0316916378d60cd791610d4991859190600401611399565b602060405180830381600087803b158015610d6357600080fd5b505af1158015610d77573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d9b9190611164565b610de75760405162461bcd60e51b815260206004820152601260248201527f63616c6c20656e7175657565206572726f72000000000000000000000000000060448201526064016104b8565b5050505050565b803414610e3d5760405162461bcd60e51b815260206004820152601360248201527f62726964676520666565206d69736d617463680000000000000000000000000060448201526064016104b8565b600554610e55906001600160a01b0316338585610e5a565b505050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b179052610ec9908590610ecf565b50505050565b6000610f24826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610fb49092919063ffffffff16565b805190915015610e555780806020019051810190610f429190611164565b610e555760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016104b8565b6060610c2a8484600085856001600160a01b0385163b6110165760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016104b8565b600080866001600160a01b031685876040516110329190611339565b60006040518083038185875af1925050503d806000811461106f576040519150601f19603f3d011682016040523d82523d6000602084013e611074565b606091505b509150915061108482828661108f565b979650505050505050565b6060831561109e575081610c2d565b8251156110ae5782518084602001fd5b8160405162461bcd60e51b81526004016104b89190611386565b600082601f8301126110d957600080fd5b81356110ec6110e782611450565b61141f565b81815284602083860101111561110157600080fd5b816020850160208301376000918101602001919091529392505050565b60006020828403121561113057600080fd5b81356001600160a01b0381168114610c2d57600080fd5b60006020828403121561115957600080fd5b8135610c2d816114e0565b60006020828403121561117657600080fd5b8151610c2d816114e0565b60006020828403121561119357600080fd5b815167ffffffffffffffff8111156111aa57600080fd5b8201601f810184136111bb57600080fd5b80516111c96110e782611450565b8181528560208385010111156111de57600080fd5b6111ef82602083016020860161149e565b95945050505050565b60006020828403121561120a57600080fd5b813567ffffffffffffffff8082111561122257600080fd5b9083019060c0828603121561123657600080fd5b61123e6113f6565b82358152602083013560208201526040830135604082015260608301356fffffffffffffffffffffffffffffffff8116811461127957600080fd5b606082015260808301358281111561129057600080fd5b61129c878286016110c8565b60808301525060a083013560a082015280935050505092915050565b6000602082840312156112ca57600080fd5b5035919050565b6000602082840312156112e357600080fd5b5051919050565b6000602082840312156112fc57600080fd5b815160ff81168114610c2d57600080fd5b6000815180845261132581602086016020860161149e565b601f01601f19169290920160200192915050565b6000825161134b81846020870161149e565b9190910192915050565b60608101818360005b600381101561137d57815183526020928301929091019060010161135e565b50505092915050565b602081526000610c2d602083018461130d565b60408152825160408201526020830151606082015260408301516080820152606083015160a08201526000608084015160a060c08401526113dd60e084018261130d565b9150506001600160a01b03831660208301529392505050565b60405160c0810167ffffffffffffffff81118282101715611419576114196114ca565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715611448576114486114ca565b604052919050565b600067ffffffffffffffff82111561146a5761146a6114ca565b50601f01601f191660200190565b6000821982111561149957634e487b7160e01b600052601160045260246000fd5b500190565b60005b838110156114b95781810151838201526020016114a1565b83811115610ec95750506000910152565b634e487b7160e01b600052604160045260246000fd5b80151581146114ee57600080fd5b5056fea26469706673582212208883285b81bb1cbe862ef8b48dbad06c9c800a179548092d68c4ee48df32f3de64736f6c63430008070033';

type MystikoV2WithLoopERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MystikoV2WithLoopERC20ConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MystikoV2WithLoopERC20__factory extends ContractFactory {
  constructor(...args: MystikoV2WithLoopERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'MystikoV2WithLoopERC20';
  }

  deploy(
    _hasher3: string,
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<MystikoV2WithLoopERC20> {
    return super.deploy(_hasher3, _token, overrides || {}) as Promise<MystikoV2WithLoopERC20>;
  }
  getDeployTransaction(
    _hasher3: string,
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(_hasher3, _token, overrides || {});
  }
  attach(address: string): MystikoV2WithLoopERC20 {
    return super.attach(address) as MystikoV2WithLoopERC20;
  }
  connect(signer: Signer): MystikoV2WithLoopERC20__factory {
    return super.connect(signer) as MystikoV2WithLoopERC20__factory;
  }
  static readonly contractName: 'MystikoV2WithLoopERC20';
  public readonly contractName: 'MystikoV2WithLoopERC20';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MystikoV2WithLoopERC20Interface {
    return new utils.Interface(_abi) as MystikoV2WithLoopERC20Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MystikoV2WithLoopERC20 {
    return new Contract(address, _abi, signerOrProvider) as MystikoV2WithLoopERC20;
  }
}
