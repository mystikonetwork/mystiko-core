import "./KeccakBatch.zok" as LeavesHasher
import "./MerkleTreeBuilder.zok" as MerkleTree
import "./MerkleTreeUpdater.zok" as MerkleTreeUpdater

const field[32] defaultZeros = [\
  4506069241680023110764189603658664710592327039412547147745745078424755206435,
  11970986605677607431310473423176184560047228481560615908426980545799110088554,
  7738458864445542950035640909064911813760082193622764438647303881621331058401,
  1824110265544309188449535094624170286636245442276303308874119852616011569117,
  439876057652168043934546800930066844791837722960866592010071331117924956099,
  12148869658182608721880798177538135429676415436078660143891999467741175137753,
  19053554365366326893907951819376775362002701838241631566910091576437078877172,
  10852150351752357373309416331902947839408978407172036283446975657659303929195,
  6566746118285923398615130593102917883145176519985675587853568572822039375467,
  11417224681467267073071367078086518555025552633367123694305661076901745684286,
  13146739646829761771013347284695047890376017649809716402068931193605641442310,
  13459844126372070230208178859743367134654673422311448382103194318897111588993,
  14583232149490424807206413850907122884313879413776985151786010057621431694070,
  2518967593166921945692229141011622021498534525148812865797548053589389731063,
  19430810468586029191888627527380085964985035379281934526683112683473563049974,
  1897867614655011189086460938574526976583854364278605894377849343324624277074,
  18754984716384146963617729123402842399317045829379373763323387175769990714598,
  405949121641363157950726008207114912594987007836580877922134622675538021820,
  1088017070740705619214203129319291293539718028549242800354988860810207454418,
  21353011710845911836996543245897491023336659221412024163427506108383429011430,
  17749238747541177922260023106539184144732198174810064796938596694265936155259,
  2075393378094693254774654573545142692544561637317244351058483052393751634703,
  16722505204088094412486203391222218829920348347221074175055753816911628645782,
  12363952950807080168581550733914407510536975151639310957950584477670860711847,
  10329604628575281453151767624989354700984823669533380647141683321011842904387,
  6786932317737336481836453155794576859076099363706263920807867623375002220051,
  1095762658628848651950133756531023934995326201606239762241842229511708432973,
  15972138919465776163920491001484366021008021716324328852925101476359351519255,
  16129330525015604662646302893604911744769665677133181295582480658744807402110,
  16704502504460675449846784815849025989402638612907582712659689210169156075769,
  13519934288458064102175830458858015936170401683429767173542225128161091455592,
  13202030544264649816737469308990869537826379298057211734249690002947353708909
]

def main<H, R, N>(\
  field oldRoot, \
  field newRoot, \
  field leavesHash, \
  field pathIndices, \
  private field[R] pathElements, \
  private field[N] leaves) -> bool:
  u32 batchHeight = H - R
  assert(N == (1 << batchHeight))
  assert(leavesHash == LeavesHasher(leaves))
  field batchRoot = MerkleTree::<N, batchHeight>(leaves)
  assert(MerkleTreeUpdater::<R>(\
    defaultZeros[batchHeight], \
    oldRoot, \
    batchRoot, \
    newRoot, \
    pathIndices, \
    pathElements \
  ))
  return true
