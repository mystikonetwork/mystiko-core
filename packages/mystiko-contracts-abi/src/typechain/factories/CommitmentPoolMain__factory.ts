/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides, BigNumberish } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { CommitmentPoolMain, CommitmentPoolMainInterface } from '../CommitmentPoolMain';

const _abi = [
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_treeHeight',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '_rootHistoryLength',
        type: 'uint32',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
    ],
    name: 'CommitmentIncluded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'rollupFee',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'leafIndex',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'bytes',
        name: 'encryptedNote',
        type: 'bytes',
      },
    ],
    name: 'CommitmentQueued',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'rootHash',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'serialNumber',
        type: 'uint256',
      },
    ],
    name: 'CommitmentSpent',
    type: 'event',
  },
  {
    inputs: [],
    name: 'FIELD_SIZE',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_actor',
        type: 'address',
      },
    ],
    name: 'addInputWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_roller',
        type: 'address',
      },
    ],
    name: 'addRollupWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetType',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_newOperator',
        type: 'address',
      },
    ],
    name: 'changeOperator',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'commitmentIncludedCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'commitmentQueue',
    outputs: [
      {
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'rollupFee',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'commitmentQueueSize',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'currentRoot',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'currentRootIndex',
    outputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
    ],
    name: 'disableRollupVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_numInputs',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '_numOutputs',
        type: 'uint32',
      },
    ],
    name: 'disableTransactVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
      {
        internalType: 'address',
        name: '_rollupVerifier',
        type: 'address',
      },
    ],
    name: 'enableRollupVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_numInputs',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '_numOutputs',
        type: 'uint32',
      },
      {
        internalType: 'address',
        name: '_transactVerifier',
        type: 'address',
      },
    ],
    name: 'enableTransactVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
        ],
        internalType: 'struct ICommitmentPool.CommitmentRequest',
        name: '_request',
        type: 'tuple',
      },
    ],
    name: 'enqueue',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'historicCommitments',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'inputWhitelist',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'root',
        type: 'uint256',
      },
    ],
    name: 'isKnownRoot',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isRollupWhitelistDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isVerifierUpdateDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'minRollupFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'operator',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_actor',
        type: 'address',
      },
    ],
    name: 'removeInputWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_roller',
        type: 'address',
      },
    ],
    name: 'removeRollupWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'a',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256[2]',
                    name: 'X',
                    type: 'uint256[2]',
                  },
                  {
                    internalType: 'uint256[2]',
                    name: 'Y',
                    type: 'uint256[2]',
                  },
                ],
                internalType: 'struct IVerifier.G2Point',
                name: 'b',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'c',
                type: 'tuple',
              },
            ],
            internalType: 'struct IVerifier.Proof',
            name: 'proof',
            type: 'tuple',
          },
          {
            internalType: 'uint32',
            name: 'rollupSize',
            type: 'uint32',
          },
          {
            internalType: 'uint256',
            name: 'newRoot',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'leafHash',
            type: 'uint256',
          },
        ],
        internalType: 'struct ICommitmentPool.RollupRequest',
        name: '_request',
        type: 'tuple',
      },
    ],
    name: 'rollup',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    name: 'rollupVerifiers',
    outputs: [
      {
        internalType: 'contract IVerifier',
        name: 'verifier',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'enabled',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'rollupWhitelist',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    name: 'rootHistory',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'rootHistoryLength',
    outputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_minRollupFee',
        type: 'uint256',
      },
    ],
    name: 'setMinRollupFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'spentSerialNumbers',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'toggleRollupWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'toggleVerifierUpdate',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'a',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256[2]',
                    name: 'X',
                    type: 'uint256[2]',
                  },
                  {
                    internalType: 'uint256[2]',
                    name: 'Y',
                    type: 'uint256[2]',
                  },
                ],
                internalType: 'struct IVerifier.G2Point',
                name: 'b',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'c',
                type: 'tuple',
              },
            ],
            internalType: 'struct IVerifier.Proof',
            name: 'proof',
            type: 'tuple',
          },
          {
            internalType: 'uint256',
            name: 'rootHash',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'serialNumbers',
            type: 'uint256[]',
          },
          {
            internalType: 'uint256[]',
            name: 'sigHashes',
            type: 'uint256[]',
          },
          {
            internalType: 'bytes32',
            name: 'sigPk',
            type: 'bytes32',
          },
          {
            internalType: 'uint256',
            name: 'publicAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'relayerFeeAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'outCommitments',
            type: 'uint256[]',
          },
          {
            internalType: 'uint256[]',
            name: 'outRollupFees',
            type: 'uint256[]',
          },
          {
            internalType: 'address',
            name: 'publicRecipient',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'relayerAddress',
            type: 'address',
          },
          {
            internalType: 'bytes[]',
            name: 'outEncryptedNotes',
            type: 'bytes[]',
          },
        ],
        internalType: 'struct ICommitmentPool.TransactRequest',
        name: '_request',
        type: 'tuple',
      },
      {
        internalType: 'bytes',
        name: '_signature',
        type: 'bytes',
      },
    ],
    name: 'transact',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    name: 'transactVerifiers',
    outputs: [
      {
        internalType: 'contract IVerifier',
        name: 'verifier',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'enabled',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'treeCapacity',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x60a060405260006006819055600755600a805463ffffffff191690553480156200002857600080fd5b50604051620040b8380380620040b88339810160408190526200004b9162000879565b6001600055818163ffffffff8116620000be5760405162461bcd60e51b815260206004820152602b60248201527f5f726f6f74486973746f72794c656e6774682073686f756c642062652067726560448201526a061746572207468616e20360ac1b606482015260840160405180910390fd5b600a8054600160201b600160e01b03191633680100000000000000000263ffffffff60201b19161764010000000063ffffffff84811691909102919091179091556200010e9083166002620008fa565b6080526200011c8262000144565b6009819055600a5463ffffffff1660009081526008602052604090205550620009db92505050565b600063ffffffff82166200017957507f09f658457775074ff4c842032a5ec2f1134c32784cca59d594caac8c503b7923919050565b8163ffffffff1660011415620001b057507f1a77569b79cb7c2eaf9368de9e3b1efc0a606561e5ab299c2337340f3cdd576a919050565b8163ffffffff1660021415620001e757507f111bd0002b1e3b8f1978c932b5ccb2fab87fdb0acab2ddb266f9a346dcb11ee1919050565b8163ffffffff16600314156200021e57507f040868ea2a363e05d7ae44280f69b49e429ab096ca2844efe91f8d6b3dad57dd919050565b8163ffffffff16600414156200025457507ef8f605c92c8502c8fe83be1b83b24e3f67312a388f30cbadb5dee8974137c3919050565b8163ffffffff16600514156200028b57507f1adc043c99adbc0c86a60a36db0f661e2dd96f36ede322f954386d8935a0c5d9919050565b8163ffffffff1660061415620002c257507f2a1fedfa71da723ac3e9b35cef752fa1b647b2b737a23e91241cb7bdc419e3f4919050565b8163ffffffff1660071415620002f957507f17fe1974543c4c4b228e1292f7e3200d31435fc910ee5a8c5cafd329cc4b256b919050565b8163ffffffff16600814156200033057507f0e84a586eb63a0eec0f1fe5785022441f0e29e4ae859c7ce1f5fc88a42ad2e6b919050565b8163ffffffff16600914156200036757507f193deb901f6eeb032e02e093280db17e373d4ff52bafda9215b46bb9b0a86f3e919050565b8163ffffffff16600a14156200039e57507f1d10ca7b985697cb519565a5006c3f44b020b2edab9b7422ed15dc34532f9406919050565b8163ffffffff16600b1415620003d557507f1dc200763555467a4e583e00badfdc1fb4d3d3f8f1cc81f31fd2f8b387776081919050565b8163ffffffff16600c14156200040c57507f203dd11fdba0ed13b20ca2d6952f3feb7461836a03512e0cccce8467b320b2f6919050565b8163ffffffff16600d14156200044357507f0591af64e64a3e69caf23eee2bdea90885343a49f547ee9464e95d8d6267e4f7919050565b8163ffffffff16600e14156200047a57507f2af572f1077a32f46dc8e307d43c0fa6753b400b2107325976b8df7380545ff6919050565b8163ffffffff16600f1415620004b157507f043227ae4b70b1aacd04e35e6aaed7b56d91220c31e97aaf52e12a6a56984e52919050565b8163ffffffff1660101415620004e857507f2976f1f6a91d83d4c528dad69ece6d3d91934b0e5657e915b360c8c4c2fb54e6919050565b8163ffffffff16601114156200051e57507ee5c251c9e093658be0cd1b0df55b6f70f3d09146c1c8b4212a4ddcde700dbc919050565b8163ffffffff16601214156200055557507f0267cbbc1bc2f1c3e3073d2ee60df8cc0bfef39fe3cee735c9ad5c8ad30064d2919050565b8163ffffffff16601314156200058c57507f2f356057bc56f67dbf159a0e8935022acd5e982dce9f4071adc43e4d57ce27e6919050565b8163ffffffff1660141415620005c357507f273db68f52f12a9d8022ae524050064e42d4d1661c9bcce958acf89b5e8b127b919050565b8163ffffffff1660151415620005fa57507f0496a18ad4cca81b7c98ceb197439ad925e0f7f62d69dfa42cf9574be77fe30f919050565b8163ffffffff16601614156200063157507f24f89a3f943d421b2f3a554b65459f42b820ac09d6fd9d693df5f8ba732ab596919050565b8163ffffffff16601714156200066857507f1b55bfd751c6807df36876cdce68034ab43210be2bc8afa8043c7f428604e7a7919050565b8163ffffffff16601814156200069f57507f16d6595a398cf20f2489b90e958166f1e19c537c0c46e9b8ea5462391ee8f143919050565b8163ffffffff1660191415620006d657507f0f01447ef8f621592474b678ed2fc404ebaf22a6fce15364bb4152a88c113613919050565b8163ffffffff16601a14156200070d57507f026c2dffee48bacbc9d21cf90aa7c6e525ab01db6966a9e7e53b3d3f4d1f5a4d919050565b8163ffffffff16601b14156200074457507f234fe90732795745b2c504c791242a2bb193baa1cbeab57db9324b6bb9134817919050565b8163ffffffff16601c14156200077b57507f23a8e0a7e60981c52ebb498c260d5bef4d7c65145d17128996a77c33a3262a7e919050565b8163ffffffff16601d1415620007b257507f24ee69d2565210c7027ff6fc2657ed029278bc79f41077fe3281ea5d5d8e80f9919050565b8163ffffffff16601e1415620007e957507f1de402fa32463bb2917b733aeef0197a49cacacd1fe860c3acc8cd3b65a30a68919050565b8163ffffffff16601f14156200082057507f1d3015a0f6a7b3f754171d0540628107e50e25debceb16e0e33ae4205501896d919050565b8163ffffffff16602014156200085757507f264a260539342647256819046bae05bed903a8d19b3c90439d67317d5d881322919050565b506000919050565b805163ffffffff811681146200087457600080fd5b919050565b600080604083850312156200088d57600080fd5b62000898836200085f565b9150620008a8602084016200085f565b90509250929050565b600181815b80851115620008f2578160001904821115620008d657620008d6620009c5565b80851615620008e457918102915b93841c9390800290620008b6565b509250929050565b60006200090883836200090f565b9392505050565b6000826200092057506001620009bf565b816200092f57506000620009bf565b8160018114620009485760028114620009535762000973565b6001915050620009bf565b60ff841115620009675762000967620009c5565b50506001821b620009bf565b5060208310610133831016604e8410600b841016171562000998575081810a620009bf565b620009a48383620008b1565b8060001904821115620009bb57620009bb620009c5565b0290505b92915050565b634e487b7160e01b600052601160045260246000fd5b6080516136b362000a056000396000818161070f015281816109e0015261133b01526136b36000f3fe60806040526004361061024f5760003560e01c80639ae39ca311610138578063c3098df9116100b0578063deeff7cd1161007f578063ee438d4a11610064578063ee438d4a146107b0578063fdab463d146107d0578063ffa89b88146107e657600080fd5b8063deeff7cd14610747578063e4ed56711461076757600080fd5b8063c3098df91461068e578063c9a6999c146106bb578063c9abeb64146106fd578063de1559211461073157600080fd5b8063ac967fad11610107578063bc22be14116100ec578063bc22be14146105d2578063c193553914610602578063c259e2e61461066e57600080fd5b8063ac967fad14610597578063ba9bd07d146105ad57600080fd5b80639ae39ca3146105175780639b0a6fea146105375780639cc6b35414610557578063a6232a931461057757600080fd5b806353bc618e116101cb5780637cbf0ff61161019a578063806ae3621161017f578063806ae3621461049f57806390eeb02b146104cf5780639937e1471461050157600080fd5b80637cbf0ff61461045f5780637fa4b09c1461047f57600080fd5b806353bc618e146103a0578063570ca735146103d05780636e970a891461040f5780637013ea961461042f57600080fd5b806314a7737d116102225780633fe3347a116102075780633fe3347a14610311578063414a37ba146103445780634eb069f71461038657600080fd5b806314a7737d146102de5780633fae882e146102fe57600080fd5b806302d498f11461025457806305335faa1461027657806306394c9b146102965780630c987d13146102b6575b600080fd5b34801561026057600080fd5b5061027461026f366004612eae565b610805565b005b34801561028257600080fd5b50610274610291366004612ec9565b610880565b3480156102a257600080fd5b506102746102b1366004612eae565b6108ec565b6102c96102c4366004612f03565b61097f565b60405190151581526020015b60405180910390f35b3480156102ea57600080fd5b506102746102f9366004612f98565b610afa565b61027461030c36600461300c565b61114d565b34801561031d57600080fd5b50604080518082018252600481526336b0b4b760e11b602082015290516102d59190613329565b34801561035057600080fd5b506103787f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000181565b6040519081526020016102d5565b34801561039257600080fd5b50600e546102c99060ff1681565b3480156103ac57600080fd5b506102c96103bb366004612eae565b600d6020526000908152604090205460ff1681565b3480156103dc57600080fd5b50600a546103f790600160401b90046001600160a01b031681565b6040516001600160a01b0390911681526020016102d5565b34801561041b57600080fd5b5061027461042a366004612eae565b611c49565b34801561043b57600080fd5b506102c961044a366004612eae565b600c6020526000908152604090205460ff1681565b34801561046b57600080fd5b5061027461047a36600461319b565b611cbf565b34801561048b57600080fd5b5061027461049a36600461322c565b611d66565b3480156104ab57600080fd5b506102c96104ba36600461319b565b60036020526000908152604090205460ff1681565b3480156104db57600080fd5b50600a546104ec9063ffffffff1681565b60405163ffffffff90911681526020016102d5565b34801561050d57600080fd5b50610378600b5481565b34801561052357600080fd5b50610274610532366004612ec9565b611edf565b34801561054357600080fd5b506102746105523660046131b4565b611f44565b34801561056357600080fd5b50610274610572366004612eae565b612089565b34801561058357600080fd5b506102c961059236600461319b565b6120fc565b3480156105a357600080fd5b5061037860065481565b3480156105b957600080fd5b50600a546104ec90640100000000900463ffffffff1681565b3480156105de57600080fd5b506102c96105ed36600461319b565b60046020526000908152604090205460ff1681565b34801561060e57600080fd5b5061064f61061d366004613202565b60016020908152600092835260408084209091529082529020546001600160a01b03811690600160a01b900460ff1682565b604080516001600160a01b0390931683529015156020830152016102d5565b34801561067a57600080fd5b50610274610689366004613202565b612178565b34801561069a57600080fd5b506103786106a93660046131b4565b60086020526000908152604090205481565b3480156106c757600080fd5b5061064f6106d63660046131b4565b6002602052600090815260409020546001600160a01b03811690600160a01b900460ff1682565b34801561070957600080fd5b506103787f000000000000000000000000000000000000000000000000000000000000000081565b34801561073d57600080fd5b5061037860075481565b34801561075357600080fd5b506102746107623660046131cf565b6122e3565b34801561077357600080fd5b5061079b61078236600461319b565b6005602052600090815260409020805460019091015482565b604080519283526020830191909152016102d5565b3480156107bc57600080fd5b506102746107cb366004612eae565b612448565b3480156107dc57600080fd5b5061037860095481565b3480156107f257600080fd5b50600e546102c990610100900460ff1681565b600a54600160401b90046001600160a01b0316331461085c5760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b60448201526064015b60405180910390fd5b6001600160a01b03166000908152600c60205260409020805460ff19166001179055565b600a54600160401b90046001600160a01b031633146108d25760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b6044820152606401610853565b600e80549115156101000261ff0019909216919091179055565b600a54600160401b90046001600160a01b0316331461093e5760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b6044820152606401610853565b600a80546001600160a01b03909216600160401b027fffffffff0000000000000000000000000000000000000000ffffffffffffffff909216919091179055565b336000908152600d602052604081205460ff166109de5760405162461bcd60e51b815260206004820152601760248201527f4f6e6c792077686974656c697374656420696e7075742e0000000000000000006044820152606401610853565b7f0000000000000000000000000000000000000000000000000000000000000000600654600754610a0f91906134c5565b10610a4b5760405162461bcd60e51b815260206004820152600c60248201526b1d1c9959481a5cc8199d5b1b60a21b6044820152606401610853565b60208083015160009081526003909152604090205460ff1615610aba5760405162461bcd60e51b815260206004820152602160248201527f74686520636f6d6d69746d656e7420686173206265656e207375626d697474656044820152601960fa1b6064820152608401610853565b60208083018051600090815260039092526040909120805460ff191660011790555160608301516080840151610af19291906124bb565b5060015b919050565b600e54610100900460ff1680610b1f5750336000908152600c602052604090205460ff165b610b6b5760405162461bcd60e51b815260206004820152601860248201527f4f6e6c792077686974656c697374656420726f6c6c65722e00000000000000006044820152606401610853565b610b7881604001516120fc565b15610bc55760405162461bcd60e51b815260206004820152601560248201527f6e6577526f6f74206973206475706c69636174656400000000000000000000006044820152606401610853565b6000816020015163ffffffff16118015610beb5750600654816020015163ffffffff1611155b8015610c18575060208181015163ffffffff16600090815260029091526040902054600160a01b900460ff165b610c595760405162461bcd60e51b8152602060048201526012602482015271696e76616c696420726f6c6c757053697a6560701b6044820152606401610853565b806020015163ffffffff16600754610c7191906135ca565b15610cca5760405162461bcd60e51b815260206004820152602360248201527f696e76616c696420726f6c6c757053697a652061742063757272656e7420737460448201526261746560e81b6064820152608401610853565b6000610cdc6007548360200151612556565b90506000826020015163ffffffff1667ffffffffffffffff811115610d0357610d03613659565b604051908082528060200260200182016040528015610d2c578160200160208202803683370190505b506007549091506000905b846020015163ffffffff16600754610d4f91906134c5565b811015610e7957600081815260056020526040902054610db15760405162461bcd60e51b815260206004820152601260248201527f696e646578206f7574206f6620626f756e6400000000000000000000000000006044820152606401610853565b60008181526005602052604090205460075481908590610dd19085613528565b81518110610de157610de1613643565b602002602001018181525050600560008381526020019081526020016000206001015483610e0f91906134c5565b6000838152600560205260408120818155600190810191909155600654919450610e3891613528565b60065560405181907ffe6b097b46a78e08506a3143b6337c2505ba77df76fe05c3663a987395d6341390600090a25080610e718161358b565b915050610d37565b5060007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000183604051602001610eae91906132c4565b6040516020818303038152906040528051906020012060001c610ed191906135ca565b905080856060015114610f265760405162461bcd60e51b815260206004820152601060248201527f696e76616c6964206c65616648617368000000000000000000000000000000006044820152606401610853565b60408051600480825260a082019092526000916020820160808036833701905050905060095481600081518110610f5f57610f5f613643565b602002602001018181525050856040015181600181518110610f8357610f83613643565b602002602001018181525050856060015181600281518110610fa757610fa7613643565b6020026020010181815250508481600381518110610fc757610fc7613643565b6020908102919091018101919091528681015163ffffffff16600090815260029091526040808220548851915163c941764760e01b81526001600160a01b039091169163c94176479161101f9190869060040161333c565b602060405180830381600087803b15801561103957600080fd5b505af115801561104d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110719190612ee6565b9050806110c05760405162461bcd60e51b815260206004820152600d60248201527f696e76616c69642070726f6f66000000000000000000000000000000000000006044820152606401610853565b6110c98461258e565b866020015163ffffffff166007546110e191906134c5565b6007556040870151600955600a5463ffffffff640100000000820481169161110b911660016134dd565b61111591906135de565b600a805463ffffffff191663ffffffff9290921691821790556040978801516000918252600860205297902096909655505050505050565b600260005414156111a05760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610853565b600260009081556040838101515160e08501515163ffffffff8083168552600160209081528486209183168652529190922054600160a01b900460ff166112295760405162461bcd60e51b815260206004820152601260248201527f696e76616c696420692f6f206c656e67746800000000000000000000000000006044820152606401610853565b8163ffffffff16846060015151146112835760405162461bcd60e51b815260206004820152601860248201527f696e76616c696420736967486173686573206c656e67746800000000000000006044820152606401610853565b8063ffffffff1684610100015151146112de5760405162461bcd60e51b815260206004820152601c60248201527f696e76616c6964206f7574526f6c6c757046656573206c656e677468000000006044820152606401610853565b8063ffffffff1684610160015151146113395760405162461bcd60e51b815260206004820181905260248201527f696e76616c6964206f7574456e637279707465644e6f746573206c656e6774686044820152606401610853565b7f00000000000000000000000000000000000000000000000000000000000000008163ffffffff1660065460075461137191906134c5565b61137b91906134c5565b11156113b85760405162461bcd60e51b815260206004820152600c60248201526b1d1c9959481a5cc8199d5b1b60a21b6044820152606401610853565b60006113c385612626565b905060006113d1828661273e565b60808701519091506001600160a01b038216146114305760405162461bcd60e51b815260206004820152601160248201527f696e76616c6964207369676e61747572650000000000000000000000000000006044820152606401610853565b600061143d8460026134fc565b6114488660026134fc565b6114539060046134dd565b61145d91906134dd565b63ffffffff1667ffffffffffffffff81111561147b5761147b613659565b6040519080825280602002602001820160405280156114a4578160200160208202803683370190505b5090506114b487602001516120fc565b6115005760405162461bcd60e51b815260206004820152600c60248201527f696e76616c696420726f6f7400000000000000000000000000000000000000006044820152606401610853565b86602001518160008151811061151857611518613643565b60200260200101818152505060005b8563ffffffff168163ffffffff16101561168a576004600089604001518363ffffffff168151811061155b5761155b613643565b60209081029190910181015182528101919091526040016000205460ff16156115c65760405162461bcd60e51b815260206004820152601760248201527f746865206e6f746520686173206265656e207370656e740000000000000000006044820152606401610853565b87604001518163ffffffff16815181106115e2576115e2613643565b6020026020010151828260016115f891906134dd565b63ffffffff168151811061160e5761160e613643565b60200260200101818152505087606001518163ffffffff168151811061163657611636613643565b6020026020010151828783600161164d91906134dd565b61165791906134dd565b63ffffffff168151811061166d5761166d613643565b602090810291909101015280611682816135a6565b915050611527565b5060808701518161169c8760026134fc565b6116a79060016134dd565b63ffffffff16815181106116bd576116bd613643565b602090810291909101015260a0870151816116d98760026134fc565b6116e49060026134dd565b63ffffffff16815181106116fa576116fa613643565b602090810291909101015260c0870151816117168760026134fc565b6117219060036134dd565b63ffffffff168151811061173757611737613643565b60200260200101818152505060005b8463ffffffff168163ffffffff16101561194c57600360008960e001518363ffffffff168151811061177a5761177a613643565b60209081029190910181015182528101919091526040016000205460ff16156117e55760405162461bcd60e51b815260206004820152601460248201527f6475706c696361746520636f6d6d69746d656e740000000000000000000000006044820152606401610853565b600b548861010001518263ffffffff168151811061180557611805613643565b6020026020010151101561185b5760405162461bcd60e51b815260206004820152601260248201527f726f6c6c75702066656520746f6f206c6f7700000000000000000000000000006044820152606401610853565b8760e001518163ffffffff168151811061187757611877613643565b6020026020010151828288600261188e91906134fc565b6118999060046134dd565b6118a391906134dd565b63ffffffff16815181106118b9576118b9613643565b6020026020010181815250508761010001518163ffffffff16815181106118e2576118e2613643565b60200260200101518282878960026118fa91906134fc565b61190491906134dd565b61190f9060046134dd565b61191991906134dd565b63ffffffff168151811061192f5761192f613643565b602090810291909101015280611944816135a6565b915050611746565b5063ffffffff80861660009081526001602090815260408083209388168352929052818120548951925163c941764760e01b815291926001600160a01b039091169163c9417647916119a291869060040161333c565b602060405180830381600087803b1580156119bc57600080fd5b505af11580156119d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119f49190612ee6565b905080611a435760405162461bcd60e51b815260206004820152601660248201527f696e76616c6964207472616e736163742070726f6f66000000000000000000006044820152606401610853565b60005b8663ffffffff168163ffffffff161015611b10576001600460008b604001518463ffffffff1681518110611a7c57611a7c613643565b6020026020010151815260200190815260200160002060006101000a81548160ff02191690831515021790555088604001518163ffffffff1681518110611ac557611ac5613643565b602002602001015189602001517f3c2372ab6130817bd6b8fc6dbaecae947e84201b49535d358debaa6c34c23ecf60405160405180910390a380611b08816135a6565b915050611a46565b5060005b8563ffffffff168163ffffffff161015611bff576001600360008b60e001518463ffffffff1681518110611b4a57611b4a613643565b6020026020010151815260200190815260200160002060006101000a81548160ff021916908315150217905550611bed8960e001518263ffffffff1681518110611b9657611b96613643565b60200260200101518a61010001518363ffffffff1681518110611bbb57611bbb613643565b60200260200101518b61016001518463ffffffff1681518110611be057611be0613643565b60200260200101516124bb565b80611bf7816135a6565b915050611b14565b5060a088015115611c1d57611c1d8861012001518960a00151612762565b60c088015115611c3a57611c3a8861014001518960c00151612762565b50506001600055505050505050565b600a54600160401b90046001600160a01b03163314611c9b5760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b6044820152606401610853565b6001600160a01b03166000908152600d60205260409020805460ff19166001179055565b600a54600160401b90046001600160a01b03163314611d115760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b6044820152606401610853565b60008111611d615760405162461bcd60e51b815260206004820152601560248201527f696e76616c6964205f6d696e526f6c6c757046656500000000000000000000006044820152606401610853565b600b55565b600a54600160401b90046001600160a01b03163314611db85760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b6044820152606401610853565b600e5460ff1615611e175760405162461bcd60e51b8152602060048201526024808201527f566572696669657220757064617465732068617665206265656e2064697361626044820152633632b21760e11b6064820152608401610853565b60008363ffffffff1611611e6d5760405162461bcd60e51b815260206004820152601460248201527f6e756d496e707574732073686f756c64203e20300000000000000000000000006044820152606401610853565b6040805180820182526001600160a01b0392831681526001602080830182815263ffffffff97881660009081529282528483209690971682529490945292209151825493511515600160a01b0274ffffffffffffffffffffffffffffffffffffffffff19909416911617919091179055565b600a54600160401b90046001600160a01b03163314611f315760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b6044820152606401610853565b600e805460ff1916911515919091179055565b600a54600160401b90046001600160a01b03163314611f965760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b6044820152606401610853565b60008163ffffffff1611611fe15760405162461bcd60e51b8152602060048201526012602482015271696e76616c696420726f6c6c757053697a6560701b6044820152606401610853565b600e5460ff16156120405760405162461bcd60e51b8152602060048201526024808201527f566572696669657220757064617465732068617665206265656e2064697361626044820152633632b21760e11b6064820152608401610853565b63ffffffff8116600090815260026020526040902054600160a01b900460ff16156120865763ffffffff81166000908152600260205260409020805460ff60a01b191690555b50565b600a54600160401b90046001600160a01b031633146120db5760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b6044820152606401610853565b6001600160a01b03166000908152600c60205260409020805460ff19169055565b600a5460009063ffffffff165b63ffffffff811660009081526008602052604090205483141561212f5750600192915050565b63ffffffff811661214d5750600a54640100000000900463ffffffff165b806121578161356b565b600a5490925063ffffffff8084169116141590506121095750600092915050565b600a54600160401b90046001600160a01b031633146121ca5760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b6044820152606401610853565b600e5460ff16156122295760405162461bcd60e51b8152602060048201526024808201527f566572696669657220757064617465732068617665206265656e2064697361626044820152633632b21760e11b6064820152608401610853565b60008263ffffffff161161227f5760405162461bcd60e51b815260206004820152601460248201527f6e756d496e707574732073686f756c64203e20300000000000000000000000006044820152606401610853565b63ffffffff828116600090815260016020908152604080832093851683529290522054600160a01b900460ff16156122df5763ffffffff8083166000908152600160209081526040808320938516835292905220805460ff60a01b191690555b5050565b600a54600160401b90046001600160a01b031633146123355760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b6044820152606401610853565b600e5460ff16156123945760405162461bcd60e51b8152602060048201526024808201527f566572696669657220757064617465732068617665206265656e2064697361626044820152633632b21760e11b6064820152608401610853565b60008263ffffffff16116123df5760405162461bcd60e51b8152602060048201526012602482015271696e76616c696420726f6c6c757053697a6560701b6044820152606401610853565b6040805180820182526001600160a01b0392831681526001602080830191825263ffffffff90951660009081526002909552919093209251835491511515600160a01b0274ffffffffffffffffffffffffffffffffffffffffff19909216921691909117179055565b600a54600160401b90046001600160a01b0316331461249a5760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b6044820152606401610853565b6001600160a01b03166000908152600d60205260409020805460ff19169055565b604080518082018252848152602080820185815260068054600090815260059093529382209251835551600190920191909155600754915490916124fe916134c5565b9050600654600161250f91906134c5565b60065560405184907ff533f9705aac5020e21695ea3553ac7b6881070d2b6900ab2b1e3050304b5bf990612548908690859087906133d8565b60405180910390a250505050565b60011c637fffffff1660005b63ffffffff82161561258757600183901c925060018263ffffffff16901c9150612562565b5090919050565b604051600090339083908381818185875af1925050503d80600081146125d0576040519150601f19603f3d011682016040523d82523d6000602084013e6125d5565b606091505b50509050806122df5760405162461bcd60e51b815260206004820152601a60248201527f726f6c6c757020666565207472616e73666572206661696c65640000000000006044820152606401610853565b6101208101516101408201516040516bffffffffffffffffffffffff19606093841b811660208301529190921b1660348201526000908190604801604051602081830303815290604052905060005b836101600151518163ffffffff1610156126e457818461016001518263ffffffff16815181106126a7576126a7613643565b60200260200101516040516020016126c09291906132fa565b604051602081830303815290604052915080806126dc906135a6565b915050612675565b508051602080830191909120604080517f19457468657265756d205369676e6564204d6573736167653a0a33320000000081850152603c8082019390935281518082039093018352605c01905280519101205b9392505050565b600080600061274d8585612858565b9150915061275a816128c8565b509392505050565b34156127b05760405162461bcd60e51b815260206004820152601860248201527f6e6f206d61696e6e657420746f6b656e20616c6c6f77656400000000000000006044820152606401610853565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146127fd576040519150601f19603f3d011682016040523d82523d6000602084013e612802565b606091505b50509050806128535760405162461bcd60e51b815260206004820152600f60248201527f7769746864726177206661696c656400000000000000000000000000000000006044820152606401610853565b505050565b60008082516041141561288f5760208301516040840151606085015160001a61288387828585612a83565b945094505050506128c1565b8251604014156128b957602083015160408401516128ae868383612b70565b9350935050506128c1565b506000905060025b9250929050565b60008160048111156128dc576128dc61362d565b14156128e55750565b60018160048111156128f9576128f961362d565b14156129475760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610853565b600281600481111561295b5761295b61362d565b14156129a95760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610853565b60038160048111156129bd576129bd61362d565b1415612a165760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610853565b6004816004811115612a2a57612a2a61362d565b14156120865760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610853565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115612aba5750600090506003612b67565b8460ff16601b14158015612ad257508460ff16601c14155b15612ae35750600090506004612b67565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015612b37573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116612b6057600060019250925050612b67565b9150600090505b94509492505050565b6000807f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831681612ba660ff86901c601b6134c5565b9050612bb487828885612a83565b935093505050935093915050565b80356001600160a01b0381168114610af557600080fd5b600082601f830112612bea57600080fd5b81356020612bff612bfa836134a1565b613470565b80838252828201915082860187848660051b8901011115612c1f57600080fd5b6000805b86811015612c6257823567ffffffffffffffff811115612c41578283fd5b612c4f8b88838d0101612d35565b8652509385019391850191600101612c23565b509198975050505050505050565b600082601f830112612c8157600080fd5b612c89613400565b808385604086011115612c9b57600080fd5b60005b6002811015612cbd578135845260209384019390910190600101612c9e565b509095945050505050565b600082601f830112612cd957600080fd5b81356020612ce9612bfa836134a1565b80838252828201915082860187848660051b8901011115612d0957600080fd5b60005b85811015612d2857813584529284019290840190600101612d0c565b5090979650505050505050565b600082601f830112612d4657600080fd5b813567ffffffffffffffff811115612d6057612d60613659565b612d73601f8201601f1916602001613470565b818152846020838601011115612d8857600080fd5b816020850160208301376000918101602001919091529392505050565b600060408284031215612db757600080fd5b6040516040810181811067ffffffffffffffff82111715612dda57612dda613659565b604052823581526020928301359281019290925250919050565b6000818303610100811215612e0857600080fd5b6040516060810181811067ffffffffffffffff82111715612e2b57612e2b613659565b604052915081612e3b8585612da5565b81526080603f1983011215612e4f57600080fd5b612e57613400565b9150612e668560408601612c70565b8252612e758560808601612c70565b6020830152816020820152612e8d8560c08601612da5565b6040820152505092915050565b803563ffffffff81168114610af557600080fd5b600060208284031215612ec057600080fd5b61273782612bc2565b600060208284031215612edb57600080fd5b81356127378161366f565b600060208284031215612ef857600080fd5b81516127378161366f565b600060208284031215612f1557600080fd5b813567ffffffffffffffff80821115612f2d57600080fd5b9083019060a08286031215612f4157600080fd5b612f49613429565b82358152602083013560208201526040830135604082015260608301356060820152608083013582811115612f7d57600080fd5b612f8987828601612d35565b60808301525095945050505050565b60006101608284031215612fab57600080fd5b6040516080810181811067ffffffffffffffff82111715612fce57612fce613659565b604052612fdb8484612df4565b8152612fea6101008401612e9a565b6020820152610120830135604082015261014090920135606083015250919050565b6000806040838503121561301f57600080fd5b823567ffffffffffffffff8082111561303757600080fd5b90840190610260828703121561304c57600080fd5b61305461344c565b61305e8784612df4565b8152610100808401356020830152610120808501358481111561308057600080fd5b61308c8a828801612cc8565b60408501525061014080860135858111156130a657600080fd5b6130b28b828901612cc8565b60608601525061016080870135608086015261018087013560a08601526101a087013560c08601526101c0870135868111156130ed57600080fd5b6130f98c828a01612cc8565b60e0870152506101e08701358681111561311257600080fd5b61311e8c828a01612cc8565b85870152506131306102008801612bc2565b838601526131416102208801612bc2565b8286015261024087013593508584111561315a57600080fd5b6131668b858901612bd9565b90850152509195505050602085013591508082111561318457600080fd5b5061319185828601612d35565b9150509250929050565b6000602082840312156131ad57600080fd5b5035919050565b6000602082840312156131c657600080fd5b61273782612e9a565b600080604083850312156131e257600080fd5b6131eb83612e9a565b91506131f960208401612bc2565b90509250929050565b6000806040838503121561321557600080fd5b61321e83612e9a565b91506131f960208401612e9a565b60008060006060848603121561324157600080fd5b61324a84612e9a565b925061325860208501612e9a565b915061326660408501612bc2565b90509250925092565b8060005b6002811015613292578151845260209384019390910190600101613273565b50505050565b600081518084526132b081602086016020860161353f565b601f01601f19169290920160200192915050565b815160009082906020808601845b838110156132ee578151855293820193908201906001016132d2565b50929695505050505050565b6000835161330c81846020880161353f565b83519083019061332081836020880161353f565b01949350505050565b6020815260006127376020830184613298565b600061012080830161335984875180518252602090810151910152565b60208087015161336d60408701825161326f565b81015161337d608087018261326f565b506040870151805160c08701526020015160e08601526101008501929092528451908190526101408401918581019160005b818110156133cb578351855293820193928201926001016133af565b5092979650505050505050565b8381528260208201526060604082015260006133f76060830184613298565b95945050505050565b6040805190810167ffffffffffffffff8111828210171561342357613423613659565b60405290565b60405160a0810167ffffffffffffffff8111828210171561342357613423613659565b604051610180810167ffffffffffffffff8111828210171561342357613423613659565b604051601f8201601f1916810167ffffffffffffffff8111828210171561349957613499613659565b604052919050565b600067ffffffffffffffff8211156134bb576134bb613659565b5060051b60200190565b600082198211156134d8576134d8613601565b500190565b600063ffffffff80831681851680830382111561332057613320613601565b600063ffffffff8083168185168183048111821515161561351f5761351f613601565b02949350505050565b60008282101561353a5761353a613601565b500390565b60005b8381101561355a578181015183820152602001613542565b838111156132925750506000910152565b600063ffffffff82168061358157613581613601565b6000190192915050565b600060001982141561359f5761359f613601565b5060010190565b600063ffffffff808316818114156135c0576135c0613601565b6001019392505050565b6000826135d9576135d9613617565b500690565b600063ffffffff808416806135f5576135f5613617565b92169190910692915050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b801515811461208657600080fdfea2646970667358221220f28ded2ba536d6116e4bf70c728bf70b7b1eb15a46334fc986f199070d58f69864736f6c63430008070033';

type CommitmentPoolMainConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CommitmentPoolMainConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CommitmentPoolMain__factory extends ContractFactory {
  constructor(...args: CommitmentPoolMainConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'CommitmentPoolMain';
  }

  deploy(
    _treeHeight: BigNumberish,
    _rootHistoryLength: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<CommitmentPoolMain> {
    return super.deploy(_treeHeight, _rootHistoryLength, overrides || {}) as Promise<CommitmentPoolMain>;
  }
  getDeployTransaction(
    _treeHeight: BigNumberish,
    _rootHistoryLength: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(_treeHeight, _rootHistoryLength, overrides || {});
  }
  attach(address: string): CommitmentPoolMain {
    return super.attach(address) as CommitmentPoolMain;
  }
  connect(signer: Signer): CommitmentPoolMain__factory {
    return super.connect(signer) as CommitmentPoolMain__factory;
  }
  static readonly contractName: 'CommitmentPoolMain';
  public readonly contractName: 'CommitmentPoolMain';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CommitmentPoolMainInterface {
    return new utils.Interface(_abi) as CommitmentPoolMainInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): CommitmentPoolMain {
    return new Contract(address, _abi, signerOrProvider) as CommitmentPoolMain;
  }
}
