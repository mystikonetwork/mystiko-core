/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides, BigNumberish } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { CommitmentPoolERC20, CommitmentPoolERC20Interface } from '../CommitmentPoolERC20';

const _abi = [
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_treeHeight',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '_rootHistoryLength',
        type: 'uint32',
      },
      {
        internalType: 'address',
        name: '_token',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
    ],
    name: 'CommitmentIncluded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'rollupFee',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'leafIndex',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'bytes',
        name: 'encryptedNote',
        type: 'bytes',
      },
    ],
    name: 'CommitmentQueued',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'rootHash',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'serialNumber',
        type: 'uint256',
      },
    ],
    name: 'CommitmentSpent',
    type: 'event',
  },
  {
    inputs: [],
    name: 'FIELD_SIZE',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_actor',
        type: 'address',
      },
    ],
    name: 'addInputWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_roller',
        type: 'address',
      },
    ],
    name: 'addRollupWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'asset',
    outputs: [
      {
        internalType: 'contract IERC20Metadata',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetDecimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetName',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetSymbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetType',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_newOperator',
        type: 'address',
      },
    ],
    name: 'changeOperator',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'commitmentIncludedCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'commitmentQueue',
    outputs: [
      {
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'rollupFee',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'commitmentQueueSize',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'currentRoot',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'currentRootIndex',
    outputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
    ],
    name: 'disableRollupVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_numInputs',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '_numOutputs',
        type: 'uint32',
      },
    ],
    name: 'disableTransactVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
      {
        internalType: 'address',
        name: '_rollupVerifier',
        type: 'address',
      },
    ],
    name: 'enableRollupVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_numInputs',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '_numOutputs',
        type: 'uint32',
      },
      {
        internalType: 'address',
        name: '_transactVerifier',
        type: 'address',
      },
    ],
    name: 'enableTransactVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
        ],
        internalType: 'struct ICommitmentPool.CommitmentRequest',
        name: '_request',
        type: 'tuple',
      },
    ],
    name: 'enqueue',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'historicCommitments',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'inputWhitelist',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'root',
        type: 'uint256',
      },
    ],
    name: 'isKnownRoot',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isRollupWhitelistDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isVerifierUpdateDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'minRollupFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'operator',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_actor',
        type: 'address',
      },
    ],
    name: 'removeInputWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_roller',
        type: 'address',
      },
    ],
    name: 'removeRollupWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'a',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256[2]',
                    name: 'X',
                    type: 'uint256[2]',
                  },
                  {
                    internalType: 'uint256[2]',
                    name: 'Y',
                    type: 'uint256[2]',
                  },
                ],
                internalType: 'struct IVerifier.G2Point',
                name: 'b',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'c',
                type: 'tuple',
              },
            ],
            internalType: 'struct IVerifier.Proof',
            name: 'proof',
            type: 'tuple',
          },
          {
            internalType: 'uint32',
            name: 'rollupSize',
            type: 'uint32',
          },
          {
            internalType: 'uint256',
            name: 'newRoot',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'leafHash',
            type: 'uint256',
          },
        ],
        internalType: 'struct ICommitmentPool.RollupRequest',
        name: '_request',
        type: 'tuple',
      },
    ],
    name: 'rollup',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    name: 'rollupVerifiers',
    outputs: [
      {
        internalType: 'contract IVerifier',
        name: 'verifier',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'enabled',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'rollupWhitelist',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    name: 'rootHistory',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'rootHistoryLength',
    outputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_minRollupFee',
        type: 'uint256',
      },
    ],
    name: 'setMinRollupFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'spentSerialNumbers',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'toggleRollupWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'toggleVerifierUpdate',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'a',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256[2]',
                    name: 'X',
                    type: 'uint256[2]',
                  },
                  {
                    internalType: 'uint256[2]',
                    name: 'Y',
                    type: 'uint256[2]',
                  },
                ],
                internalType: 'struct IVerifier.G2Point',
                name: 'b',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'c',
                type: 'tuple',
              },
            ],
            internalType: 'struct IVerifier.Proof',
            name: 'proof',
            type: 'tuple',
          },
          {
            internalType: 'uint256',
            name: 'rootHash',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'serialNumbers',
            type: 'uint256[]',
          },
          {
            internalType: 'uint256[]',
            name: 'sigHashes',
            type: 'uint256[]',
          },
          {
            internalType: 'bytes32',
            name: 'sigPk',
            type: 'bytes32',
          },
          {
            internalType: 'uint256',
            name: 'publicAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'relayerFeeAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'outCommitments',
            type: 'uint256[]',
          },
          {
            internalType: 'uint256[]',
            name: 'outRollupFees',
            type: 'uint256[]',
          },
          {
            internalType: 'address',
            name: 'publicRecipient',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'relayerAddress',
            type: 'address',
          },
          {
            internalType: 'bytes[]',
            name: 'outEncryptedNotes',
            type: 'bytes[]',
          },
        ],
        internalType: 'struct ICommitmentPool.TransactRequest',
        name: '_request',
        type: 'tuple',
      },
      {
        internalType: 'bytes',
        name: '_signature',
        type: 'bytes',
      },
    ],
    name: 'transact',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    name: 'transactVerifiers',
    outputs: [
      {
        internalType: 'contract IVerifier',
        name: 'verifier',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'enabled',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'treeCapacity',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x60a060405260006006819055600755600a805463ffffffff191690553480156200002857600080fd5b50604051620045b7380380620045b78339810160408190526200004b91620008a3565b600160005580838363ffffffff8116620000bf5760405162461bcd60e51b815260206004820152602b60248201527f5f726f6f74486973746f72794c656e6774682073686f756c642062652067726560448201526a061746572207468616e20360ac1b606482015260840160405180910390fd5b600a8054600160201b600160e01b03191633680100000000000000000263ffffffff60201b19161764010000000063ffffffff84811691909102919091179091556200010f908316600262000946565b6080526200011d826200016e565b6009819055600a5463ffffffff166000908152600860205260409020555050600e80546001600160a01b03909216620100000262010000600160b01b03199092169190911790555062000a27915050565b600063ffffffff8216620001a357507f09f658457775074ff4c842032a5ec2f1134c32784cca59d594caac8c503b7923919050565b8163ffffffff1660011415620001da57507f1a77569b79cb7c2eaf9368de9e3b1efc0a606561e5ab299c2337340f3cdd576a919050565b8163ffffffff16600214156200021157507f111bd0002b1e3b8f1978c932b5ccb2fab87fdb0acab2ddb266f9a346dcb11ee1919050565b8163ffffffff16600314156200024857507f040868ea2a363e05d7ae44280f69b49e429ab096ca2844efe91f8d6b3dad57dd919050565b8163ffffffff16600414156200027e57507ef8f605c92c8502c8fe83be1b83b24e3f67312a388f30cbadb5dee8974137c3919050565b8163ffffffff1660051415620002b557507f1adc043c99adbc0c86a60a36db0f661e2dd96f36ede322f954386d8935a0c5d9919050565b8163ffffffff1660061415620002ec57507f2a1fedfa71da723ac3e9b35cef752fa1b647b2b737a23e91241cb7bdc419e3f4919050565b8163ffffffff16600714156200032357507f17fe1974543c4c4b228e1292f7e3200d31435fc910ee5a8c5cafd329cc4b256b919050565b8163ffffffff16600814156200035a57507f0e84a586eb63a0eec0f1fe5785022441f0e29e4ae859c7ce1f5fc88a42ad2e6b919050565b8163ffffffff16600914156200039157507f193deb901f6eeb032e02e093280db17e373d4ff52bafda9215b46bb9b0a86f3e919050565b8163ffffffff16600a1415620003c857507f1d10ca7b985697cb519565a5006c3f44b020b2edab9b7422ed15dc34532f9406919050565b8163ffffffff16600b1415620003ff57507f1dc200763555467a4e583e00badfdc1fb4d3d3f8f1cc81f31fd2f8b387776081919050565b8163ffffffff16600c14156200043657507f203dd11fdba0ed13b20ca2d6952f3feb7461836a03512e0cccce8467b320b2f6919050565b8163ffffffff16600d14156200046d57507f0591af64e64a3e69caf23eee2bdea90885343a49f547ee9464e95d8d6267e4f7919050565b8163ffffffff16600e1415620004a457507f2af572f1077a32f46dc8e307d43c0fa6753b400b2107325976b8df7380545ff6919050565b8163ffffffff16600f1415620004db57507f043227ae4b70b1aacd04e35e6aaed7b56d91220c31e97aaf52e12a6a56984e52919050565b8163ffffffff16601014156200051257507f2976f1f6a91d83d4c528dad69ece6d3d91934b0e5657e915b360c8c4c2fb54e6919050565b8163ffffffff16601114156200054857507ee5c251c9e093658be0cd1b0df55b6f70f3d09146c1c8b4212a4ddcde700dbc919050565b8163ffffffff16601214156200057f57507f0267cbbc1bc2f1c3e3073d2ee60df8cc0bfef39fe3cee735c9ad5c8ad30064d2919050565b8163ffffffff1660131415620005b657507f2f356057bc56f67dbf159a0e8935022acd5e982dce9f4071adc43e4d57ce27e6919050565b8163ffffffff1660141415620005ed57507f273db68f52f12a9d8022ae524050064e42d4d1661c9bcce958acf89b5e8b127b919050565b8163ffffffff16601514156200062457507f0496a18ad4cca81b7c98ceb197439ad925e0f7f62d69dfa42cf9574be77fe30f919050565b8163ffffffff16601614156200065b57507f24f89a3f943d421b2f3a554b65459f42b820ac09d6fd9d693df5f8ba732ab596919050565b8163ffffffff16601714156200069257507f1b55bfd751c6807df36876cdce68034ab43210be2bc8afa8043c7f428604e7a7919050565b8163ffffffff1660181415620006c957507f16d6595a398cf20f2489b90e958166f1e19c537c0c46e9b8ea5462391ee8f143919050565b8163ffffffff16601914156200070057507f0f01447ef8f621592474b678ed2fc404ebaf22a6fce15364bb4152a88c113613919050565b8163ffffffff16601a14156200073757507f026c2dffee48bacbc9d21cf90aa7c6e525ab01db6966a9e7e53b3d3f4d1f5a4d919050565b8163ffffffff16601b14156200076e57507f234fe90732795745b2c504c791242a2bb193baa1cbeab57db9324b6bb9134817919050565b8163ffffffff16601c1415620007a557507f23a8e0a7e60981c52ebb498c260d5bef4d7c65145d17128996a77c33a3262a7e919050565b8163ffffffff16601d1415620007dc57507f24ee69d2565210c7027ff6fc2657ed029278bc79f41077fe3281ea5d5d8e80f9919050565b8163ffffffff16601e14156200081357507f1de402fa32463bb2917b733aeef0197a49cacacd1fe860c3acc8cd3b65a30a68919050565b8163ffffffff16601f14156200084a57507f1d3015a0f6a7b3f754171d0540628107e50e25debceb16e0e33ae4205501896d919050565b8163ffffffff16602014156200088157507f264a260539342647256819046bae05bed903a8d19b3c90439d67317d5d881322919050565b506000919050565b805163ffffffff811681146200089e57600080fd5b919050565b600080600060608486031215620008b957600080fd5b620008c48462000889565b9250620008d46020850162000889565b60408501519092506001600160a01b0381168114620008f257600080fd5b809150509250925092565b600181815b808511156200093e57816000190482111562000922576200092262000a11565b808516156200093057918102915b93841c939080029062000902565b509250929050565b60006200095483836200095b565b9392505050565b6000826200096c5750600162000a0b565b816200097b5750600062000a0b565b81600181146200099457600281146200099f57620009bf565b600191505062000a0b565b60ff841115620009b357620009b362000a11565b50506001821b62000a0b565b5060208310610133831016604e8410600b8410161715620009e4575081810a62000a0b565b620009f08383620008fd565b806000190482111562000a075762000a0762000a11565b0290505b92915050565b634e487b7160e01b600052601160045260246000fd5b608051613b6662000a516000396000818161081201528181610ae301526114cf0152613b666000f3fe6080604052600436106102bb5760003560e01c80639ae39ca31161016e578063c3098df9116100cb578063deeff7cd1161007f578063ee438d4a11610064578063ee438d4a146108b3578063fdab463d146108d3578063ffa89b88146108e957600080fd5b8063deeff7cd1461084a578063e4ed56711461086a57600080fd5b8063c9a6999c116100b0578063c9a6999c146107be578063c9abeb6414610800578063de1559211461083457600080fd5b8063c3098df91461077c578063c9230c5d146107a957600080fd5b8063ba9bd07d11610122578063c193553911610107578063c1935539146106c9578063c259e2e614610735578063c2d416011461075557600080fd5b8063ba9bd07d14610674578063bc22be141461069957600080fd5b80639cc6b354116101535780639cc6b3541461061e578063a6232a931461063e578063ac967fad1461065e57600080fd5b80639ae39ca3146105de5780639b0a6fea146105fe57600080fd5b80634eb069f71161021c5780637cbf0ff6116101d0578063806ae362116101b5578063806ae3621461056657806390eeb02b146105965780639937e147146105c857600080fd5b80637cbf0ff6146105265780637fa4b09c1461054657600080fd5b8063570ca73511610201578063570ca735146104af5780636e970a89146104d65780637013ea96146104f657600080fd5b80634eb069f71461046557806353bc618e1461047f57600080fd5b8063176de7a8116102735780633fae882e116102585780633fae882e146103ca5780633fe3347a146103dd578063414a37ba1461042357600080fd5b8063176de7a81461036a57806338d52e0f1461038c57600080fd5b806306394c9b116102a457806306394c9b146103025780630c987d131461032257806314a7737d1461034a57600080fd5b806302d498f1146102c057806305335faa146102e2575b600080fd5b3480156102cc57600080fd5b506102e06102db36600461328c565b610908565b005b3480156102ee57600080fd5b506102e06102fd3660046132a7565b610983565b34801561030e57600080fd5b506102e061031d36600461328c565b6109ef565b610335610330366004613358565b610a82565b60405190151581526020015b60405180910390f35b34801561035657600080fd5b506102e06103653660046133ed565b610bfd565b34801561037657600080fd5b5061037f611250565b60405161034191906137bd565b34801561039857600080fd5b50600e546103b2906201000090046001600160a01b031681565b6040516001600160a01b039091168152602001610341565b6102e06103d8366004613461565b6112e1565b3480156103e957600080fd5b5060408051808201909152600581527f6572633230000000000000000000000000000000000000000000000000000000602082015261037f565b34801561042f57600080fd5b506104577f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000181565b604051908152602001610341565b34801561047157600080fd5b50600e546103359060ff1681565b34801561048b57600080fd5b5061033561049a36600461328c565b600d6020526000908152604090205460ff1681565b3480156104bb57600080fd5b50600a546103b290600160401b90046001600160a01b031681565b3480156104e257600080fd5b506102e06104f136600461328c565b611ddd565b34801561050257600080fd5b5061033561051136600461328c565b600c6020526000908152604090205460ff1681565b34801561053257600080fd5b506102e06105413660046135f0565b611e53565b34801561055257600080fd5b506102e0610561366004613681565b611efa565b34801561057257600080fd5b506103356105813660046135f0565b60036020526000908152604090205460ff1681565b3480156105a257600080fd5b50600a546105b39063ffffffff1681565b60405163ffffffff9091168152602001610341565b3480156105d457600080fd5b50610457600b5481565b3480156105ea57600080fd5b506102e06105f93660046132a7565b612073565b34801561060a57600080fd5b506102e0610619366004613609565b6120d8565b34801561062a57600080fd5b506102e061063936600461328c565b61221d565b34801561064a57600080fd5b506103356106593660046135f0565b612290565b34801561066a57600080fd5b5061045760065481565b34801561068057600080fd5b50600a546105b390640100000000900463ffffffff1681565b3480156106a557600080fd5b506103356106b43660046135f0565b60046020526000908152604090205460ff1681565b3480156106d557600080fd5b506107166106e4366004613657565b60016020908152600092835260408084209091529082529020546001600160a01b03811690600160a01b900460ff1682565b604080516001600160a01b039093168352901515602083015201610341565b34801561074157600080fd5b506102e0610750366004613657565b61230c565b34801561076157600080fd5b5061076a612477565b60405160ff9091168152602001610341565b34801561078857600080fd5b50610457610797366004613609565b60086020526000908152604090205481565b3480156107b557600080fd5b5061037f6124ff565b3480156107ca57600080fd5b506107166107d9366004613609565b6002602052600090815260409020546001600160a01b03811690600160a01b900460ff1682565b34801561080c57600080fd5b506104577f000000000000000000000000000000000000000000000000000000000000000081565b34801561084057600080fd5b5061045760075481565b34801561085657600080fd5b506102e0610865366004613624565b61254f565b34801561087657600080fd5b5061089e6108853660046135f0565b6005602052600090815260409020805460019091015482565b60408051928352602083019190915201610341565b3480156108bf57600080fd5b506102e06108ce36600461328c565b6126b4565b3480156108df57600080fd5b5061045760095481565b3480156108f557600080fd5b50600e5461033590610100900460ff1681565b600a54600160401b90046001600160a01b0316331461095f5760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b60448201526064015b60405180910390fd5b6001600160a01b03166000908152600c60205260409020805460ff19166001179055565b600a54600160401b90046001600160a01b031633146109d55760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b6044820152606401610956565b600e80549115156101000261ff0019909216919091179055565b600a54600160401b90046001600160a01b03163314610a415760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b6044820152606401610956565b600a80546001600160a01b03909216600160401b027fffffffff0000000000000000000000000000000000000000ffffffffffffffff909216919091179055565b336000908152600d602052604081205460ff16610ae15760405162461bcd60e51b815260206004820152601760248201527f4f6e6c792077686974656c697374656420696e7075742e0000000000000000006044820152606401610956565b7f0000000000000000000000000000000000000000000000000000000000000000600654600754610b129190613978565b10610b4e5760405162461bcd60e51b815260206004820152600c60248201526b1d1c9959481a5cc8199d5b1b60a21b6044820152606401610956565b60208083015160009081526003909152604090205460ff1615610bbd5760405162461bcd60e51b815260206004820152602160248201527f74686520636f6d6d69746d656e7420686173206265656e207375626d697474656044820152601960fa1b6064820152608401610956565b60208083018051600090815260039092526040909120805460ff191660011790555160608301516080840151610bf4929190612727565b5060015b919050565b600e54610100900460ff1680610c225750336000908152600c602052604090205460ff165b610c6e5760405162461bcd60e51b815260206004820152601860248201527f4f6e6c792077686974656c697374656420726f6c6c65722e00000000000000006044820152606401610956565b610c7b8160400151612290565b15610cc85760405162461bcd60e51b815260206004820152601560248201527f6e6577526f6f74206973206475706c69636174656400000000000000000000006044820152606401610956565b6000816020015163ffffffff16118015610cee5750600654816020015163ffffffff1611155b8015610d1b575060208181015163ffffffff16600090815260029091526040902054600160a01b900460ff165b610d5c5760405162461bcd60e51b8152602060048201526012602482015271696e76616c696420726f6c6c757053697a6560701b6044820152606401610956565b806020015163ffffffff16600754610d749190613a7d565b15610dcd5760405162461bcd60e51b815260206004820152602360248201527f696e76616c696420726f6c6c757053697a652061742063757272656e7420737460448201526261746560e81b6064820152608401610956565b6000610ddf60075483602001516127c2565b90506000826020015163ffffffff1667ffffffffffffffff811115610e0657610e06613b0c565b604051908082528060200260200182016040528015610e2f578160200160208202803683370190505b506007549091506000905b846020015163ffffffff16600754610e529190613978565b811015610f7c57600081815260056020526040902054610eb45760405162461bcd60e51b815260206004820152601260248201527f696e646578206f7574206f6620626f756e6400000000000000000000000000006044820152606401610956565b60008181526005602052604090205460075481908590610ed490856139db565b81518110610ee457610ee4613af6565b602002602001018181525050600560008381526020019081526020016000206001015483610f129190613978565b6000838152600560205260408120818155600190810191909155600654919450610f3b916139db565b60065560405181907ffe6b097b46a78e08506a3143b6337c2505ba77df76fe05c3663a987395d6341390600090a25080610f7481613a3e565b915050610e3a565b5060007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000183604051602001610fb1919061373c565b6040516020818303038152906040528051906020012060001c610fd49190613a7d565b9050808560600151146110295760405162461bcd60e51b815260206004820152601060248201527f696e76616c6964206c65616648617368000000000000000000000000000000006044820152606401610956565b60408051600480825260a08201909252600091602082016080803683370190505090506009548160008151811061106257611062613af6565b60200260200101818152505085604001518160018151811061108657611086613af6565b6020026020010181815250508560600151816002815181106110aa576110aa613af6565b60200260200101818152505084816003815181106110ca576110ca613af6565b6020908102919091018101919091528681015163ffffffff16600090815260029091526040808220548851915163c941764760e01b81526001600160a01b039091169163c941764791611122919086906004016137d0565b602060405180830381600087803b15801561113c57600080fd5b505af1158015611150573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061117491906132c4565b9050806111c35760405162461bcd60e51b815260206004820152600d60248201527f696e76616c69642070726f6f66000000000000000000000000000000000000006044820152606401610956565b6111cc846127fa565b866020015163ffffffff166007546111e49190613978565b6007556040870151600955600a5463ffffffff640100000000820481169161120e91166001613990565b6112189190613a91565b600a805463ffffffff191663ffffffff9290921691821790556040978801516000918252600860205297902096909655505050505050565b6060600e60029054906101000a90046001600160a01b03166001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b1580156112a057600080fd5b505afa1580156112b4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526112dc91908101906132e1565b905090565b600260005414156113345760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610956565b600260009081556040838101515160e08501515163ffffffff8083168552600160209081528486209183168652529190922054600160a01b900460ff166113bd5760405162461bcd60e51b815260206004820152601260248201527f696e76616c696420692f6f206c656e67746800000000000000000000000000006044820152606401610956565b8163ffffffff16846060015151146114175760405162461bcd60e51b815260206004820152601860248201527f696e76616c696420736967486173686573206c656e67746800000000000000006044820152606401610956565b8063ffffffff1684610100015151146114725760405162461bcd60e51b815260206004820152601c60248201527f696e76616c6964206f7574526f6c6c757046656573206c656e677468000000006044820152606401610956565b8063ffffffff1684610160015151146114cd5760405162461bcd60e51b815260206004820181905260248201527f696e76616c6964206f7574456e637279707465644e6f746573206c656e6774686044820152606401610956565b7f00000000000000000000000000000000000000000000000000000000000000008163ffffffff166006546007546115059190613978565b61150f9190613978565b111561154c5760405162461bcd60e51b815260206004820152600c60248201526b1d1c9959481a5cc8199d5b1b60a21b6044820152606401610956565b600061155785612817565b90506000611565828661292f565b60808701519091506001600160a01b038216146115c45760405162461bcd60e51b815260206004820152601160248201527f696e76616c6964207369676e61747572650000000000000000000000000000006044820152606401610956565b60006115d18460026139af565b6115dc8660026139af565b6115e7906004613990565b6115f19190613990565b63ffffffff1667ffffffffffffffff81111561160f5761160f613b0c565b604051908082528060200260200182016040528015611638578160200160208202803683370190505b5090506116488760200151612290565b6116945760405162461bcd60e51b815260206004820152600c60248201527f696e76616c696420726f6f7400000000000000000000000000000000000000006044820152606401610956565b8660200151816000815181106116ac576116ac613af6565b60200260200101818152505060005b8563ffffffff168163ffffffff16101561181e576004600089604001518363ffffffff16815181106116ef576116ef613af6565b60209081029190910181015182528101919091526040016000205460ff161561175a5760405162461bcd60e51b815260206004820152601760248201527f746865206e6f746520686173206265656e207370656e740000000000000000006044820152606401610956565b87604001518163ffffffff168151811061177657611776613af6565b60200260200101518282600161178c9190613990565b63ffffffff16815181106117a2576117a2613af6565b60200260200101818152505087606001518163ffffffff16815181106117ca576117ca613af6565b602002602001015182878360016117e19190613990565b6117eb9190613990565b63ffffffff168151811061180157611801613af6565b60209081029190910101528061181681613a59565b9150506116bb565b506080870151816118308760026139af565b61183b906001613990565b63ffffffff168151811061185157611851613af6565b602090810291909101015260a08701518161186d8760026139af565b611878906002613990565b63ffffffff168151811061188e5761188e613af6565b602090810291909101015260c0870151816118aa8760026139af565b6118b5906003613990565b63ffffffff16815181106118cb576118cb613af6565b60200260200101818152505060005b8463ffffffff168163ffffffff161015611ae057600360008960e001518363ffffffff168151811061190e5761190e613af6565b60209081029190910181015182528101919091526040016000205460ff16156119795760405162461bcd60e51b815260206004820152601460248201527f6475706c696361746520636f6d6d69746d656e740000000000000000000000006044820152606401610956565b600b548861010001518263ffffffff168151811061199957611999613af6565b602002602001015110156119ef5760405162461bcd60e51b815260206004820152601260248201527f726f6c6c75702066656520746f6f206c6f7700000000000000000000000000006044820152606401610956565b8760e001518163ffffffff1681518110611a0b57611a0b613af6565b60200260200101518282886002611a2291906139af565b611a2d906004613990565b611a379190613990565b63ffffffff1681518110611a4d57611a4d613af6565b6020026020010181815250508761010001518163ffffffff1681518110611a7657611a76613af6565b6020026020010151828287896002611a8e91906139af565b611a989190613990565b611aa3906004613990565b611aad9190613990565b63ffffffff1681518110611ac357611ac3613af6565b602090810291909101015280611ad881613a59565b9150506118da565b5063ffffffff80861660009081526001602090815260408083209388168352929052818120548951925163c941764760e01b815291926001600160a01b039091169163c941764791611b369186906004016137d0565b602060405180830381600087803b158015611b5057600080fd5b505af1158015611b64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b8891906132c4565b905080611bd75760405162461bcd60e51b815260206004820152601660248201527f696e76616c6964207472616e736163742070726f6f66000000000000000000006044820152606401610956565b60005b8663ffffffff168163ffffffff161015611ca4576001600460008b604001518463ffffffff1681518110611c1057611c10613af6565b6020026020010151815260200190815260200160002060006101000a81548160ff02191690831515021790555088604001518163ffffffff1681518110611c5957611c59613af6565b602002602001015189602001517f3c2372ab6130817bd6b8fc6dbaecae947e84201b49535d358debaa6c34c23ecf60405160405180910390a380611c9c81613a59565b915050611bda565b5060005b8563ffffffff168163ffffffff161015611d93576001600360008b60e001518463ffffffff1681518110611cde57611cde613af6565b6020026020010151815260200190815260200160002060006101000a81548160ff021916908315150217905550611d818960e001518263ffffffff1681518110611d2a57611d2a613af6565b60200260200101518a61010001518363ffffffff1681518110611d4f57611d4f613af6565b60200260200101518b61016001518463ffffffff1681518110611d7457611d74613af6565b6020026020010151612727565b80611d8b81613a59565b915050611ca8565b5060a088015115611db157611db18861012001518960a00151612953565b60c088015115611dce57611dce8861014001518960c00151612953565b50506001600055505050505050565b600a54600160401b90046001600160a01b03163314611e2f5760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b6044820152606401610956565b6001600160a01b03166000908152600d60205260409020805460ff19166001179055565b600a54600160401b90046001600160a01b03163314611ea55760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b6044820152606401610956565b60008111611ef55760405162461bcd60e51b815260206004820152601560248201527f696e76616c6964205f6d696e526f6c6c757046656500000000000000000000006044820152606401610956565b600b55565b600a54600160401b90046001600160a01b03163314611f4c5760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b6044820152606401610956565b600e5460ff1615611fab5760405162461bcd60e51b8152602060048201526024808201527f566572696669657220757064617465732068617665206265656e2064697361626044820152633632b21760e11b6064820152608401610956565b60008363ffffffff16116120015760405162461bcd60e51b815260206004820152601460248201527f6e756d496e707574732073686f756c64203e20300000000000000000000000006044820152606401610956565b6040805180820182526001600160a01b0392831681526001602080830182815263ffffffff97881660009081529282528483209690971682529490945292209151825493511515600160a01b0274ffffffffffffffffffffffffffffffffffffffffff19909416911617919091179055565b600a54600160401b90046001600160a01b031633146120c55760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b6044820152606401610956565b600e805460ff1916911515919091179055565b600a54600160401b90046001600160a01b0316331461212a5760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b6044820152606401610956565b60008163ffffffff16116121755760405162461bcd60e51b8152602060048201526012602482015271696e76616c696420726f6c6c757053697a6560701b6044820152606401610956565b600e5460ff16156121d45760405162461bcd60e51b8152602060048201526024808201527f566572696669657220757064617465732068617665206265656e2064697361626044820152633632b21760e11b6064820152608401610956565b63ffffffff8116600090815260026020526040902054600160a01b900460ff161561221a5763ffffffff81166000908152600260205260409020805460ff60a01b191690555b50565b600a54600160401b90046001600160a01b0316331461226f5760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b6044820152606401610956565b6001600160a01b03166000908152600c60205260409020805460ff19169055565b600a5460009063ffffffff165b63ffffffff81166000908152600860205260409020548314156122c35750600192915050565b63ffffffff81166122e15750600a54640100000000900463ffffffff165b806122eb81613a1e565b600a5490925063ffffffff80841691161415905061229d5750600092915050565b600a54600160401b90046001600160a01b0316331461235e5760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b6044820152606401610956565b600e5460ff16156123bd5760405162461bcd60e51b8152602060048201526024808201527f566572696669657220757064617465732068617665206265656e2064697361626044820152633632b21760e11b6064820152608401610956565b60008263ffffffff16116124135760405162461bcd60e51b815260206004820152601460248201527f6e756d496e707574732073686f756c64203e20300000000000000000000000006044820152606401610956565b63ffffffff828116600090815260016020908152604080832093851683529290522054600160a01b900460ff16156124735763ffffffff8083166000908152600160209081526040808320938516835292905220805460ff60a01b191690555b5050565b6000600e60029054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156124c757600080fd5b505afa1580156124db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112dc91906136c4565b6060600e60029054906101000a90046001600160a01b03166001600160a01b03166306fdde036040518163ffffffff1660e01b815260040160006040518083038186803b1580156112a057600080fd5b600a54600160401b90046001600160a01b031633146125a15760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b6044820152606401610956565b600e5460ff16156126005760405162461bcd60e51b8152602060048201526024808201527f566572696669657220757064617465732068617665206265656e2064697361626044820152633632b21760e11b6064820152608401610956565b60008263ffffffff161161264b5760405162461bcd60e51b8152602060048201526012602482015271696e76616c696420726f6c6c757053697a6560701b6044820152606401610956565b6040805180820182526001600160a01b0392831681526001602080830191825263ffffffff90951660009081526002909552919093209251835491511515600160a01b0274ffffffffffffffffffffffffffffffffffffffffff19909216921691909117179055565b600a54600160401b90046001600160a01b031633146127065760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b6044820152606401610956565b6001600160a01b03166000908152600d60205260409020805460ff19169055565b6040805180820182528481526020808201858152600680546000908152600590935293822092518355516001909201919091556007549154909161276a91613978565b9050600654600161277b9190613978565b60065560405184907ff533f9705aac5020e21695ea3553ac7b6881070d2b6900ab2b1e3050304b5bf9906127b49086908590879061386c565b60405180910390a250505050565b60011c637fffffff1660005b63ffffffff8216156127f357600183901c925060018263ffffffff16901c91506127ce565b5090919050565b600e5461221a906201000090046001600160a01b0316338361296c565b6101208101516101408201516040516bffffffffffffffffffffffff19606093841b811660208301529190921b1660348201526000908190604801604051602081830303815290604052905060005b836101600151518163ffffffff1610156128d557818461016001518263ffffffff168151811061289857612898613af6565b60200260200101516040516020016128b192919061378e565b604051602081830303815290604052915080806128cd90613a59565b915050612866565b508051602080830191909120604080517f19457468657265756d205369676e6564204d6573736167653a0a33320000000081850152603c8082019390935281518082039093018352605c01905280519101205b9392505050565b600080600061293e85856129d8565b9150915061294b81612a48565b509392505050565b600e54612473906201000090046001600160a01b031683835b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b1790526129d3908490612c03565b505050565b600080825160411415612a0f5760208301516040840151606085015160001a612a0387828585612ce8565b94509450505050612a41565b825160401415612a395760208301516040840151612a2e868383612dd5565b935093505050612a41565b506000905060025b9250929050565b6000816004811115612a5c57612a5c613ae0565b1415612a655750565b6001816004811115612a7957612a79613ae0565b1415612ac75760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610956565b6002816004811115612adb57612adb613ae0565b1415612b295760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610956565b6003816004811115612b3d57612b3d613ae0565b1415612b965760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610956565b6004816004811115612baa57612baa613ae0565b141561221a5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610956565b6000612c58826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316612e279092919063ffffffff16565b8051909150156129d35780806020019051810190612c7691906132c4565b6129d35760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610956565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115612d1f5750600090506003612dcc565b8460ff16601b14158015612d3757508460ff16601c14155b15612d485750600090506004612dcc565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015612d9c573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116612dc557600060019250925050612dcc565b9150600090505b94509492505050565b6000807f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831681612e0b60ff86901c601b613978565b9050612e1987828885612ce8565b935093505050935093915050565b6060612e368484600085612e3e565b949350505050565b606082471015612eb65760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610956565b6001600160a01b0385163b612f0d5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610956565b600080866001600160a01b03168587604051612f299190613772565b60006040518083038185875af1925050503d8060008114612f66576040519150601f19603f3d011682016040523d82523d6000602084013e612f6b565b606091505b5091509150612f7b828286612f86565b979650505050505050565b60608315612f95575081612928565b825115612fa55782518084602001fd5b8160405162461bcd60e51b815260040161095691906137bd565b80356001600160a01b0381168114610bf857600080fd5b600082601f830112612fe757600080fd5b81356020612ffc612ff78361392c565b6138fb565b80838252828201915082860187848660051b890101111561301c57600080fd5b6000805b8681101561305f57823567ffffffffffffffff81111561303e578283fd5b61304c8b88838d0101613132565b8652509385019391850191600101613020565b509198975050505050505050565b600082601f83011261307e57600080fd5b61308661388b565b80838560408601111561309857600080fd5b60005b60028110156130ba57813584526020938401939091019060010161309b565b509095945050505050565b600082601f8301126130d657600080fd5b813560206130e6612ff78361392c565b80838252828201915082860187848660051b890101111561310657600080fd5b60005b8581101561312557813584529284019290840190600101613109565b5090979650505050505050565b600082601f83011261314357600080fd5b8135613151612ff782613950565b81815284602083860101111561316657600080fd5b816020850160208301376000918101602001919091529392505050565b60006040828403121561319557600080fd5b6040516040810181811067ffffffffffffffff821117156131b8576131b8613b0c565b604052823581526020928301359281019290925250919050565b60008183036101008112156131e657600080fd5b6040516060810181811067ffffffffffffffff8211171561320957613209613b0c565b6040529150816132198585613183565b81526080603f198301121561322d57600080fd5b61323561388b565b9150613244856040860161306d565b8252613253856080860161306d565b602083015281602082015261326b8560c08601613183565b6040820152505092915050565b803563ffffffff81168114610bf857600080fd5b60006020828403121561329e57600080fd5b61292882612fbf565b6000602082840312156132b957600080fd5b813561292881613b22565b6000602082840312156132d657600080fd5b815161292881613b22565b6000602082840312156132f357600080fd5b815167ffffffffffffffff81111561330a57600080fd5b8201601f8101841361331b57600080fd5b8051613329612ff782613950565b81815285602083850101111561333e57600080fd5b61334f8260208301602086016139f2565b95945050505050565b60006020828403121561336a57600080fd5b813567ffffffffffffffff8082111561338257600080fd5b9083019060a0828603121561339657600080fd5b61339e6138b4565b823581526020830135602082015260408301356040820152606083013560608201526080830135828111156133d257600080fd5b6133de87828601613132565b60808301525095945050505050565b6000610160828403121561340057600080fd5b6040516080810181811067ffffffffffffffff8211171561342357613423613b0c565b60405261343084846131d2565b815261343f6101008401613278565b6020820152610120830135604082015261014090920135606083015250919050565b6000806040838503121561347457600080fd5b823567ffffffffffffffff8082111561348c57600080fd5b9084019061026082870312156134a157600080fd5b6134a96138d7565b6134b387846131d2565b815261010080840135602083015261012080850135848111156134d557600080fd5b6134e18a8288016130c5565b60408501525061014080860135858111156134fb57600080fd5b6135078b8289016130c5565b60608601525061016080870135608086015261018087013560a08601526101a087013560c08601526101c08701358681111561354257600080fd5b61354e8c828a016130c5565b60e0870152506101e08701358681111561356757600080fd5b6135738c828a016130c5565b85870152506135856102008801612fbf565b838601526135966102208801612fbf565b828601526102408701359350858411156135af57600080fd5b6135bb8b858901612fd6565b9085015250919550505060208501359150808211156135d957600080fd5b506135e685828601613132565b9150509250929050565b60006020828403121561360257600080fd5b5035919050565b60006020828403121561361b57600080fd5b61292882613278565b6000806040838503121561363757600080fd5b61364083613278565b915061364e60208401612fbf565b90509250929050565b6000806040838503121561366a57600080fd5b61367383613278565b915061364e60208401613278565b60008060006060848603121561369657600080fd5b61369f84613278565b92506136ad60208501613278565b91506136bb60408501612fbf565b90509250925092565b6000602082840312156136d657600080fd5b815160ff8116811461292857600080fd5b8060005b600281101561370a5781518452602093840193909101906001016136eb565b50505050565b600081518084526137288160208601602086016139f2565b601f01601f19169290920160200192915050565b815160009082906020808601845b838110156137665781518552938201939082019060010161374a565b50929695505050505050565b600082516137848184602087016139f2565b9190910192915050565b600083516137a08184602088016139f2565b8351908301906137b48183602088016139f2565b01949350505050565b6020815260006129286020830184613710565b60006101208083016137ed84875180518252602090810151910152565b6020808701516138016040870182516136e7565b81015161381160808701826136e7565b506040870151805160c08701526020015160e08601526101008501929092528451908190526101408401918581019160005b8181101561385f57835185529382019392820192600101613843565b5092979650505050505050565b83815282602082015260606040820152600061334f6060830184613710565b6040805190810167ffffffffffffffff811182821017156138ae576138ae613b0c565b60405290565b60405160a0810167ffffffffffffffff811182821017156138ae576138ae613b0c565b604051610180810167ffffffffffffffff811182821017156138ae576138ae613b0c565b604051601f8201601f1916810167ffffffffffffffff8111828210171561392457613924613b0c565b604052919050565b600067ffffffffffffffff82111561394657613946613b0c565b5060051b60200190565b600067ffffffffffffffff82111561396a5761396a613b0c565b50601f01601f191660200190565b6000821982111561398b5761398b613ab4565b500190565b600063ffffffff8083168185168083038211156137b4576137b4613ab4565b600063ffffffff808316818516818304811182151516156139d2576139d2613ab4565b02949350505050565b6000828210156139ed576139ed613ab4565b500390565b60005b83811015613a0d5781810151838201526020016139f5565b8381111561370a5750506000910152565b600063ffffffff821680613a3457613a34613ab4565b6000190192915050565b6000600019821415613a5257613a52613ab4565b5060010190565b600063ffffffff80831681811415613a7357613a73613ab4565b6001019392505050565b600082613a8c57613a8c613aca565b500690565b600063ffffffff80841680613aa857613aa8613aca565b92169190910692915050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b801515811461221a57600080fdfea264697066735822122010d025bd7b8231c21ced8e3df8a28704c0edab36d2ddb0ef234d97676edbea3964736f6c63430008070033';

type CommitmentPoolERC20ConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CommitmentPoolERC20ConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CommitmentPoolERC20__factory extends ContractFactory {
  constructor(...args: CommitmentPoolERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'CommitmentPoolERC20';
  }

  deploy(
    _treeHeight: BigNumberish,
    _rootHistoryLength: BigNumberish,
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<CommitmentPoolERC20> {
    return super.deploy(
      _treeHeight,
      _rootHistoryLength,
      _token,
      overrides || {},
    ) as Promise<CommitmentPoolERC20>;
  }
  getDeployTransaction(
    _treeHeight: BigNumberish,
    _rootHistoryLength: BigNumberish,
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(_treeHeight, _rootHistoryLength, _token, overrides || {});
  }
  attach(address: string): CommitmentPoolERC20 {
    return super.attach(address) as CommitmentPoolERC20;
  }
  connect(signer: Signer): CommitmentPoolERC20__factory {
    return super.connect(signer) as CommitmentPoolERC20__factory;
  }
  static readonly contractName: 'CommitmentPoolERC20';
  public readonly contractName: 'CommitmentPoolERC20';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CommitmentPoolERC20Interface {
    return new utils.Interface(_abi) as CommitmentPoolERC20Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): CommitmentPoolERC20 {
    return new Contract(address, _abi, signerOrProvider) as CommitmentPoolERC20;
  }
}
