/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides, BigNumberish } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { CommitmentPoolERC20, CommitmentPoolERC20Interface } from '../CommitmentPoolERC20';

const _abi = [
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_treeHeight',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '_rootHistoryLength',
        type: 'uint32',
      },
      {
        internalType: 'address',
        name: '_token',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
    ],
    name: 'CommitmentIncluded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'rollupFee',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'leafIndex',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'bytes',
        name: 'encryptedNote',
        type: 'bytes',
      },
    ],
    name: 'CommitmentQueued',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'rootHash',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'serialNumber',
        type: 'uint256',
      },
    ],
    name: 'CommitmentSpent',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_actor',
        type: 'address',
      },
    ],
    name: 'addEnqueueWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_roller',
        type: 'address',
      },
    ],
    name: 'addRollupWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetDecimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetName',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetSymbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetType',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_newOperator',
        type: 'address',
      },
    ],
    name: 'changeOperator',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
    ],
    name: 'disableRollupVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_numInputs',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '_numOutputs',
        type: 'uint32',
      },
    ],
    name: 'disableTransactVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
      {
        internalType: 'address',
        name: '_rollupVerifier',
        type: 'address',
      },
    ],
    name: 'enableRollupVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_numInputs',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '_numOutputs',
        type: 'uint32',
      },
      {
        internalType: 'address',
        name: '_transactVerifier',
        type: 'address',
      },
    ],
    name: 'enableTransactVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
        ],
        internalType: 'struct ICommitmentPool.CommitmentRequest',
        name: '_request',
        type: 'tuple',
      },
      {
        internalType: 'address',
        name: '_executor',
        type: 'address',
      },
    ],
    name: 'enqueue',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getCommitmentIncludedCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinRollupFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getRootHistoryLength',
    outputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getSanctionsContract',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getTreeCapacity',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_commitment',
        type: 'uint256',
      },
    ],
    name: 'isHistoricCommitment',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'root',
        type: 'uint256',
      },
    ],
    name: 'isKnownRoot',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isRollupWhitelistDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isSanctionCheckDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_serialNumber',
        type: 'uint256',
      },
    ],
    name: 'isSpentSerialNumber',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isVerifierUpdateDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_actor',
        type: 'address',
      },
    ],
    name: 'removeEnqueueWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_roller',
        type: 'address',
      },
    ],
    name: 'removeRollupWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'a',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256[2]',
                    name: 'X',
                    type: 'uint256[2]',
                  },
                  {
                    internalType: 'uint256[2]',
                    name: 'Y',
                    type: 'uint256[2]',
                  },
                ],
                internalType: 'struct IVerifier.G2Point',
                name: 'b',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'c',
                type: 'tuple',
              },
            ],
            internalType: 'struct IVerifier.Proof',
            name: 'proof',
            type: 'tuple',
          },
          {
            internalType: 'uint32',
            name: 'rollupSize',
            type: 'uint32',
          },
          {
            internalType: 'uint256',
            name: 'newRoot',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'leafHash',
            type: 'uint256',
          },
        ],
        internalType: 'struct ICommitmentPool.RollupRequest',
        name: '_request',
        type: 'tuple',
      },
    ],
    name: 'rollup',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_minRollupFee',
        type: 'uint256',
      },
    ],
    name: 'setMinRollupFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'toggleRollupWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_check',
        type: 'bool',
      },
    ],
    name: 'toggleSanctionCheck',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'toggleVerifierUpdate',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'a',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256[2]',
                    name: 'X',
                    type: 'uint256[2]',
                  },
                  {
                    internalType: 'uint256[2]',
                    name: 'Y',
                    type: 'uint256[2]',
                  },
                ],
                internalType: 'struct IVerifier.G2Point',
                name: 'b',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'c',
                type: 'tuple',
              },
            ],
            internalType: 'struct IVerifier.Proof',
            name: 'proof',
            type: 'tuple',
          },
          {
            internalType: 'uint256',
            name: 'rootHash',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'serialNumbers',
            type: 'uint256[]',
          },
          {
            internalType: 'uint256[]',
            name: 'sigHashes',
            type: 'uint256[]',
          },
          {
            internalType: 'bytes32',
            name: 'sigPk',
            type: 'bytes32',
          },
          {
            internalType: 'uint256',
            name: 'publicAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'relayerFeeAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'outCommitments',
            type: 'uint256[]',
          },
          {
            internalType: 'uint256[]',
            name: 'outRollupFees',
            type: 'uint256[]',
          },
          {
            internalType: 'address',
            name: 'publicRecipient',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'relayerAddress',
            type: 'address',
          },
          {
            internalType: 'bytes[]',
            name: 'outEncryptedNotes',
            type: 'bytes[]',
          },
        ],
        internalType: 'struct ICommitmentPool.TransactRequest',
        name: '_request',
        type: 'tuple',
      },
      {
        internalType: 'bytes',
        name: '_signature',
        type: 'bytes',
      },
    ],
    name: 'transact',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_sanction',
        type: 'address',
      },
    ],
    name: 'updateSanctionContractAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x60c0604052600180546001600160a81b0319167340c57923924b5c5c5455c48d93317139addac8fb17905560006007819055600855600b805463ffffffff191690553480156200004e57600080fd5b50604051620045de380380620045de8339810160408190526200007191620008ba565b600160005580838363ffffffff8116620000e55760405162461bcd60e51b815260206004820152602b60248201527f5f726f6f74486973746f72794c656e6774682073686f756c642062652067726560448201526a061746572207468616e20360ac1b606482015260840160405180910390fd5b600b8054600160201b600160c01b031916336401000000000217905560e081901b6001600160e01b03191660a0526200012663ffffffff831660026200095d565b608052620001348262000185565b600a819055600b5463ffffffff166000908152600960205260409020555050600f80546001600160a01b03909216620100000262010000600160b01b03199092169190911790555062000a3e915050565b600063ffffffff8216620001ba57507f09f658457775074ff4c842032a5ec2f1134c32784cca59d594caac8c503b7923919050565b8163ffffffff1660011415620001f157507f1a77569b79cb7c2eaf9368de9e3b1efc0a606561e5ab299c2337340f3cdd576a919050565b8163ffffffff16600214156200022857507f111bd0002b1e3b8f1978c932b5ccb2fab87fdb0acab2ddb266f9a346dcb11ee1919050565b8163ffffffff16600314156200025f57507f040868ea2a363e05d7ae44280f69b49e429ab096ca2844efe91f8d6b3dad57dd919050565b8163ffffffff16600414156200029557507ef8f605c92c8502c8fe83be1b83b24e3f67312a388f30cbadb5dee8974137c3919050565b8163ffffffff1660051415620002cc57507f1adc043c99adbc0c86a60a36db0f661e2dd96f36ede322f954386d8935a0c5d9919050565b8163ffffffff16600614156200030357507f2a1fedfa71da723ac3e9b35cef752fa1b647b2b737a23e91241cb7bdc419e3f4919050565b8163ffffffff16600714156200033a57507f17fe1974543c4c4b228e1292f7e3200d31435fc910ee5a8c5cafd329cc4b256b919050565b8163ffffffff16600814156200037157507f0e84a586eb63a0eec0f1fe5785022441f0e29e4ae859c7ce1f5fc88a42ad2e6b919050565b8163ffffffff1660091415620003a857507f193deb901f6eeb032e02e093280db17e373d4ff52bafda9215b46bb9b0a86f3e919050565b8163ffffffff16600a1415620003df57507f1d10ca7b985697cb519565a5006c3f44b020b2edab9b7422ed15dc34532f9406919050565b8163ffffffff16600b14156200041657507f1dc200763555467a4e583e00badfdc1fb4d3d3f8f1cc81f31fd2f8b387776081919050565b8163ffffffff16600c14156200044d57507f203dd11fdba0ed13b20ca2d6952f3feb7461836a03512e0cccce8467b320b2f6919050565b8163ffffffff16600d14156200048457507f0591af64e64a3e69caf23eee2bdea90885343a49f547ee9464e95d8d6267e4f7919050565b8163ffffffff16600e1415620004bb57507f2af572f1077a32f46dc8e307d43c0fa6753b400b2107325976b8df7380545ff6919050565b8163ffffffff16600f1415620004f257507f043227ae4b70b1aacd04e35e6aaed7b56d91220c31e97aaf52e12a6a56984e52919050565b8163ffffffff16601014156200052957507f2976f1f6a91d83d4c528dad69ece6d3d91934b0e5657e915b360c8c4c2fb54e6919050565b8163ffffffff16601114156200055f57507ee5c251c9e093658be0cd1b0df55b6f70f3d09146c1c8b4212a4ddcde700dbc919050565b8163ffffffff16601214156200059657507f0267cbbc1bc2f1c3e3073d2ee60df8cc0bfef39fe3cee735c9ad5c8ad30064d2919050565b8163ffffffff1660131415620005cd57507f2f356057bc56f67dbf159a0e8935022acd5e982dce9f4071adc43e4d57ce27e6919050565b8163ffffffff16601414156200060457507f273db68f52f12a9d8022ae524050064e42d4d1661c9bcce958acf89b5e8b127b919050565b8163ffffffff16601514156200063b57507f0496a18ad4cca81b7c98ceb197439ad925e0f7f62d69dfa42cf9574be77fe30f919050565b8163ffffffff16601614156200067257507f24f89a3f943d421b2f3a554b65459f42b820ac09d6fd9d693df5f8ba732ab596919050565b8163ffffffff1660171415620006a957507f1b55bfd751c6807df36876cdce68034ab43210be2bc8afa8043c7f428604e7a7919050565b8163ffffffff1660181415620006e057507f16d6595a398cf20f2489b90e958166f1e19c537c0c46e9b8ea5462391ee8f143919050565b8163ffffffff16601914156200071757507f0f01447ef8f621592474b678ed2fc404ebaf22a6fce15364bb4152a88c113613919050565b8163ffffffff16601a14156200074e57507f026c2dffee48bacbc9d21cf90aa7c6e525ab01db6966a9e7e53b3d3f4d1f5a4d919050565b8163ffffffff16601b14156200078557507f234fe90732795745b2c504c791242a2bb193baa1cbeab57db9324b6bb9134817919050565b8163ffffffff16601c1415620007bc57507f23a8e0a7e60981c52ebb498c260d5bef4d7c65145d17128996a77c33a3262a7e919050565b8163ffffffff16601d1415620007f357507f24ee69d2565210c7027ff6fc2657ed029278bc79f41077fe3281ea5d5d8e80f9919050565b8163ffffffff16601e14156200082a57507f1de402fa32463bb2917b733aeef0197a49cacacd1fe860c3acc8cd3b65a30a68919050565b8163ffffffff16601f14156200086157507f1d3015a0f6a7b3f754171d0540628107e50e25debceb16e0e33ae4205501896d919050565b8163ffffffff16602014156200089857507f264a260539342647256819046bae05bed903a8d19b3c90439d67317d5d881322919050565b506000919050565b805163ffffffff81168114620008b557600080fd5b919050565b600080600060608486031215620008d057600080fd5b620008db84620008a0565b9250620008eb60208501620008a0565b60408501519092506001600160a01b03811681146200090957600080fd5b809150509250925092565b600181815b808511156200095557816000190482111562000939576200093962000a28565b808516156200094757918102915b93841c939080029062000919565b509250929050565b60006200096b838362000972565b9392505050565b600082620009835750600162000a22565b81620009925750600062000a22565b8160018114620009ab5760028114620009b657620009d6565b600191505062000a22565b60ff841115620009ca57620009ca62000a28565b50506001821b62000a22565b5060208310610133831016604e8410600b8410161715620009fb575081810a62000a22565b62000a07838362000914565b806000190482111562000a1e5762000a1e62000a28565b0290505b92915050565b634e487b7160e01b600052601160045260246000fd5b60805160a05160e01c613b5b62000a836000396000818161048501528181610e430152612196015260008181610398015281816111c30152611be30152613b5b6000f3fe6080604052600436106101e35760003560e01c80637fa4b09c11610102578063b4318ead11610095578063ce74610211610064578063ce746102146105e0578063deeff7cd14610608578063e500f50414610628578063ffa89b881461063d57600080fd5b8063b4318ead14610564578063c259e2e614610584578063c2d41601146105a4578063c9230c5d146105cb57600080fd5b80639cc6b354116100d15780639cc6b354146104ef578063a6232a931461050f578063a9b1d2961461052f578063b08892d01461054f57600080fd5b80637fa4b09c1461044e578063934aef271461046e5780639ae39ca3146104af5780639b0a6fea146104cf57600080fd5b80633bb8d1b41161017a5780634eb069f7116101495780634eb069f7146103c657806357060016146103de57806378d60cd71461040e5780637cbf0ff61461042e57600080fd5b80633bb8d1b4146103005780633fae882e146103305780633fe3347a14610343578063484eb6521461038957600080fd5b806314a7737d116101b657806314a7737d1461026a578063176de7a81461028a57806330d78036146102b557806334c33e83146102e057600080fd5b806302d498f1146101e857806303db98741461020a57806305335faa1461022a57806306394c9b1461024a575b600080fd5b3480156101f457600080fd5b50610208610203366004613278565b61065a565b005b34801561021657600080fd5b50610208610225366004613278565b6106d6565b34801561023657600080fd5b50610208610245366004613293565b61074a565b34801561025657600080fd5b50610208610265366004613278565b6107b7565b34801561027657600080fd5b506102086102853660046133eb565b61084c565b34801561029657600080fd5b5061029f610eb6565b6040516102ac91906137b2565b60405180910390f35b3480156102c157600080fd5b50600154600160a01b900460ff165b60405190151581526020016102ac565b3480156102ec57600080fd5b506102086102fb366004613278565b610f47565b34801561030c57600080fd5b506102d061031b3660046135ee565b60009081526005602052604090205460ff1690565b61020861033e36600461345f565b610fd4565b34801561034f57600080fd5b5060408051808201909152600581527f6572633230000000000000000000000000000000000000000000000000000000602082015261029f565b34801561039557600080fd5b507f00000000000000000000000000000000000000000000000000000000000000005b6040519081526020016102ac565b3480156103d257600080fd5b50600f5460ff166102d0565b3480156103ea57600080fd5b506102d06103f93660046135ee565b60009081526004602052604090205460ff1690565b34801561041a57600080fd5b506102d0610429366004613344565b611b2c565b34801561043a57600080fd5b506102086104493660046135ee565b611d15565b34801561045a57600080fd5b50610208610469366004613676565b611dbd565b34801561047a57600080fd5b5060405163ffffffff7f00000000000000000000000000000000000000000000000000000000000000001681526020016102ac565b3480156104bb57600080fd5b506102086104ca366004613293565b611f35565b3480156104db57600080fd5b506102086104ea366004613607565b611f9b565b3480156104fb57600080fd5b5061020861050a366004613278565b6120e1565b34801561051b57600080fd5b506102d061052a3660046135ee565b612155565b34801561053b57600080fd5b5061020861054a366004613278565b6121e1565b34801561055b57600080fd5b50600c546103b8565b34801561057057600080fd5b5061020861057f366004613293565b612258565b34801561059057600080fd5b5061020861059f36600461364c565b6122c9565b3480156105b057600080fd5b506105b9612435565b60405160ff90911681526020016102ac565b3480156105d757600080fd5b5061029f6124bd565b3480156105ec57600080fd5b506001546040516001600160a01b0390911681526020016102ac565b34801561061457600080fd5b50610208610623366004613622565b61250d565b34801561063457600080fd5b506008546103b8565b34801561064957600080fd5b50600f54610100900460ff166102d0565b600b5464010000000090046001600160a01b031633146106b25760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b60448201526064015b60405180910390fd5b6001600160a01b03166000908152600d60205260409020805460ff19166001179055565b600b5464010000000090046001600160a01b031633146107295760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b60448201526064016106a9565b6001600160a01b03166000908152600e60205260409020805460ff19169055565b600b5464010000000090046001600160a01b0316331461079d5760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b60448201526064016106a9565b600f80549115156101000261ff0019909216919091179055565b600b5464010000000090046001600160a01b0316331461080a5760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b60448201526064016106a9565b600b80546001600160a01b03909216640100000000027fffffffffffffffff0000000000000000000000000000000000000000ffffffff909216919091179055565b600f54610100900460ff16806108715750336000908152600d602052604090205460ff165b6108bd5760405162461bcd60e51b815260206004820152601860248201527f6f6e6c792077686974656c697374656420726f6c6c65722e000000000000000060448201526064016106a9565b6108ca8160400151612155565b156109175760405162461bcd60e51b815260206004820152601560248201527f6e6577526f6f74206973206475706c696361746564000000000000000000000060448201526064016106a9565b6000816020015163ffffffff1611801561093d5750600754816020015163ffffffff1611155b801561096a575060208181015163ffffffff16600090815260039091526040902054600160a01b900460ff165b6109ab5760405162461bcd60e51b8152602060048201526012602482015271696e76616c696420726f6c6c757053697a6560701b60448201526064016106a9565b806020015163ffffffff166008546109c39190613a72565b15610a1c5760405162461bcd60e51b815260206004820152602360248201527f696e76616c696420726f6c6c757053697a652061742063757272656e7420737460448201526261746560e81b60648201526084016106a9565b6000610a2e6008548360200151612673565b90506000826020015163ffffffff1667ffffffffffffffff811115610a5557610a55613b01565b604051908082528060200260200182016040528015610a7e578160200160208202803683370190505b506008549091506000905b846020015163ffffffff16600854610aa1919061396d565b811015610bcb57600081815260066020526040902054610b035760405162461bcd60e51b815260206004820152601260248201527f696e646578206f7574206f6620626f756e64000000000000000000000000000060448201526064016106a9565b60008181526006602052604090205460085481908590610b2390856139d0565b81518110610b3357610b33613aeb565b602002602001018181525050600660008381526020019081526020016000206001015483610b61919061396d565b6000838152600660205260408120818155600190810191909155600754919450610b8a916139d0565b60075560405181907ffe6b097b46a78e08506a3143b6337c2505ba77df76fe05c3663a987395d6341390600090a25080610bc381613a33565b915050610a89565b5060007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000183604051602001610c009190613731565b6040516020818303038152906040528051906020012060001c610c239190613a72565b905080856060015114610c785760405162461bcd60e51b815260206004820152601060248201527f696e76616c6964206c656166486173680000000000000000000000000000000060448201526064016106a9565b60408051600480825260a0820190925260009160208201608080368337019050509050600a5481600081518110610cb157610cb1613aeb565b602002602001018181525050856040015181600181518110610cd557610cd5613aeb565b602002602001018181525050856060015181600281518110610cf957610cf9613aeb565b6020026020010181815250508481600381518110610d1957610d19613aeb565b6020908102919091018101919091528681015163ffffffff16600090815260039091526040808220548851915163c941764760e01b81526001600160a01b039091169163c941764791610d71919086906004016137c5565b602060405180830381600087803b158015610d8b57600080fd5b505af1158015610d9f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dc391906132b0565b905080610e125760405162461bcd60e51b815260206004820152600d60248201527f696e76616c69642070726f6f660000000000000000000000000000000000000060448201526064016106a9565b610e1b846126ab565b866020015163ffffffff16600854610e33919061396d565b6008556040870151600a55600b547f000000000000000000000000000000000000000000000000000000000000000090610e749063ffffffff166001613985565b610e7e9190613a86565b600b805463ffffffff191663ffffffff9290921691821790556040978801516000918252600960205297902096909655505050505050565b6060600f60029054906101000a90046001600160a01b03166001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b158015610f0657600080fd5b505afa158015610f1a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610f4291908101906132cd565b905090565b600b5464010000000090046001600160a01b03163314610f9a5760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b60448201526064016106a9565b600180547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b600260005414156110275760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016106a9565b600260008181556040848101515160e08601515163ffffffff808316855260209586528385209082168552909452912054909190600160a01b900460ff166110b15760405162461bcd60e51b815260206004820152601260248201527f696e76616c696420692f6f206c656e677468000000000000000000000000000060448201526064016106a9565b8163ffffffff168460600151511461110b5760405162461bcd60e51b815260206004820152601860248201527f696e76616c696420736967486173686573206c656e677468000000000000000060448201526064016106a9565b8063ffffffff1684610100015151146111665760405162461bcd60e51b815260206004820152601c60248201527f696e76616c6964206f7574526f6c6c757046656573206c656e6774680000000060448201526064016106a9565b8063ffffffff1684610160015151146111c15760405162461bcd60e51b815260206004820181905260248201527f696e76616c6964206f7574456e637279707465644e6f746573206c656e67746860448201526064016106a9565b7f00000000000000000000000000000000000000000000000000000000000000008163ffffffff166007546008546111f9919061396d565b611203919061396d565b11156112405760405162461bcd60e51b815260206004820152600c60248201526b1d1c9959481a5cc8199d5b1b60a21b60448201526064016106a9565b61124e8461012001516126c8565b1561129b5760405162461bcd60e51b815260206004820152601260248201527f73616e6374696f6e65642061646472657373000000000000000000000000000060448201526064016106a9565b60006112a68561276b565b905060006112b48286612880565b60808701519091506001600160a01b038216146113135760405162461bcd60e51b815260206004820152601160248201527f696e76616c6964207369676e617475726500000000000000000000000000000060448201526064016106a9565b60006113208460026139a4565b61132b8660026139a4565b611336906004613985565b6113409190613985565b63ffffffff1667ffffffffffffffff81111561135e5761135e613b01565b604051908082528060200260200182016040528015611387578160200160208202803683370190505b5090506113978760200151612155565b6113e35760405162461bcd60e51b815260206004820152600c60248201527f696e76616c696420726f6f74000000000000000000000000000000000000000060448201526064016106a9565b8660200151816000815181106113fb576113fb613aeb565b60200260200101818152505060005b8563ffffffff168163ffffffff16101561156d576005600089604001518363ffffffff168151811061143e5761143e613aeb565b60209081029190910181015182528101919091526040016000205460ff16156114a95760405162461bcd60e51b815260206004820152601760248201527f746865206e6f746520686173206265656e207370656e7400000000000000000060448201526064016106a9565b87604001518163ffffffff16815181106114c5576114c5613aeb565b6020026020010151828260016114db9190613985565b63ffffffff16815181106114f1576114f1613aeb565b60200260200101818152505087606001518163ffffffff168151811061151957611519613aeb565b602002602001015182878360016115309190613985565b61153a9190613985565b63ffffffff168151811061155057611550613aeb565b60209081029190910101528061156581613a4e565b91505061140a565b5060808701518161157f8760026139a4565b61158a906001613985565b63ffffffff16815181106115a0576115a0613aeb565b602090810291909101015260a0870151816115bc8760026139a4565b6115c7906002613985565b63ffffffff16815181106115dd576115dd613aeb565b602090810291909101015260c0870151816115f98760026139a4565b611604906003613985565b63ffffffff168151811061161a5761161a613aeb565b60200260200101818152505060005b8463ffffffff168163ffffffff16101561182f57600460008960e001518363ffffffff168151811061165d5761165d613aeb565b60209081029190910181015182528101919091526040016000205460ff16156116c85760405162461bcd60e51b815260206004820152601460248201527f6475706c696361746520636f6d6d69746d656e7400000000000000000000000060448201526064016106a9565b600c548861010001518263ffffffff16815181106116e8576116e8613aeb565b6020026020010151101561173e5760405162461bcd60e51b815260206004820152601260248201527f726f6c6c75702066656520746f6f206c6f77000000000000000000000000000060448201526064016106a9565b8760e001518163ffffffff168151811061175a5761175a613aeb565b6020026020010151828288600261177191906139a4565b61177c906004613985565b6117869190613985565b63ffffffff168151811061179c5761179c613aeb565b6020026020010181815250508761010001518163ffffffff16815181106117c5576117c5613aeb565b60200260200101518282878960026117dd91906139a4565b6117e79190613985565b6117f2906004613985565b6117fc9190613985565b63ffffffff168151811061181257611812613aeb565b60209081029190910101528061182781613a4e565b915050611629565b5063ffffffff80861660009081526002602090815260408083209388168352929052818120548951925163c941764760e01b815291926001600160a01b039091169163c9417647916118859186906004016137c5565b602060405180830381600087803b15801561189f57600080fd5b505af11580156118b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118d791906132b0565b9050806119265760405162461bcd60e51b815260206004820152601660248201527f696e76616c6964207472616e736163742070726f6f660000000000000000000060448201526064016106a9565b60005b8663ffffffff168163ffffffff1610156119f3576001600560008b604001518463ffffffff168151811061195f5761195f613aeb565b6020026020010151815260200190815260200160002060006101000a81548160ff02191690831515021790555088604001518163ffffffff16815181106119a8576119a8613aeb565b602002602001015189602001517f3c2372ab6130817bd6b8fc6dbaecae947e84201b49535d358debaa6c34c23ecf60405160405180910390a3806119eb81613a4e565b915050611929565b5060005b8563ffffffff168163ffffffff161015611ae2576001600460008b60e001518463ffffffff1681518110611a2d57611a2d613aeb565b6020026020010151815260200190815260200160002060006101000a81548160ff021916908315150217905550611ad08960e001518263ffffffff1681518110611a7957611a79613aeb565b60200260200101518a61010001518363ffffffff1681518110611a9e57611a9e613aeb565b60200260200101518b61016001518463ffffffff1681518110611ac357611ac3613aeb565b60200260200101516128a4565b80611ada81613a4e565b9150506119f7565b5060a088015115611b0057611b008861012001518960a0015161293a565b60c088015115611b1d57611b1d8861014001518960c0015161293a565b50506001600055505050505050565b336000908152600e602052604081205460ff16611b8b5760405162461bcd60e51b815260206004820152601860248201527f6f6e6c792077686974656c69737465642073656e6465722e000000000000000060448201526064016106a9565b600c5483606001511015611be15760405162461bcd60e51b815260206004820152601260248201527f726f6c6c75702066656520746f6f20666577000000000000000000000000000060448201526064016106a9565b7f0000000000000000000000000000000000000000000000000000000000000000600754600854611c12919061396d565b10611c4e5760405162461bcd60e51b815260206004820152600c60248201526b1d1c9959481a5cc8199d5b1b60a21b60448201526064016106a9565b60208084015160009081526004909152604090205460ff1615611cbd5760405162461bcd60e51b815260206004820152602160248201527f74686520636f6d6d69746d656e7420686173206265656e207375626d697474656044820152601960fa1b60648201526084016106a9565b60208084018051600090815260049092526040909120805460ff191660011790555160608401516080850151611cf49291906128a4565b604083015115611d0c57611d0c82846040015161293a565b50600192915050565b600b5464010000000090046001600160a01b03163314611d685760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b60448201526064016106a9565b60008111611db85760405162461bcd60e51b815260206004820152601560248201527f696e76616c6964205f6d696e526f6c6c7570466565000000000000000000000060448201526064016106a9565b600c55565b600b5464010000000090046001600160a01b03163314611e105760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b60448201526064016106a9565b600f5460ff1615611e6f5760405162461bcd60e51b8152602060048201526024808201527f766572696669657220757064617465732068617665206265656e2064697361626044820152633632b21760e11b60648201526084016106a9565b60008363ffffffff1611611ec55760405162461bcd60e51b815260206004820152601460248201527f6e756d496e707574732073686f756c64203e203000000000000000000000000060448201526064016106a9565b6040805180820182526001600160a01b0392831681526001602080830191825263ffffffff9687166000908152600282528481209690971687529490945293209251835492511515600160a01b0274ffffffffffffffffffffffffffffffffffffffffff19909316911617179055565b600b5464010000000090046001600160a01b03163314611f885760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b60448201526064016106a9565b600f805460ff1916911515919091179055565b600b5464010000000090046001600160a01b03163314611fee5760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b60448201526064016106a9565b60008163ffffffff16116120395760405162461bcd60e51b8152602060048201526012602482015271696e76616c696420726f6c6c757053697a6560701b60448201526064016106a9565b600f5460ff16156120985760405162461bcd60e51b8152602060048201526024808201527f766572696669657220757064617465732068617665206265656e2064697361626044820152633632b21760e11b60648201526084016106a9565b63ffffffff8116600090815260036020526040902054600160a01b900460ff16156120de5763ffffffff81166000908152600360205260409020805460ff60a01b191690555b50565b600b5464010000000090046001600160a01b031633146121345760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b60448201526064016106a9565b6001600160a01b03166000908152600d60205260409020805460ff19169055565b600b5460009063ffffffff165b63ffffffff81166000908152600960205260409020548314156121885750600192915050565b63ffffffff81166121b657507f00000000000000000000000000000000000000000000000000000000000000005b806121c081613a13565b600b5490925063ffffffff8084169116141590506121625750600092915050565b600b5464010000000090046001600160a01b031633146122345760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b60448201526064016106a9565b6001600160a01b03166000908152600e60205260409020805460ff19166001179055565b600b5464010000000090046001600160a01b031633146122ab5760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b60448201526064016106a9565b60018054911515600160a01b0260ff60a01b19909216919091179055565b600b5464010000000090046001600160a01b0316331461231c5760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b60448201526064016106a9565b600f5460ff161561237b5760405162461bcd60e51b8152602060048201526024808201527f766572696669657220757064617465732068617665206265656e2064697361626044820152633632b21760e11b60648201526084016106a9565b60008263ffffffff16116123d15760405162461bcd60e51b815260206004820152601460248201527f6e756d496e707574732073686f756c64203e203000000000000000000000000060448201526064016106a9565b63ffffffff828116600090815260026020908152604080832093851683529290522054600160a01b900460ff16156124315763ffffffff8083166000908152600260209081526040808320938516835292905220805460ff60a01b191690555b5050565b6000600f60029054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561248557600080fd5b505afa158015612499573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f4291906136b9565b6060600f60029054906101000a90046001600160a01b03166001600160a01b03166306fdde036040518163ffffffff1660e01b815260040160006040518083038186803b158015610f0657600080fd5b600b5464010000000090046001600160a01b031633146125605760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b60448201526064016106a9565b600f5460ff16156125bf5760405162461bcd60e51b8152602060048201526024808201527f766572696669657220757064617465732068617665206265656e2064697361626044820152633632b21760e11b60648201526084016106a9565b60008263ffffffff161161260a5760405162461bcd60e51b8152602060048201526012602482015271696e76616c696420726f6c6c757053697a6560701b60448201526064016106a9565b6040805180820182526001600160a01b0392831681526001602080830191825263ffffffff90951660009081526003909552919093209251835491511515600160a01b0274ffffffffffffffffffffffffffffffffffffffffff19909216921691909117179055565b60011c637fffffff1660005b63ffffffff8216156126a457600183901c925060018263ffffffff16901c915061267f565b5090919050565b600f546120de906201000090046001600160a01b03163383612953565b600154600090600160a01b900460ff16156126e557506000919050565b60015460405163df592f7d60e01b81526001600160a01b03848116600483015290911690819063df592f7d9060240160206040518083038186803b15801561272c57600080fd5b505afa158015612740573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061276491906132b0565b9392505050565b6101208101516101408201516040516bffffffffffffffffffffffff19606093841b811660208301529190921b1660348201526000908190604801604051602081830303815290604052905060005b836101600151518163ffffffff16101561282957818461016001518263ffffffff16815181106127ec576127ec613aeb565b6020026020010151604051602001612805929190613783565b6040516020818303038152906040529150808061282190613a4e565b9150506127ba565b508051602080830191909120604080517f19457468657265756d205369676e6564204d6573736167653a0a33320000000081850152603c8082019390935281518082039093018352605c0190528051910120612764565b600080600061288f85856129bf565b9150915061289c81612a2f565b509392505050565b60006008546007546128b6919061396d565b6040805180820182528681526020808201878152600085815260069092529290209051815590516001918201556007549192506128f3919061396d565b60075560405184907ff533f9705aac5020e21695ea3553ac7b6881070d2b6900ab2b1e3050304b5bf99061292c90869085908790613861565b60405180910390a250505050565b600f54612431906201000090046001600160a01b031683835b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b1790526129ba908490612bea565b505050565b6000808251604114156129f65760208301516040840151606085015160001a6129ea87828585612ccf565b94509450505050612a28565b825160401415612a205760208301516040840151612a15868383612dbc565b935093505050612a28565b506000905060025b9250929050565b6000816004811115612a4357612a43613ad5565b1415612a4c5750565b6001816004811115612a6057612a60613ad5565b1415612aae5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016106a9565b6002816004811115612ac257612ac2613ad5565b1415612b105760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016106a9565b6003816004811115612b2457612b24613ad5565b1415612b7d5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016106a9565b6004816004811115612b9157612b91613ad5565b14156120de5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016106a9565b6000612c3f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316612e0e9092919063ffffffff16565b8051909150156129ba5780806020019051810190612c5d91906132b0565b6129ba5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016106a9565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115612d065750600090506003612db3565b8460ff16601b14158015612d1e57508460ff16601c14155b15612d2f5750600090506004612db3565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015612d83573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116612dac57600060019250925050612db3565b9150600090505b94509492505050565b6000807f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831681612df260ff86901c601b61396d565b9050612e0087828885612ccf565b935093505050935093915050565b6060612e1d8484600085612e25565b949350505050565b606082471015612e9d5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016106a9565b6001600160a01b0385163b612ef45760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016106a9565b600080866001600160a01b03168587604051612f109190613767565b60006040518083038185875af1925050503d8060008114612f4d576040519150601f19603f3d011682016040523d82523d6000602084013e612f52565b606091505b5091509150612f62828286612f6d565b979650505050505050565b60608315612f7c575081612764565b825115612f8c5782518084602001fd5b8160405162461bcd60e51b81526004016106a991906137b2565b80356001600160a01b0381168114612fbd57600080fd5b919050565b600082601f830112612fd357600080fd5b81356020612fe8612fe383613921565b6138f0565b80838252828201915082860187848660051b890101111561300857600080fd5b6000805b8681101561304b57823567ffffffffffffffff81111561302a578283fd5b6130388b88838d010161311e565b865250938501939185019160010161300c565b509198975050505050505050565b600082601f83011261306a57600080fd5b613072613880565b80838560408601111561308457600080fd5b60005b60028110156130a6578135845260209384019390910190600101613087565b509095945050505050565b600082601f8301126130c257600080fd5b813560206130d2612fe383613921565b80838252828201915082860187848660051b89010111156130f257600080fd5b60005b85811015613111578135845292840192908401906001016130f5565b5090979650505050505050565b600082601f83011261312f57600080fd5b813561313d612fe382613945565b81815284602083860101111561315257600080fd5b816020850160208301376000918101602001919091529392505050565b60006040828403121561318157600080fd5b6040516040810181811067ffffffffffffffff821117156131a4576131a4613b01565b604052823581526020928301359281019290925250919050565b60008183036101008112156131d257600080fd5b6040516060810181811067ffffffffffffffff821117156131f5576131f5613b01565b604052915081613205858561316f565b81526080603f198301121561321957600080fd5b613221613880565b91506132308560408601613059565b825261323f8560808601613059565b60208301528160208201526132578560c0860161316f565b6040820152505092915050565b803563ffffffff81168114612fbd57600080fd5b60006020828403121561328a57600080fd5b61276482612fa6565b6000602082840312156132a557600080fd5b813561276481613b17565b6000602082840312156132c257600080fd5b815161276481613b17565b6000602082840312156132df57600080fd5b815167ffffffffffffffff8111156132f657600080fd5b8201601f8101841361330757600080fd5b8051613315612fe382613945565b81815285602083850101111561332a57600080fd5b61333b8260208301602086016139e7565b95945050505050565b6000806040838503121561335757600080fd5b823567ffffffffffffffff8082111561336f57600080fd5b9084019060a0828703121561338357600080fd5b61338b6138a9565b823581526020830135602082015260408301356040820152606083013560608201526080830135828111156133bf57600080fd5b6133cb8882860161311e565b60808301525093506133e291505060208401612fa6565b90509250929050565b600061016082840312156133fe57600080fd5b6040516080810181811067ffffffffffffffff8211171561342157613421613b01565b60405261342e84846131be565b815261343d6101008401613264565b6020820152610120830135604082015261014090920135606083015250919050565b6000806040838503121561347257600080fd5b823567ffffffffffffffff8082111561348a57600080fd5b90840190610260828703121561349f57600080fd5b6134a76138cc565b6134b187846131be565b815261010080840135602083015261012080850135848111156134d357600080fd5b6134df8a8288016130b1565b60408501525061014080860135858111156134f957600080fd5b6135058b8289016130b1565b60608601525061016080870135608086015261018087013560a08601526101a087013560c08601526101c08701358681111561354057600080fd5b61354c8c828a016130b1565b60e0870152506101e08701358681111561356557600080fd5b6135718c828a016130b1565b85870152506135836102008801612fa6565b838601526135946102208801612fa6565b828601526102408701359350858411156135ad57600080fd5b6135b98b858901612fc2565b9085015250919550505060208501359150808211156135d757600080fd5b506135e48582860161311e565b9150509250929050565b60006020828403121561360057600080fd5b5035919050565b60006020828403121561361957600080fd5b61276482613264565b6000806040838503121561363557600080fd5b61363e83613264565b91506133e260208401612fa6565b6000806040838503121561365f57600080fd5b61366883613264565b91506133e260208401613264565b60008060006060848603121561368b57600080fd5b61369484613264565b92506136a260208501613264565b91506136b060408501612fa6565b90509250925092565b6000602082840312156136cb57600080fd5b815160ff8116811461276457600080fd5b8060005b60028110156136ff5781518452602093840193909101906001016136e0565b50505050565b6000815180845261371d8160208601602086016139e7565b601f01601f19169290920160200192915050565b815160009082906020808601845b8381101561375b5781518552938201939082019060010161373f565b50929695505050505050565b600082516137798184602087016139e7565b9190910192915050565b600083516137958184602088016139e7565b8351908301906137a98183602088016139e7565b01949350505050565b6020815260006127646020830184613705565b60006101208083016137e284875180518252602090810151910152565b6020808701516137f66040870182516136dc565b81015161380660808701826136dc565b506040870151805160c08701526020015160e08601526101008501929092528451908190526101408401918581019160005b8181101561385457835185529382019392820192600101613838565b5092979650505050505050565b83815282602082015260606040820152600061333b6060830184613705565b6040805190810167ffffffffffffffff811182821017156138a3576138a3613b01565b60405290565b60405160a0810167ffffffffffffffff811182821017156138a3576138a3613b01565b604051610180810167ffffffffffffffff811182821017156138a3576138a3613b01565b604051601f8201601f1916810167ffffffffffffffff8111828210171561391957613919613b01565b604052919050565b600067ffffffffffffffff82111561393b5761393b613b01565b5060051b60200190565b600067ffffffffffffffff82111561395f5761395f613b01565b50601f01601f191660200190565b6000821982111561398057613980613aa9565b500190565b600063ffffffff8083168185168083038211156137a9576137a9613aa9565b600063ffffffff808316818516818304811182151516156139c7576139c7613aa9565b02949350505050565b6000828210156139e2576139e2613aa9565b500390565b60005b83811015613a025781810151838201526020016139ea565b838111156136ff5750506000910152565b600063ffffffff821680613a2957613a29613aa9565b6000190192915050565b6000600019821415613a4757613a47613aa9565b5060010190565b600063ffffffff80831681811415613a6857613a68613aa9565b6001019392505050565b600082613a8157613a81613abf565b500690565b600063ffffffff80841680613a9d57613a9d613abf565b92169190910692915050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b80151581146120de57600080fdfea264697066735822122099875c31f2956eb3bf4bd284f7587dbecc727a9cef258c57cad6163dfc45907764736f6c63430008070033';

type CommitmentPoolERC20ConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CommitmentPoolERC20ConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CommitmentPoolERC20__factory extends ContractFactory {
  constructor(...args: CommitmentPoolERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'CommitmentPoolERC20';
  }

  deploy(
    _treeHeight: BigNumberish,
    _rootHistoryLength: BigNumberish,
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<CommitmentPoolERC20> {
    return super.deploy(
      _treeHeight,
      _rootHistoryLength,
      _token,
      overrides || {},
    ) as Promise<CommitmentPoolERC20>;
  }
  getDeployTransaction(
    _treeHeight: BigNumberish,
    _rootHistoryLength: BigNumberish,
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(_treeHeight, _rootHistoryLength, _token, overrides || {});
  }
  attach(address: string): CommitmentPoolERC20 {
    return super.attach(address) as CommitmentPoolERC20;
  }
  connect(signer: Signer): CommitmentPoolERC20__factory {
    return super.connect(signer) as CommitmentPoolERC20__factory;
  }
  static readonly contractName: 'CommitmentPoolERC20';
  public readonly contractName: 'CommitmentPoolERC20';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CommitmentPoolERC20Interface {
    return new utils.Interface(_abi) as CommitmentPoolERC20Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): CommitmentPoolERC20 {
    return new Contract(address, _abi, signerOrProvider) as CommitmentPoolERC20;
  }
}
