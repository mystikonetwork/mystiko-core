/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides, BigNumberish } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { CommitmentPoolMain, CommitmentPoolMainInterface } from '../CommitmentPoolMain';

const _abi = [
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_treeHeight',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '_rootHistoryLength',
        type: 'uint32',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
    ],
    name: 'CommitmentIncluded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'rollupFee',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'leafIndex',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'bytes',
        name: 'encryptedNote',
        type: 'bytes',
      },
    ],
    name: 'CommitmentQueued',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'rootHash',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'serialNumber',
        type: 'uint256',
      },
    ],
    name: 'CommitmentSpent',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_actor',
        type: 'address',
      },
    ],
    name: 'addEnqueueWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_roller',
        type: 'address',
      },
    ],
    name: 'addRollupWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetType',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_newOperator',
        type: 'address',
      },
    ],
    name: 'changeOperator',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
    ],
    name: 'disableRollupVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_numInputs',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '_numOutputs',
        type: 'uint32',
      },
    ],
    name: 'disableTransactVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
      {
        internalType: 'address',
        name: '_rollupVerifier',
        type: 'address',
      },
    ],
    name: 'enableRollupVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_numInputs',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '_numOutputs',
        type: 'uint32',
      },
      {
        internalType: 'address',
        name: '_transactVerifier',
        type: 'address',
      },
    ],
    name: 'enableTransactVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
        ],
        internalType: 'struct ICommitmentPool.CommitmentRequest',
        name: '_request',
        type: 'tuple',
      },
      {
        internalType: 'address',
        name: '_executor',
        type: 'address',
      },
    ],
    name: 'enqueue',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getCommitmentIncludedCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinRollupFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getRootHistoryLength',
    outputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getSanctionsContract',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getTreeCapacity',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_commitment',
        type: 'uint256',
      },
    ],
    name: 'isHistoricCommitment',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'root',
        type: 'uint256',
      },
    ],
    name: 'isKnownRoot',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isRollupWhitelistDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isSanctionCheckDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_serialNumber',
        type: 'uint256',
      },
    ],
    name: 'isSpentSerialNumber',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isVerifierUpdateDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_actor',
        type: 'address',
      },
    ],
    name: 'removeEnqueueWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_roller',
        type: 'address',
      },
    ],
    name: 'removeRollupWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'a',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256[2]',
                    name: 'X',
                    type: 'uint256[2]',
                  },
                  {
                    internalType: 'uint256[2]',
                    name: 'Y',
                    type: 'uint256[2]',
                  },
                ],
                internalType: 'struct IVerifier.G2Point',
                name: 'b',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'c',
                type: 'tuple',
              },
            ],
            internalType: 'struct IVerifier.Proof',
            name: 'proof',
            type: 'tuple',
          },
          {
            internalType: 'uint32',
            name: 'rollupSize',
            type: 'uint32',
          },
          {
            internalType: 'uint256',
            name: 'newRoot',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'leafHash',
            type: 'uint256',
          },
        ],
        internalType: 'struct ICommitmentPool.RollupRequest',
        name: '_request',
        type: 'tuple',
      },
    ],
    name: 'rollup',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_minRollupFee',
        type: 'uint256',
      },
    ],
    name: 'setMinRollupFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'toggleRollupWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_check',
        type: 'bool',
      },
    ],
    name: 'toggleSanctionCheck',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'toggleVerifierUpdate',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'a',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256[2]',
                    name: 'X',
                    type: 'uint256[2]',
                  },
                  {
                    internalType: 'uint256[2]',
                    name: 'Y',
                    type: 'uint256[2]',
                  },
                ],
                internalType: 'struct IVerifier.G2Point',
                name: 'b',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'c',
                type: 'tuple',
              },
            ],
            internalType: 'struct IVerifier.Proof',
            name: 'proof',
            type: 'tuple',
          },
          {
            internalType: 'uint256',
            name: 'rootHash',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'serialNumbers',
            type: 'uint256[]',
          },
          {
            internalType: 'uint256[]',
            name: 'sigHashes',
            type: 'uint256[]',
          },
          {
            internalType: 'bytes32',
            name: 'sigPk',
            type: 'bytes32',
          },
          {
            internalType: 'uint256',
            name: 'publicAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'relayerFeeAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'outCommitments',
            type: 'uint256[]',
          },
          {
            internalType: 'uint256[]',
            name: 'outRollupFees',
            type: 'uint256[]',
          },
          {
            internalType: 'address',
            name: 'publicRecipient',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'relayerAddress',
            type: 'address',
          },
          {
            internalType: 'bytes[]',
            name: 'outEncryptedNotes',
            type: 'bytes[]',
          },
        ],
        internalType: 'struct ICommitmentPool.TransactRequest',
        name: '_request',
        type: 'tuple',
      },
      {
        internalType: 'bytes',
        name: '_signature',
        type: 'bytes',
      },
    ],
    name: 'transact',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_sanction',
        type: 'address',
      },
    ],
    name: 'updateSanctionContractAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    stateMutability: 'payable',
    type: 'receive',
  },
];

const _bytecode =
  '0x60c0604052600180546001600160a81b0319167340c57923924b5c5c5455c48d93317139addac8fb17905560006007819055600855600b805463ffffffff191690553480156200004e57600080fd5b50604051620041fa380380620041fa833981016040819052620000719162000890565b6001600055818163ffffffff8116620000e45760405162461bcd60e51b815260206004820152602b60248201527f5f726f6f74486973746f72794c656e6774682073686f756c642062652067726560448201526a061746572207468616e20360ac1b606482015260840160405180910390fd5b600b8054600160201b600160c01b031916336401000000000217905560e081901b6001600160e01b03191660a0526200012563ffffffff8316600262000911565b60805262000133826200015b565b600a819055600b5463ffffffff1660009081526009602052604090205550620009f292505050565b600063ffffffff82166200019057507f09f658457775074ff4c842032a5ec2f1134c32784cca59d594caac8c503b7923919050565b8163ffffffff1660011415620001c757507f1a77569b79cb7c2eaf9368de9e3b1efc0a606561e5ab299c2337340f3cdd576a919050565b8163ffffffff1660021415620001fe57507f111bd0002b1e3b8f1978c932b5ccb2fab87fdb0acab2ddb266f9a346dcb11ee1919050565b8163ffffffff16600314156200023557507f040868ea2a363e05d7ae44280f69b49e429ab096ca2844efe91f8d6b3dad57dd919050565b8163ffffffff16600414156200026b57507ef8f605c92c8502c8fe83be1b83b24e3f67312a388f30cbadb5dee8974137c3919050565b8163ffffffff1660051415620002a257507f1adc043c99adbc0c86a60a36db0f661e2dd96f36ede322f954386d8935a0c5d9919050565b8163ffffffff1660061415620002d957507f2a1fedfa71da723ac3e9b35cef752fa1b647b2b737a23e91241cb7bdc419e3f4919050565b8163ffffffff16600714156200031057507f17fe1974543c4c4b228e1292f7e3200d31435fc910ee5a8c5cafd329cc4b256b919050565b8163ffffffff16600814156200034757507f0e84a586eb63a0eec0f1fe5785022441f0e29e4ae859c7ce1f5fc88a42ad2e6b919050565b8163ffffffff16600914156200037e57507f193deb901f6eeb032e02e093280db17e373d4ff52bafda9215b46bb9b0a86f3e919050565b8163ffffffff16600a1415620003b557507f1d10ca7b985697cb519565a5006c3f44b020b2edab9b7422ed15dc34532f9406919050565b8163ffffffff16600b1415620003ec57507f1dc200763555467a4e583e00badfdc1fb4d3d3f8f1cc81f31fd2f8b387776081919050565b8163ffffffff16600c14156200042357507f203dd11fdba0ed13b20ca2d6952f3feb7461836a03512e0cccce8467b320b2f6919050565b8163ffffffff16600d14156200045a57507f0591af64e64a3e69caf23eee2bdea90885343a49f547ee9464e95d8d6267e4f7919050565b8163ffffffff16600e14156200049157507f2af572f1077a32f46dc8e307d43c0fa6753b400b2107325976b8df7380545ff6919050565b8163ffffffff16600f1415620004c857507f043227ae4b70b1aacd04e35e6aaed7b56d91220c31e97aaf52e12a6a56984e52919050565b8163ffffffff1660101415620004ff57507f2976f1f6a91d83d4c528dad69ece6d3d91934b0e5657e915b360c8c4c2fb54e6919050565b8163ffffffff16601114156200053557507ee5c251c9e093658be0cd1b0df55b6f70f3d09146c1c8b4212a4ddcde700dbc919050565b8163ffffffff16601214156200056c57507f0267cbbc1bc2f1c3e3073d2ee60df8cc0bfef39fe3cee735c9ad5c8ad30064d2919050565b8163ffffffff1660131415620005a357507f2f356057bc56f67dbf159a0e8935022acd5e982dce9f4071adc43e4d57ce27e6919050565b8163ffffffff1660141415620005da57507f273db68f52f12a9d8022ae524050064e42d4d1661c9bcce958acf89b5e8b127b919050565b8163ffffffff16601514156200061157507f0496a18ad4cca81b7c98ceb197439ad925e0f7f62d69dfa42cf9574be77fe30f919050565b8163ffffffff16601614156200064857507f24f89a3f943d421b2f3a554b65459f42b820ac09d6fd9d693df5f8ba732ab596919050565b8163ffffffff16601714156200067f57507f1b55bfd751c6807df36876cdce68034ab43210be2bc8afa8043c7f428604e7a7919050565b8163ffffffff1660181415620006b657507f16d6595a398cf20f2489b90e958166f1e19c537c0c46e9b8ea5462391ee8f143919050565b8163ffffffff1660191415620006ed57507f0f01447ef8f621592474b678ed2fc404ebaf22a6fce15364bb4152a88c113613919050565b8163ffffffff16601a14156200072457507f026c2dffee48bacbc9d21cf90aa7c6e525ab01db6966a9e7e53b3d3f4d1f5a4d919050565b8163ffffffff16601b14156200075b57507f234fe90732795745b2c504c791242a2bb193baa1cbeab57db9324b6bb9134817919050565b8163ffffffff16601c14156200079257507f23a8e0a7e60981c52ebb498c260d5bef4d7c65145d17128996a77c33a3262a7e919050565b8163ffffffff16601d1415620007c957507f24ee69d2565210c7027ff6fc2657ed029278bc79f41077fe3281ea5d5d8e80f9919050565b8163ffffffff16601e14156200080057507f1de402fa32463bb2917b733aeef0197a49cacacd1fe860c3acc8cd3b65a30a68919050565b8163ffffffff16601f14156200083757507f1d3015a0f6a7b3f754171d0540628107e50e25debceb16e0e33ae4205501896d919050565b8163ffffffff16602014156200086e57507f264a260539342647256819046bae05bed903a8d19b3c90439d67317d5d881322919050565b506000919050565b805163ffffffff811681146200088b57600080fd5b919050565b60008060408385031215620008a457600080fd5b620008af8362000876565b9150620008bf6020840162000876565b90509250929050565b600181815b8085111562000909578160001904821115620008ed57620008ed620009dc565b80851615620008fb57918102915b93841c9390800290620008cd565b509250929050565b60006200091f838362000926565b9392505050565b6000826200093757506001620009d6565b816200094657506000620009d6565b81600181146200095f57600281146200096a576200098a565b6001915050620009d6565b60ff8411156200097e576200097e620009dc565b50506001821b620009d6565b5060208310610133831016604e8410600b8410161715620009af575081810a620009d6565b620009bb8383620008c8565b8060001904821115620009d257620009d2620009dc565b0290505b92915050565b634e487b7160e01b600052601160045260246000fd5b60805160a05160e01c6137c362000a376000396000818161043601528181610db8015261207a015260008181610349015281816110a70152611ac701526137c36000f3fe6080604052600436106101c65760003560e01c80637cbf0ff6116100f7578063a9b1d29611610095578063ce74610211610064578063ce74610214610555578063deeff7cd1461057d578063e500f5041461059d578063ffa89b88146105b257600080fd5b8063a9b1d296146104e0578063b08892d014610500578063b4318ead14610515578063c259e2e61461053557600080fd5b80639ae39ca3116100d15780639ae39ca3146104605780639b0a6fea146104805780639cc6b354146104a0578063a6232a93146104c057600080fd5b80637cbf0ff6146103df5780637fa4b09c146103ff578063934aef271461041f57600080fd5b80633bb8d1b411610164578063484eb6521161013e578063484eb6521461033a5780634eb069f714610377578063570600161461038f57806378d60cd7146103bf57600080fd5b80633bb8d1b4146102c45780633fae882e146102f45780633fe3347a1461030757600080fd5b806306394c9b116101a057806306394c9b1461023457806314a7737d1461025457806330d780361461027457806334c33e83146102a457600080fd5b806302d498f1146101d257806303db9874146101f457806305335faa1461021457600080fd5b366101cd57005b600080fd5b3480156101de57600080fd5b506101f26101ed366004612fb5565b6105cf565b005b34801561020057600080fd5b506101f261020f366004612fb5565b61064b565b34801561022057600080fd5b506101f261022f366004612fd0565b6106bf565b34801561024057600080fd5b506101f261024f366004612fb5565b61072c565b34801561026057600080fd5b506101f261026f3660046130b1565b6107c1565b34801561028057600080fd5b50600154600160a01b900460ff165b60405190151581526020015b60405180910390f35b3480156102b057600080fd5b506101f26102bf366004612fb5565b610e2b565b3480156102d057600080fd5b5061028f6102df3660046132b4565b60009081526005602052604090205460ff1690565b6101f2610302366004613125565b610eb8565b34801561031357600080fd5b50604080518082018252600481526336b0b4b760e11b6020820152905161029b9190613439565b34801561034657600080fd5b507f00000000000000000000000000000000000000000000000000000000000000005b60405190815260200161029b565b34801561038357600080fd5b50600f5460ff1661028f565b34801561039b57600080fd5b5061028f6103aa3660046132b4565b60009081526004602052604090205460ff1690565b3480156103cb57600080fd5b5061028f6103da36600461300a565b611a10565b3480156103eb57600080fd5b506101f26103fa3660046132b4565b611bf9565b34801561040b57600080fd5b506101f261041a36600461333c565b611ca1565b34801561042b57600080fd5b5060405163ffffffff7f000000000000000000000000000000000000000000000000000000000000000016815260200161029b565b34801561046c57600080fd5b506101f261047b366004612fd0565b611e19565b34801561048c57600080fd5b506101f261049b3660046132cd565b611e7f565b3480156104ac57600080fd5b506101f26104bb366004612fb5565b611fc5565b3480156104cc57600080fd5b5061028f6104db3660046132b4565b612039565b3480156104ec57600080fd5b506101f26104fb366004612fb5565b6120c5565b34801561050c57600080fd5b50600c54610369565b34801561052157600080fd5b506101f2610530366004612fd0565b61213c565b34801561054157600080fd5b506101f2610550366004613312565b6121ad565b34801561056157600080fd5b506001546040516001600160a01b03909116815260200161029b565b34801561058957600080fd5b506101f26105983660046132e8565b612319565b3480156105a957600080fd5b50600854610369565b3480156105be57600080fd5b50600f54610100900460ff1661028f565b600b5464010000000090046001600160a01b031633146106275760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b60448201526064015b60405180910390fd5b6001600160a01b03166000908152600d60205260409020805460ff19166001179055565b600b5464010000000090046001600160a01b0316331461069e5760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b604482015260640161061e565b6001600160a01b03166000908152600e60205260409020805460ff19169055565b600b5464010000000090046001600160a01b031633146107125760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b604482015260640161061e565b600f80549115156101000261ff0019909216919091179055565b600b5464010000000090046001600160a01b0316331461077f5760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b604482015260640161061e565b600b80546001600160a01b03909216640100000000027fffffffffffffffff0000000000000000000000000000000000000000ffffffff909216919091179055565b600f54610100900460ff16806107e65750336000908152600d602052604090205460ff165b6108325760405162461bcd60e51b815260206004820152601860248201527f6f6e6c792077686974656c697374656420726f6c6c65722e0000000000000000604482015260640161061e565b61083f8160400151612039565b1561088c5760405162461bcd60e51b815260206004820152601560248201527f6e6577526f6f74206973206475706c6963617465640000000000000000000000604482015260640161061e565b6000816020015163ffffffff161180156108b25750600754816020015163ffffffff1611155b80156108df575060208181015163ffffffff16600090815260039091526040902054600160a01b900460ff165b6109205760405162461bcd60e51b8152602060048201526012602482015271696e76616c696420726f6c6c757053697a6560701b604482015260640161061e565b806020015163ffffffff1660085461093891906136da565b156109915760405162461bcd60e51b815260206004820152602360248201527f696e76616c696420726f6c6c757053697a652061742063757272656e7420737460448201526261746560e81b606482015260840161061e565b60006109a3600854836020015161247f565b90506000826020015163ffffffff1667ffffffffffffffff8111156109ca576109ca613769565b6040519080825280602002602001820160405280156109f3578160200160208202803683370190505b506008549091506000905b846020015163ffffffff16600854610a1691906135d5565b811015610b4057600081815260066020526040902054610a785760405162461bcd60e51b815260206004820152601260248201527f696e646578206f7574206f6620626f756e640000000000000000000000000000604482015260640161061e565b60008181526006602052604090205460085481908590610a989085613638565b81518110610aa857610aa8613753565b602002602001018181525050600660008381526020019081526020016000206001015483610ad691906135d5565b6000838152600660205260408120818155600190810191909155600754919450610aff91613638565b60075560405181907ffe6b097b46a78e08506a3143b6337c2505ba77df76fe05c3663a987395d6341390600090a25080610b388161369b565b9150506109fe565b5060007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000183604051602001610b7591906133d4565b6040516020818303038152906040528051906020012060001c610b9891906136da565b905080856060015114610bed5760405162461bcd60e51b815260206004820152601060248201527f696e76616c6964206c6561664861736800000000000000000000000000000000604482015260640161061e565b60408051600480825260a0820190925260009160208201608080368337019050509050600a5481600081518110610c2657610c26613753565b602002602001018181525050856040015181600181518110610c4a57610c4a613753565b602002602001018181525050856060015181600281518110610c6e57610c6e613753565b6020026020010181815250508481600381518110610c8e57610c8e613753565b6020908102919091018101919091528681015163ffffffff16600090815260039091526040808220548851915163c941764760e01b81526001600160a01b039091169163c941764791610ce69190869060040161344c565b602060405180830381600087803b158015610d0057600080fd5b505af1158015610d14573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d389190612fed565b905080610d875760405162461bcd60e51b815260206004820152600d60248201527f696e76616c69642070726f6f6600000000000000000000000000000000000000604482015260640161061e565b610d90846124b7565b866020015163ffffffff16600854610da891906135d5565b6008556040870151600a55600b547f000000000000000000000000000000000000000000000000000000000000000090610de99063ffffffff1660016135ed565b610df391906136ee565b600b805463ffffffff191663ffffffff9290921691821790556040978801516000918252600960205297902096909655505050505050565b600b5464010000000090046001600160a01b03163314610e7e5760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b604482015260640161061e565b600180547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b60026000541415610f0b5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161061e565b600260008181556040848101515160e08601515163ffffffff808316855260209586528385209082168552909452912054909190600160a01b900460ff16610f955760405162461bcd60e51b815260206004820152601260248201527f696e76616c696420692f6f206c656e6774680000000000000000000000000000604482015260640161061e565b8163ffffffff1684606001515114610fef5760405162461bcd60e51b815260206004820152601860248201527f696e76616c696420736967486173686573206c656e6774680000000000000000604482015260640161061e565b8063ffffffff16846101000151511461104a5760405162461bcd60e51b815260206004820152601c60248201527f696e76616c6964206f7574526f6c6c757046656573206c656e67746800000000604482015260640161061e565b8063ffffffff1684610160015151146110a55760405162461bcd60e51b815260206004820181905260248201527f696e76616c6964206f7574456e637279707465644e6f746573206c656e677468604482015260640161061e565b7f00000000000000000000000000000000000000000000000000000000000000008163ffffffff166007546008546110dd91906135d5565b6110e791906135d5565b11156111245760405162461bcd60e51b815260206004820152600c60248201526b1d1c9959481a5cc8199d5b1b60a21b604482015260640161061e565b61113284610120015161254f565b1561117f5760405162461bcd60e51b815260206004820152601260248201527f73616e6374696f6e656420616464726573730000000000000000000000000000604482015260640161061e565b600061118a856125f2565b905060006111988286612707565b60808701519091506001600160a01b038216146111f75760405162461bcd60e51b815260206004820152601160248201527f696e76616c6964207369676e6174757265000000000000000000000000000000604482015260640161061e565b600061120484600261360c565b61120f86600261360c565b61121a9060046135ed565b61122491906135ed565b63ffffffff1667ffffffffffffffff81111561124257611242613769565b60405190808252806020026020018201604052801561126b578160200160208202803683370190505b50905061127b8760200151612039565b6112c75760405162461bcd60e51b815260206004820152600c60248201527f696e76616c696420726f6f740000000000000000000000000000000000000000604482015260640161061e565b8660200151816000815181106112df576112df613753565b60200260200101818152505060005b8563ffffffff168163ffffffff161015611451576005600089604001518363ffffffff168151811061132257611322613753565b60209081029190910181015182528101919091526040016000205460ff161561138d5760405162461bcd60e51b815260206004820152601760248201527f746865206e6f746520686173206265656e207370656e74000000000000000000604482015260640161061e565b87604001518163ffffffff16815181106113a9576113a9613753565b6020026020010151828260016113bf91906135ed565b63ffffffff16815181106113d5576113d5613753565b60200260200101818152505087606001518163ffffffff16815181106113fd576113fd613753565b6020026020010151828783600161141491906135ed565b61141e91906135ed565b63ffffffff168151811061143457611434613753565b602090810291909101015280611449816136b6565b9150506112ee565b5060808701518161146387600261360c565b61146e9060016135ed565b63ffffffff168151811061148457611484613753565b602090810291909101015260a0870151816114a087600261360c565b6114ab9060026135ed565b63ffffffff16815181106114c1576114c1613753565b602090810291909101015260c0870151816114dd87600261360c565b6114e89060036135ed565b63ffffffff16815181106114fe576114fe613753565b60200260200101818152505060005b8463ffffffff168163ffffffff16101561171357600460008960e001518363ffffffff168151811061154157611541613753565b60209081029190910181015182528101919091526040016000205460ff16156115ac5760405162461bcd60e51b815260206004820152601460248201527f6475706c696361746520636f6d6d69746d656e74000000000000000000000000604482015260640161061e565b600c548861010001518263ffffffff16815181106115cc576115cc613753565b602002602001015110156116225760405162461bcd60e51b815260206004820152601260248201527f726f6c6c75702066656520746f6f206c6f770000000000000000000000000000604482015260640161061e565b8760e001518163ffffffff168151811061163e5761163e613753565b60200260200101518282886002611655919061360c565b6116609060046135ed565b61166a91906135ed565b63ffffffff168151811061168057611680613753565b6020026020010181815250508761010001518163ffffffff16815181106116a9576116a9613753565b60200260200101518282878960026116c1919061360c565b6116cb91906135ed565b6116d69060046135ed565b6116e091906135ed565b63ffffffff16815181106116f6576116f6613753565b60209081029190910101528061170b816136b6565b91505061150d565b5063ffffffff80861660009081526002602090815260408083209388168352929052818120548951925163c941764760e01b815291926001600160a01b039091169163c94176479161176991869060040161344c565b602060405180830381600087803b15801561178357600080fd5b505af1158015611797573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117bb9190612fed565b90508061180a5760405162461bcd60e51b815260206004820152601660248201527f696e76616c6964207472616e736163742070726f6f6600000000000000000000604482015260640161061e565b60005b8663ffffffff168163ffffffff1610156118d7576001600560008b604001518463ffffffff168151811061184357611843613753565b6020026020010151815260200190815260200160002060006101000a81548160ff02191690831515021790555088604001518163ffffffff168151811061188c5761188c613753565b602002602001015189602001517f3c2372ab6130817bd6b8fc6dbaecae947e84201b49535d358debaa6c34c23ecf60405160405180910390a3806118cf816136b6565b91505061180d565b5060005b8563ffffffff168163ffffffff1610156119c6576001600460008b60e001518463ffffffff168151811061191157611911613753565b6020026020010151815260200190815260200160002060006101000a81548160ff0219169083151502179055506119b48960e001518263ffffffff168151811061195d5761195d613753565b60200260200101518a61010001518363ffffffff168151811061198257611982613753565b60200260200101518b61016001518463ffffffff16815181106119a7576119a7613753565b602002602001015161272b565b806119be816136b6565b9150506118db565b5060a0880151156119e4576119e48861012001518960a001516127c1565b60c088015115611a0157611a018861014001518960c001516127c1565b50506001600055505050505050565b336000908152600e602052604081205460ff16611a6f5760405162461bcd60e51b815260206004820152601860248201527f6f6e6c792077686974656c69737465642073656e6465722e0000000000000000604482015260640161061e565b600c5483606001511015611ac55760405162461bcd60e51b815260206004820152601260248201527f726f6c6c75702066656520746f6f206665770000000000000000000000000000604482015260640161061e565b7f0000000000000000000000000000000000000000000000000000000000000000600754600854611af691906135d5565b10611b325760405162461bcd60e51b815260206004820152600c60248201526b1d1c9959481a5cc8199d5b1b60a21b604482015260640161061e565b60208084015160009081526004909152604090205460ff1615611ba15760405162461bcd60e51b815260206004820152602160248201527f74686520636f6d6d69746d656e7420686173206265656e207375626d697474656044820152601960fa1b606482015260840161061e565b60208084018051600090815260049092526040909120805460ff191660011790555160608401516080850151611bd892919061272b565b604083015115611bf057611bf08284604001516128b7565b50600192915050565b600b5464010000000090046001600160a01b03163314611c4c5760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b604482015260640161061e565b60008111611c9c5760405162461bcd60e51b815260206004820152601560248201527f696e76616c6964205f6d696e526f6c6c75704665650000000000000000000000604482015260640161061e565b600c55565b600b5464010000000090046001600160a01b03163314611cf45760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b604482015260640161061e565b600f5460ff1615611d535760405162461bcd60e51b8152602060048201526024808201527f766572696669657220757064617465732068617665206265656e2064697361626044820152633632b21760e11b606482015260840161061e565b60008363ffffffff1611611da95760405162461bcd60e51b815260206004820152601460248201527f6e756d496e707574732073686f756c64203e2030000000000000000000000000604482015260640161061e565b6040805180820182526001600160a01b0392831681526001602080830191825263ffffffff9687166000908152600282528481209690971687529490945293209251835492511515600160a01b0274ffffffffffffffffffffffffffffffffffffffffff19909316911617179055565b600b5464010000000090046001600160a01b03163314611e6c5760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b604482015260640161061e565b600f805460ff1916911515919091179055565b600b5464010000000090046001600160a01b03163314611ed25760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b604482015260640161061e565b60008163ffffffff1611611f1d5760405162461bcd60e51b8152602060048201526012602482015271696e76616c696420726f6c6c757053697a6560701b604482015260640161061e565b600f5460ff1615611f7c5760405162461bcd60e51b8152602060048201526024808201527f766572696669657220757064617465732068617665206265656e2064697361626044820152633632b21760e11b606482015260840161061e565b63ffffffff8116600090815260036020526040902054600160a01b900460ff1615611fc25763ffffffff81166000908152600360205260409020805460ff60a01b191690555b50565b600b5464010000000090046001600160a01b031633146120185760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b604482015260640161061e565b6001600160a01b03166000908152600d60205260409020805460ff19169055565b600b5460009063ffffffff165b63ffffffff811660009081526009602052604090205483141561206c5750600192915050565b63ffffffff811661209a57507f00000000000000000000000000000000000000000000000000000000000000005b806120a48161367b565b600b5490925063ffffffff8084169116141590506120465750600092915050565b600b5464010000000090046001600160a01b031633146121185760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b604482015260640161061e565b6001600160a01b03166000908152600e60205260409020805460ff19166001179055565b600b5464010000000090046001600160a01b0316331461218f5760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b604482015260640161061e565b60018054911515600160a01b0260ff60a01b19909216919091179055565b600b5464010000000090046001600160a01b031633146122005760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b604482015260640161061e565b600f5460ff161561225f5760405162461bcd60e51b8152602060048201526024808201527f766572696669657220757064617465732068617665206265656e2064697361626044820152633632b21760e11b606482015260840161061e565b60008263ffffffff16116122b55760405162461bcd60e51b815260206004820152601460248201527f6e756d496e707574732073686f756c64203e2030000000000000000000000000604482015260640161061e565b63ffffffff828116600090815260026020908152604080832093851683529290522054600160a01b900460ff16156123155763ffffffff8083166000908152600260209081526040808320938516835292905220805460ff60a01b191690555b5050565b600b5464010000000090046001600160a01b0316331461236c5760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b604482015260640161061e565b600f5460ff16156123cb5760405162461bcd60e51b8152602060048201526024808201527f766572696669657220757064617465732068617665206265656e2064697361626044820152633632b21760e11b606482015260840161061e565b60008263ffffffff16116124165760405162461bcd60e51b8152602060048201526012602482015271696e76616c696420726f6c6c757053697a6560701b604482015260640161061e565b6040805180820182526001600160a01b0392831681526001602080830191825263ffffffff90951660009081526003909552919093209251835491511515600160a01b0274ffffffffffffffffffffffffffffffffffffffffff19909216921691909117179055565b60011c637fffffff1660005b63ffffffff8216156124b057600183901c925060018263ffffffff16901c915061248b565b5090919050565b604051600090339083908381818185875af1925050503d80600081146124f9576040519150601f19603f3d011682016040523d82523d6000602084013e6124fe565b606091505b50509050806123155760405162461bcd60e51b815260206004820152601a60248201527f726f6c6c757020666565207472616e73666572206661696c6564000000000000604482015260640161061e565b600154600090600160a01b900460ff161561256c57506000919050565b60015460405163df592f7d60e01b81526001600160a01b03848116600483015290911690819063df592f7d9060240160206040518083038186803b1580156125b357600080fd5b505afa1580156125c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125eb9190612fed565b9392505050565b6101208101516101408201516040516bffffffffffffffffffffffff19606093841b811660208301529190921b1660348201526000908190604801604051602081830303815290604052905060005b836101600151518163ffffffff1610156126b057818461016001518263ffffffff168151811061267357612673613753565b602002602001015160405160200161268c92919061340a565b604051602081830303815290604052915080806126a8906136b6565b915050612641565b508051602080830191909120604080517f19457468657265756d205369676e6564204d6573736167653a0a33320000000081850152603c8082019390935281518082039093018352605c01905280519101206125eb565b6000806000612716858561295a565b91509150612723816129ca565b509392505050565b600060085460075461273d91906135d5565b60408051808201825286815260208082018781526000858152600690925292902090518155905160019182015560075491925061277a91906135d5565b60075560405184907ff533f9705aac5020e21695ea3553ac7b6881070d2b6900ab2b1e3050304b5bf9906127b3908690859087906134e8565b60405180910390a250505050565b341561280f5760405162461bcd60e51b815260206004820152601860248201527f6e6f206d61696e6e657420746f6b656e20616c6c6f7765640000000000000000604482015260640161061e565b6000826001600160a01b03168260405160006040518083038185875af1925050503d806000811461285c576040519150601f19603f3d011682016040523d82523d6000602084013e612861565b606091505b50509050806128b25760405162461bcd60e51b815260206004820152600f60248201527f7769746864726177206661696c65640000000000000000000000000000000000604482015260640161061e565b505050565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114612904576040519150601f19603f3d011682016040523d82523d6000602084013e612909565b606091505b50509050806128b25760405162461bcd60e51b815260206004820152601c60248201527f6578656375746f7220666565207472616e73666572206661696c656400000000604482015260640161061e565b6000808251604114156129915760208301516040840151606085015160001a61298587828585612b85565b945094505050506129c3565b8251604014156129bb57602083015160408401516129b0868383612c72565b9350935050506129c3565b506000905060025b9250929050565b60008160048111156129de576129de61373d565b14156129e75750565b60018160048111156129fb576129fb61373d565b1415612a495760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161061e565b6002816004811115612a5d57612a5d61373d565b1415612aab5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161061e565b6003816004811115612abf57612abf61373d565b1415612b185760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b606482015260840161061e565b6004816004811115612b2c57612b2c61373d565b1415611fc25760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b606482015260840161061e565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115612bbc5750600090506003612c69565b8460ff16601b14158015612bd457508460ff16601c14155b15612be55750600090506004612c69565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015612c39573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116612c6257600060019250925050612c69565b9150600090505b94509492505050565b6000807f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831681612ca860ff86901c601b6135d5565b9050612cb687828885612b85565b935093505050935093915050565b80356001600160a01b0381168114612cdb57600080fd5b919050565b600082601f830112612cf157600080fd5b81356020612d06612d01836135b1565b613580565b80838252828201915082860187848660051b8901011115612d2657600080fd5b6000805b86811015612d6957823567ffffffffffffffff811115612d48578283fd5b612d568b88838d0101612e3c565b8652509385019391850191600101612d2a565b509198975050505050505050565b600082601f830112612d8857600080fd5b612d90613510565b808385604086011115612da257600080fd5b60005b6002811015612dc4578135845260209384019390910190600101612da5565b509095945050505050565b600082601f830112612de057600080fd5b81356020612df0612d01836135b1565b80838252828201915082860187848660051b8901011115612e1057600080fd5b60005b85811015612e2f57813584529284019290840190600101612e13565b5090979650505050505050565b600082601f830112612e4d57600080fd5b813567ffffffffffffffff811115612e6757612e67613769565b612e7a601f8201601f1916602001613580565b818152846020838601011115612e8f57600080fd5b816020850160208301376000918101602001919091529392505050565b600060408284031215612ebe57600080fd5b6040516040810181811067ffffffffffffffff82111715612ee157612ee1613769565b604052823581526020928301359281019290925250919050565b6000818303610100811215612f0f57600080fd5b6040516060810181811067ffffffffffffffff82111715612f3257612f32613769565b604052915081612f428585612eac565b81526080603f1983011215612f5657600080fd5b612f5e613510565b9150612f6d8560408601612d77565b8252612f7c8560808601612d77565b6020830152816020820152612f948560c08601612eac565b6040820152505092915050565b803563ffffffff81168114612cdb57600080fd5b600060208284031215612fc757600080fd5b6125eb82612cc4565b600060208284031215612fe257600080fd5b81356125eb8161377f565b600060208284031215612fff57600080fd5b81516125eb8161377f565b6000806040838503121561301d57600080fd5b823567ffffffffffffffff8082111561303557600080fd5b9084019060a0828703121561304957600080fd5b613051613539565b8235815260208301356020820152604083013560408201526060830135606082015260808301358281111561308557600080fd5b61309188828601612e3c565b60808301525093506130a891505060208401612cc4565b90509250929050565b600061016082840312156130c457600080fd5b6040516080810181811067ffffffffffffffff821117156130e7576130e7613769565b6040526130f48484612efb565b81526131036101008401612fa1565b6020820152610120830135604082015261014090920135606083015250919050565b6000806040838503121561313857600080fd5b823567ffffffffffffffff8082111561315057600080fd5b90840190610260828703121561316557600080fd5b61316d61355c565b6131778784612efb565b8152610100808401356020830152610120808501358481111561319957600080fd5b6131a58a828801612dcf565b60408501525061014080860135858111156131bf57600080fd5b6131cb8b828901612dcf565b60608601525061016080870135608086015261018087013560a08601526101a087013560c08601526101c08701358681111561320657600080fd5b6132128c828a01612dcf565b60e0870152506101e08701358681111561322b57600080fd5b6132378c828a01612dcf565b85870152506132496102008801612cc4565b8386015261325a6102208801612cc4565b8286015261024087013593508584111561327357600080fd5b61327f8b858901612ce0565b90850152509195505050602085013591508082111561329d57600080fd5b506132aa85828601612e3c565b9150509250929050565b6000602082840312156132c657600080fd5b5035919050565b6000602082840312156132df57600080fd5b6125eb82612fa1565b600080604083850312156132fb57600080fd5b61330483612fa1565b91506130a860208401612cc4565b6000806040838503121561332557600080fd5b61332e83612fa1565b91506130a860208401612fa1565b60008060006060848603121561335157600080fd5b61335a84612fa1565b925061336860208501612fa1565b915061337660408501612cc4565b90509250925092565b8060005b60028110156133a2578151845260209384019390910190600101613383565b50505050565b600081518084526133c081602086016020860161364f565b601f01601f19169290920160200192915050565b815160009082906020808601845b838110156133fe578151855293820193908201906001016133e2565b50929695505050505050565b6000835161341c81846020880161364f565b83519083019061343081836020880161364f565b01949350505050565b6020815260006125eb60208301846133a8565b600061012080830161346984875180518252602090810151910152565b60208087015161347d60408701825161337f565b81015161348d608087018261337f565b506040870151805160c08701526020015160e08601526101008501929092528451908190526101408401918581019160005b818110156134db578351855293820193928201926001016134bf565b5092979650505050505050565b83815282602082015260606040820152600061350760608301846133a8565b95945050505050565b6040805190810167ffffffffffffffff8111828210171561353357613533613769565b60405290565b60405160a0810167ffffffffffffffff8111828210171561353357613533613769565b604051610180810167ffffffffffffffff8111828210171561353357613533613769565b604051601f8201601f1916810167ffffffffffffffff811182821017156135a9576135a9613769565b604052919050565b600067ffffffffffffffff8211156135cb576135cb613769565b5060051b60200190565b600082198211156135e8576135e8613711565b500190565b600063ffffffff80831681851680830382111561343057613430613711565b600063ffffffff8083168185168183048111821515161561362f5761362f613711565b02949350505050565b60008282101561364a5761364a613711565b500390565b60005b8381101561366a578181015183820152602001613652565b838111156133a25750506000910152565b600063ffffffff82168061369157613691613711565b6000190192915050565b60006000198214156136af576136af613711565b5060010190565b600063ffffffff808316818114156136d0576136d0613711565b6001019392505050565b6000826136e9576136e9613727565b500690565b600063ffffffff8084168061370557613705613727565b92169190910692915050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b8015158114611fc257600080fdfea264697066735822122017e6d6af08c5d41ddef133ec37bf05fa58160e433ca66946cd23e204eb8410c464736f6c63430008070033';

type CommitmentPoolMainConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CommitmentPoolMainConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CommitmentPoolMain__factory extends ContractFactory {
  constructor(...args: CommitmentPoolMainConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'CommitmentPoolMain';
  }

  deploy(
    _treeHeight: BigNumberish,
    _rootHistoryLength: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<CommitmentPoolMain> {
    return super.deploy(_treeHeight, _rootHistoryLength, overrides || {}) as Promise<CommitmentPoolMain>;
  }
  getDeployTransaction(
    _treeHeight: BigNumberish,
    _rootHistoryLength: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(_treeHeight, _rootHistoryLength, overrides || {});
  }
  attach(address: string): CommitmentPoolMain {
    return super.attach(address) as CommitmentPoolMain;
  }
  connect(signer: Signer): CommitmentPoolMain__factory {
    return super.connect(signer) as CommitmentPoolMain__factory;
  }
  static readonly contractName: 'CommitmentPoolMain';
  public readonly contractName: 'CommitmentPoolMain';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CommitmentPoolMainInterface {
    return new utils.Interface(_abi) as CommitmentPoolMainInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): CommitmentPoolMain {
    return new Contract(address, _abi, signerOrProvider) as CommitmentPoolMain;
  }
}
