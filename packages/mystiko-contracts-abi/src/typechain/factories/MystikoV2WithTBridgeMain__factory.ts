/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  MystikoV2WithTBridgeMain,
  MystikoV2WithTBridgeMainInterface,
} from '../MystikoV2WithTBridgeMain';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_hasher3',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
    ],
    name: 'CommitmentCrossChain',
    type: 'event',
  },
  {
    inputs: [],
    name: 'FIELD_SIZE',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetType',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'associatedCommitmentPool',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'bridgeProxyAddress',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'bridgeType',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_newOperator',
        type: 'address',
      },
    ],
    name: 'changeOperator',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint64',
        name: '_fromChainId',
        type: 'uint64',
      },
      {
        internalType: 'address',
        name: '_fromContract',
        type: 'address',
      },
      {
        internalType: 'bytes',
        name: '_message',
        type: 'bytes',
      },
      {
        internalType: 'address',
        name: '_executor',
        type: 'address',
      },
    ],
    name: 'crossChainSyncTx',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'hashK',
            type: 'uint256',
          },
          {
            internalType: 'uint128',
            name: 'randomS',
            type: 'uint128',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
          {
            internalType: 'uint256',
            name: 'bridgeFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoBridge.DepositRequest',
        name: '_request',
        type: 'tuple',
      },
    ],
    name: 'deposit',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'hasher3',
    outputs: [
      {
        internalType: 'contract IHasher3',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isDepositsDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'minBridgeFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'minExecutorFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'minRollupFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'operator',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'peerChainId',
    outputs: [
      {
        internalType: 'uint64',
        name: '',
        type: 'uint64',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'peerContract',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'peerMinExecutorFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'peerMinRollupFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_commitmentPoolAddress',
        type: 'address',
      },
    ],
    name: 'setAssociatedCommitmentPool',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_bridgeProxyAddress',
        type: 'address',
      },
    ],
    name: 'setBridgeProxyAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_minBridgeFee',
        type: 'uint256',
      },
    ],
    name: 'setMinBridgeFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_minExecutorFee',
        type: 'uint256',
      },
    ],
    name: 'setMinExecutorFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_minRollupFee',
        type: 'uint256',
      },
    ],
    name: 'setMinRollupFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_peerMinExecutorFee',
        type: 'uint256',
      },
    ],
    name: 'setPeerMinExecutorFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_peerMinRollupFee',
        type: 'uint256',
      },
    ],
    name: 'setPeerMinRollupFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint64',
        name: '_peerChainId',
        type: 'uint64',
      },
      {
        internalType: 'address',
        name: '_peerContract',
        type: 'address',
      },
    ],
    name: 'setpeerContract',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'toggleDeposits',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x60806040523480156200001157600080fd5b50604051620025da380380620025da833981016040819052620000349162000068565b600980546001600160a01b03199081163317909155600080546001600160a01b03909316929091169190911790556200009a565b6000602082840312156200007b57600080fd5b81516001600160a01b03811681146200009357600080fd5b9392505050565b61253080620000aa6000396000f3fe6080604052600436106101ac5760003560e01c80637cbf0ff6116100ec578063a564ac161161008a578063d1c1a68011610064578063d1c1a68014610500578063e19abef814610520578063ec18d3e214610540578063ed6ea33a1461056057600080fd5b8063a564ac1614610493578063c0868f2b146104a9578063cdfceeba146104bf57600080fd5b806399383f78116100c657806399383f781461042a5780639a03636c1461044a5780639b215a261461045d578063a3bc64f21461047357600080fd5b80637cbf0ff6146103c457806382d21cd8146103e45780639937e1471461041457600080fd5b80632cd26d4511610159578063521ff05711610133578063521ff05714610344578063570ca735146103645780635e10b2b7146103845780636afdf048146103a457600080fd5b80632cd26d45146102c35780633fe3347a146102e3578063414a37ba1461031057600080fd5b806319e75d6e1161018a57806319e75d6e1461021c57806321e32d551461023c5780632421e1551461027457600080fd5b806306394c9b146101b157806306462865146101d3578063153dc450146101fc575b600080fd5b3480156101bd57600080fd5b506101d16101cc36600461208b565b610581565b005b3480156101df57600080fd5b506101e960075481565b6040519081526020015b60405180910390f35b34801561020857600080fd5b506101d16102173660046121a5565b6105fe565b34801561022857600080fd5b506101d16102373660046121a5565b6106b3565b34801561024857600080fd5b5060025461025c906001600160a01b031681565b6040516001600160a01b0390911681526020016101f3565b34801561028057600080fd5b5060408051808201909152600781527f746272696467650000000000000000000000000000000000000000000000000060208201525b6040516101f391906123e1565b3480156102cf57600080fd5b5060035461025c906001600160a01b031681565b3480156102ef57600080fd5b5060408051808201909152600481526336b0b4b760e11b60208201526102b6565b34801561031c57600080fd5b506101e97f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000181565b34801561035057600080fd5b506101d161035f3660046121a5565b61070e565b34801561037057600080fd5b5060095461025c906001600160a01b031681565b34801561039057600080fd5b506101d161039f3660046121a5565b6107b9565b3480156103b057600080fd5b5060005461025c906001600160a01b031681565b3480156103d057600080fd5b506101d16103df3660046121a5565b610864565b3480156103f057600080fd5b506104046103ff36600461220a565b61090f565b60405190151581526020016101f3565b34801561042057600080fd5b506101e960065481565b34801561043657600080fd5b506101d16104453660046120ad565b6109c8565b6101d16104583660046120e7565b610a57565b34801561046957600080fd5b506101e960085481565b34801561047f57600080fd5b506101d161048e36600461208b565b610d31565b34801561049f57600080fd5b506101e960055481565b3480156104b557600080fd5b506101e960045481565b3480156104cb57600080fd5b506001546104e790600160a01b900467ffffffffffffffff1681565b60405167ffffffffffffffff90911681526020016101f3565b34801561050c57600080fd5b506101d161051b3660046121d7565b610da9565b34801561052c57600080fd5b506101d161053b36600461208b565b610e63565b34801561054c57600080fd5b5060015461025c906001600160a01b031681565b34801561056c57600080fd5b5060095461040490600160a01b900460ff1681565b6009546001600160a01b031633146105dc5760405162461bcd60e51b815260206004820152602560248201526000805160206124db8339815191526044820152643a34b7b71760d91b60648201526084015b60405180910390fd5b600980546001600160a01b0319166001600160a01b0392909216919091179055565b6009546001600160a01b031633146106545760405162461bcd60e51b815260206004820152602560248201526000805160206124db8339815191526044820152643a34b7b71760d91b60648201526084016105d3565b600081116106ae5760405162461bcd60e51b815260206004820152602160248201527f696e76616c69642070656572206d696e696d616c206578656375746f722066656044820152606560f81b60648201526084016105d3565b600755565b6009546001600160a01b031633146107095760405162461bcd60e51b815260206004820152602560248201526000805160206124db8339815191526044820152643a34b7b71760d91b60648201526084016105d3565b600455565b6009546001600160a01b031633146107645760405162461bcd60e51b815260206004820152602560248201526000805160206124db8339815191526044820152643a34b7b71760d91b60648201526084016105d3565b600081116107b45760405162461bcd60e51b815260206004820152601f60248201527f696e76616c69642070656572206d696e696d616c20726f6c6c7570206665650060448201526064016105d3565b600855565b6009546001600160a01b0316331461080f5760405162461bcd60e51b815260206004820152602560248201526000805160206124db8339815191526044820152643a34b7b71760d91b60648201526084016105d3565b6000811161085f5760405162461bcd60e51b815260206004820152601c60248201527f696e76616c6964206d696e696d616c206578656375746f72206665650000000060448201526064016105d3565b600555565b6009546001600160a01b031633146108ba5760405162461bcd60e51b815260206004820152602560248201526000805160206124db8339815191526044820152643a34b7b71760d91b60648201526084016105d3565b6000811161090a5760405162461bcd60e51b815260206004820152601a60248201527f696e76616c6964206d696e696d616c20726f6c6c75702066656500000000000060448201526064016105d3565b600655565b6003546000906001600160a01b0316331461096c5760405162461bcd60e51b815260206004820152601e60248201527f6d73672073656e646572206973206e6f74206272696467652070726f7879000060448201526064016105d3565b60006109ad85858080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610edb92505050565b90506109bb87878584610fa3565b5060019695505050505050565b6009546001600160a01b03163314610a1e5760405162461bcd60e51b815260206004820152602560248201526000805160206124db8339815191526044820152643a34b7b71760d91b60648201526084016105d3565b60098054911515600160a01b027fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff909216919091179055565b600954600160a01b900460ff1615610ab15760405162461bcd60e51b815260206004820152601560248201527f6465706f73697473206172652064697361626c6564000000000000000000000060448201526064016105d3565b8051610aff5760405162461bcd60e51b815260206004820152601f60248201527f616d6f756e742073686f756c642062652067726561746572207468616e20300060448201526064016105d3565b6004548160a001511015610b555760405162461bcd60e51b815260206004820152601260248201527f6272696467652066656520746f6f20666577000000000000000000000000000060448201526064016105d3565b6007548160c001511015610bab5760405162461bcd60e51b815260206004820152601460248201527f6578656375746f722066656520746f6f2066657700000000000000000000000060448201526064016105d3565b6008548160e001511015610c015760405162461bcd60e51b815260206004820152601260248201527f726f6c6c75702066656520746f6f20666577000000000000000000000000000060448201526064016105d3565b6000610c1a826040015183600001518460600151611241565b905080826020015114610c6f5760405162461bcd60e51b815260206004820152601960248201527f636f6d6d69746d656e74206861736820696e636f72726563740000000000000060448201526064016105d3565b60015460e083015160c08401518451610caa936001600160a01b03169291610c9691612461565b610ca09190612461565b8460a00151611403565b6040805160a081018252835181526020808501519082015260c08401519181019190915260e08301516060820152608080840151908201526000610ced82611460565b9050610cfd8460a00151826114cf565b60208401516040517fd106eb38b3368b7c294e36fae5513fdefe880be5abfad529b37b044f2fdd2dbe90600090a250505050565b6009546001600160a01b03163314610d875760405162461bcd60e51b815260206004820152602560248201526000805160206124db8339815191526044820152643a34b7b71760d91b60648201526084016105d3565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6009546001600160a01b03163314610dff5760405162461bcd60e51b815260206004820152602560248201526000805160206124db8339815191526044820152643a34b7b71760d91b60648201526084016105d3565b6001805467ffffffffffffffff909316600160a01b027fffffffff0000000000000000ffffffffffffffffffffffffffffffffffffffff90931692909217909155600280546001600160a01b039092166001600160a01b0319909216919091179055565b6009546001600160a01b03163314610eb95760405162461bcd60e51b815260206004820152602560248201526000805160206124db8339815191526044820152643a34b7b71760d91b60648201526084016105d3565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b610f0d6040518060a0016040528060008152602001600081526020016000815260200160008152602001606081525090565b610f3f6040518060a0016040528060008152602001600081526020016000815260200160008152602001606081525090565b6000610f4b8482611555565b9083529050610f5a8482611555565b60208401919091529050610f6e8482611555565b60408401919091529050610f828482611555565b60608401919091529050610f968482611686565b5060808301525092915050565b6002546001600160a01b038481169116146110005760405162461bcd60e51b815260206004820152601e60248201527f66726f6d2070726f78792061646472657373206e6f74206d617463686564000060448201526064016105d3565b60015467ffffffffffffffff858116600160a01b90920416146110655760405162461bcd60e51b815260206004820152601960248201527f66726f6d20636861696e206964206e6f74206d6174636865640000000000000060448201526064016105d3565b80516110b35760405162461bcd60e51b815260206004820152601f60248201527f616d6f756e742073686f756c642062652067726561746572207468616e20300060448201526064016105d3565b600554816040015110156111095760405162461bcd60e51b815260206004820152601460248201527f6578656375746f722066656520746f6f2066657700000000000000000000000060448201526064016105d3565b6006548160600151101561115f5760405162461bcd60e51b815260206004820152601260248201527f726f6c6c75702066656520746f6f20666577000000000000000000000000000060448201526064016105d3565b600154604051630c987d1360e01b81526001600160a01b0390911690630c987d139061118f9084906004016123f4565b602060405180830381600087803b1580156111a957600080fd5b505af11580156111bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111e191906120ca565b61122d5760405162461bcd60e51b815260206004820152601260248201527f63616c6c20656e7175657565206572726f72000000000000000000000000000060448201526064016105d3565b61123b828260400151611793565b50505050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000184106112be5760405162461bcd60e51b8152602060048201526024808201527f686173684b2073686f756c64206265206c657373207468616e204649454c445f60448201526353495a4560e01b60648201526084016105d3565b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000183106113535760405162461bcd60e51b815260206004820152602660248201527f72616e646f6d532073686f756c64206265206c657373207468616e204649454c60448201527f445f53495a45000000000000000000000000000000000000000000000000000060648201526084016105d3565b60005460408051606081018252868152602081018690526fffffffffffffffffffffffffffffffff85168183015290516304b98e1d60e31b81526001600160a01b03909216916325cc70e8916113ab916004016123b0565b60206040518083038186803b1580156113c357600080fd5b505afa1580156113d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113fb91906121be565b949350505050565b61140d8183612461565b341461145b5760405162461bcd60e51b815260206004820152601260248201527f696e73756666696369656e7420746f6b656e000000000000000000000000000060448201526064016105d3565b505050565b6060806114708360000151611836565b61147d8460200151611836565b61148a8560400151611836565b6114978660600151611836565b6114a487608001516118ce565b6040516020016114b895949392919061230a565b60408051601f198184030181529190529392505050565b60035460025460015460405163c81739cd60e01b81526001600160a01b039384169363c81739cd93879361151f93919092169167ffffffffffffffff600160a01b90910416908790600401612375565b6000604051808303818588803b15801561153857600080fd5b505af115801561154c573d6000803e3d6000fd5b50505050505050565b60008083518360206115679190612461565b1115801561157e575061157b836020612461565b83105b6115d65760405162461bcd60e51b815260206004820152602360248201527f4e65787455696e743235352c206f66667365742065786365656473206d6178696044820152626d756d60e81b60648201526084016105d3565b600060405160206000600182038760208a0101515b8383101561160b5780821a838601536001830192506001820391506115eb565b50505081016040525190506001600160ff1b0381111561166d5760405162461bcd60e51b815260206004820152601760248201527f56616c75652065786365656473207468652072616e676500000000000000000060448201526064016105d3565b80611679856020612461565b92509250505b9250929050565b60606000806116958585611905565b86519095509091506116a78286612461565b111580156116bd57506116ba8185612461565b84105b6117155760405162461bcd60e51b8152602060048201526024808201527f4e65787456617242797465732c206f66667365742065786365656473206d6178604482015263696d756d60e01b60648201526084016105d3565b6060811580156117305760405191506020820160405261177a565b6040519150601f8316801560200281840101848101888315602002848c0101015b81831015611769578051835260209283019201611751565b5050848452601f01601f1916604052505b50806117868387612461565b9350935050509250929050565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146117e0576040519150601f19603f3d011682016040523d82523d6000602084013e6117e5565b606091505b505090508061145b5760405162461bcd60e51b815260206004820152601c60248201527f6578656375746f7220666565207472616e73666572206661696c65640000000060448201526064016105d3565b60606001600160ff1b0382111561188f5760405162461bcd60e51b815260206004820152601b60248201527f56616c756520657863656564732075696e743235352072616e6765000000000060448201526064016105d3565b60405160208082526000601f5b828210156118be5785811a82602086010153600191909101906000190161189c565b5050506040818101905292915050565b80516060906118dc81611b0b565b836040516020016118ee9291906122db565b604051602081830303815290604052915050919050565b60008060006119148585611bda565b94509050600060fd60f81b6001600160f81b0319831614156119ad5761193a8686611c62565b955061ffff16905060fd8110801590611955575061ffff8111155b6119a15760405162461bcd60e51b815260206004820152601f60248201527f4e65787455696e7431362c2076616c7565206f7574736964652072616e67650060448201526064016105d3565b925083915061167f9050565b607f60f91b6001600160f81b031983161415611a38576119cd8686611d1b565b955063ffffffff16905061ffff811180156119ec575063ffffffff8111155b6119a15760405162461bcd60e51b815260206004820181905260248201527f4e65787456617255696e742c2076616c7565206f7574736964652072616e676560448201526064016105d3565b6001600160f81b03198083161415611ab557611a548686611ded565b955067ffffffffffffffff16905063ffffffff81116119a15760405162461bcd60e51b815260206004820181905260248201527f4e65787456617255696e742c2076616c7565206f7574736964652072616e676560448201526064016105d3565b5060f881901c60fd81106119a15760405162461bcd60e51b815260206004820181905260248201527f4e65787456617255696e742c2076616c7565206f7574736964652072616e676560448201526064016105d3565b606060fd8267ffffffffffffffff161015611b4057604080516001815260f884901b6020820152602181019091525b92915050565b61ffff8267ffffffffffffffff1611611b9057611b6060fd60f81b611ebf565b611b6983611ee6565b604051602001611b7a9291906122db565b6040516020818303038152906040529050919050565b63ffffffff8267ffffffffffffffff1611611bbb57611bb2607f60f91b611ebf565b611b6983611f29565b611bcc6001600160f81b0319611ebf565b611b6983611f6c565b919050565b6000808351836001611bec9190612461565b11158015611c035750611c00836001612461565b83105b611c4f5760405162461bcd60e51b815260206004820181905260248201527f4e657874427974652c204f66667365742065786365656473206d6178696d756d60448201526064016105d3565b8383016020015180611679856001612461565b6000808351836002611c749190612461565b11158015611c8b5750611c88836002612461565b83105b611ce25760405162461bcd60e51b815260206004820152602260248201527f4e65787455696e7431362c206f66667365742065786365656473206d6178696d604482015261756d60f01b60648201526084016105d3565b6000604051846020870101518060011a82538060001a60018301535060028101604052601e810351915050808460026116799190612461565b6000808351836004611d2d9190612461565b11158015611d445750611d41836004612461565b83105b611d9b5760405162461bcd60e51b815260206004820152602260248201527f4e65787455696e7433322c206f66667365742065786365656473206d6178696d604482015261756d60f01b60648201526084016105d3565b600060405160046000600182038760208a0101515b83831015611dd05780821a83860153600183019250600182039150611db0565b505050818101604052602003900351905080611679856004612461565b6000808351836008611dff9190612461565b11158015611e165750611e13836008612461565b83105b611e6d5760405162461bcd60e51b815260206004820152602260248201527f4e65787455696e7436342c206f66667365742065786365656473206d6178696d604482015261756d60f01b60648201526084016105d3565b600060405160086000600182038760208a0101515b83831015611ea25780821a83860153600183019250600182039150611e82565b505050818101604052602003900351905080611679856008612461565b60408051600181526001600160f81b03198316602082015260218101909152606090611b3a565b6040516002808252606091906000601f5b82821015611f195785811a826020860101536001919091019060001901611ef7565b5050506022810160405292915050565b6040516004808252606091906000601f5b82821015611f5c5785811a826020860101536001919091019060001901611f3a565b5050506024810160405292915050565b6040516008808252606091906000601f5b82821015611f9f5785811a826020860101536001919091019060001901611f7d565b5050506028810160405292915050565b80356001600160a01b0381168114611bd557600080fd5b600082601f830112611fd757600080fd5b813567ffffffffffffffff80821115611ff257611ff26124b3565b604051601f8301601f19908116603f0116810190828211818310171561201a5761201a6124b3565b8160405283815286602085880101111561203357600080fd5b836020870160208301376000602085830101528094505050505092915050565b80356fffffffffffffffffffffffffffffffff81168114611bd557600080fd5b803567ffffffffffffffff81168114611bd557600080fd5b60006020828403121561209d57600080fd5b6120a682611faf565b9392505050565b6000602082840312156120bf57600080fd5b81356120a6816124c9565b6000602082840312156120dc57600080fd5b81516120a6816124c9565b6000602082840312156120f957600080fd5b813567ffffffffffffffff8082111561211157600080fd5b90830190610100828603121561212657600080fd5b61212e612437565b82358152602083013560208201526040830135604082015261215260608401612053565b606082015260808301358281111561216957600080fd5b61217587828601611fc6565b60808301525060a083013560a082015260c083013560c082015260e083013560e082015280935050505092915050565b6000602082840312156121b757600080fd5b5035919050565b6000602082840312156121d057600080fd5b5051919050565b600080604083850312156121ea57600080fd5b6121f383612073565b915061220160208401611faf565b90509250929050565b60008060008060006080868803121561222257600080fd5b61222b86612073565b945061223960208701611faf565b9350604086013567ffffffffffffffff8082111561225657600080fd5b818801915088601f83011261226a57600080fd5b81358181111561227957600080fd5b89602082850101111561228b57600080fd5b6020830195508094505050506122a360608701611faf565b90509295509295909350565b600081518084526122c7816020860160208601612487565b601f01601f19169290920160200192915050565b600083516122ed818460208801612487565b835190830190612301818360208801612487565b01949350505050565b6000865161231c818460208b01612487565b865190830190612330818360208b01612487565b8651910190612343818360208a01612487565b8551910190612356818360208901612487565b8451910190612369818360208801612487565b01979650505050505050565b6001600160a01b038416815267ffffffffffffffff831660208201526060604082015260006123a760608301846122af565b95945050505050565b60608101818360005b60038110156123d85781518352602092830192909101906001016123b9565b50505092915050565b6020815260006120a660208301846122af565b60208152815160208201526020820151604082015260408201516060820152606082015160808201526000608083015160a0808401526113fb60c08401826122af565b604051610100810167ffffffffffffffff8111828210171561245b5761245b6124b3565b60405290565b6000821982111561248257634e487b7160e01b600052601160045260246000fd5b500190565b60005b838110156124a257818101518382015260200161248a565b8381111561123b5750506000910152565b634e487b7160e01b600052604160045260246000fd5b80151581146124d757600080fd5b5056fe4f6e6c79206f70657261746f722063616e2063616c6c20746869732066756e63a2646970667358221220337ca10938fe053bed5164b1f6838e84cbf53e2f80491ae9e05c2bbce49f595e64736f6c63430008070033';

type MystikoV2WithTBridgeMainConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MystikoV2WithTBridgeMainConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MystikoV2WithTBridgeMain__factory extends ContractFactory {
  constructor(...args: MystikoV2WithTBridgeMainConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'MystikoV2WithTBridgeMain';
  }

  deploy(
    _hasher3: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<MystikoV2WithTBridgeMain> {
    return super.deploy(_hasher3, overrides || {}) as Promise<MystikoV2WithTBridgeMain>;
  }
  getDeployTransaction(
    _hasher3: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(_hasher3, overrides || {});
  }
  attach(address: string): MystikoV2WithTBridgeMain {
    return super.attach(address) as MystikoV2WithTBridgeMain;
  }
  connect(signer: Signer): MystikoV2WithTBridgeMain__factory {
    return super.connect(signer) as MystikoV2WithTBridgeMain__factory;
  }
  static readonly contractName: 'MystikoV2WithTBridgeMain';
  public readonly contractName: 'MystikoV2WithTBridgeMain';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MystikoV2WithTBridgeMainInterface {
    return new utils.Interface(_abi) as MystikoV2WithTBridgeMainInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MystikoV2WithTBridgeMain {
    return new Contract(address, _abi, signerOrProvider) as MystikoV2WithTBridgeMain;
  }
}
