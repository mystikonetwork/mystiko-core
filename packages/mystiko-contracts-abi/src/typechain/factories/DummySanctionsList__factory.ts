/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { DummySanctionsList, DummySanctionsListInterface } from '../DummySanctionsList';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: 'addr',
        type: 'address',
      },
    ],
    name: 'addToSanctionsList',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'addr',
        type: 'address',
      },
    ],
    name: 'isSanctioned',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'addr',
        type: 'address',
      },
    ],
    name: 'removeToSanctionsList',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b5061014f806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806325186bd014610046578063781809701461007a578063df592f7d146100a9575b600080fd5b6100786100543660046100e9565b6001600160a01b03166000908152602081905260409020805460ff19166001179055565b005b6100786100883660046100e9565b6001600160a01b03166000908152602081905260409020805460ff19169055565b6100d56100b73660046100e9565b6001600160a01b031660009081526020819052604090205460ff1690565b604051901515815260200160405180910390f35b6000602082840312156100fb57600080fd5b81356001600160a01b038116811461011257600080fd5b939250505056fea26469706673582212200f43bac504e65ffc94c3c29268fb244d6611ab61074385b213d764fbe0c6132c64736f6c63430008070033';

type DummySanctionsListConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DummySanctionsListConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DummySanctionsList__factory extends ContractFactory {
  constructor(...args: DummySanctionsListConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'DummySanctionsList';
  }

  deploy(overrides?: Overrides & { from?: string | Promise<string> }): Promise<DummySanctionsList> {
    return super.deploy(overrides || {}) as Promise<DummySanctionsList>;
  }
  getDeployTransaction(overrides?: Overrides & { from?: string | Promise<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): DummySanctionsList {
    return super.attach(address) as DummySanctionsList;
  }
  connect(signer: Signer): DummySanctionsList__factory {
    return super.connect(signer) as DummySanctionsList__factory;
  }
  static readonly contractName: 'DummySanctionsList';
  public readonly contractName: 'DummySanctionsList';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DummySanctionsListInterface {
    return new utils.Interface(_abi) as DummySanctionsListInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): DummySanctionsList {
    return new Contract(address, _abi, signerOrProvider) as DummySanctionsList;
  }
}
