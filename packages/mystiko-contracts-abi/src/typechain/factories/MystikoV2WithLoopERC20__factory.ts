/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides, BigNumberish } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { MystikoV2WithLoopERC20, MystikoV2WithLoopERC20Interface } from '../MystikoV2WithLoopERC20';

const _abi = [
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_treeHeight',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '_rootHistoryLength',
        type: 'uint32',
      },
      {
        internalType: 'uint256',
        name: '_minRollupFee',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: '_hasher3',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_token',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
    ],
    name: 'CommitmentIncluded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'rollupFee',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'leafIndex',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'bytes',
        name: 'encryptedNote',
        type: 'bytes',
      },
    ],
    name: 'CommitmentQueued',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'rootHash',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'serialNumber',
        type: 'uint256',
      },
    ],
    name: 'CommitmentSpent',
    type: 'event',
  },
  {
    inputs: [],
    name: 'FIELD_SIZE',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'roller',
        type: 'address',
      },
    ],
    name: 'addRollupWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'asset',
    outputs: [
      {
        internalType: 'contract IERC20Metadata',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetDecimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetName',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetSymbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetType',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'bridgeType',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_newOperator',
        type: 'address',
      },
    ],
    name: 'changeOperator',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'commitmentIncludedCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'commitmentQueue',
    outputs: [
      {
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'rollupFee',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'commitmentQueueSize',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'currentRoot',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'currentRootIndex',
    outputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'hashK',
            type: 'uint256',
          },
          {
            internalType: 'uint128',
            name: 'randomS',
            type: 'uint128',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoLoop.DepositRequest',
        name: 'request',
        type: 'tuple',
      },
    ],
    name: 'deposit',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'rollupSize',
        type: 'uint32',
      },
    ],
    name: 'disableRollupVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'numInputs',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: 'numOutputs',
        type: 'uint32',
      },
    ],
    name: 'disableTransactVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'rollupSize',
        type: 'uint32',
      },
      {
        internalType: 'address',
        name: '_rollupVerifier',
        type: 'address',
      },
    ],
    name: 'enableRollupVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'numInputs',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: 'numOutputs',
        type: 'uint32',
      },
      {
        internalType: 'address',
        name: '_transactVerifier',
        type: 'address',
      },
    ],
    name: 'enableTransactVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'hasher3',
    outputs: [
      {
        internalType: 'contract IHasher3',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'historicCommitments',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isDepositsDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'root',
        type: 'uint256',
      },
    ],
    name: 'isKnownRoot',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isRollupWhitelistDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isVerifierUpdateDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'minRollupFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'operator',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'roller',
        type: 'address',
      },
    ],
    name: 'removeRollupWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'a',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256[2]',
                    name: 'X',
                    type: 'uint256[2]',
                  },
                  {
                    internalType: 'uint256[2]',
                    name: 'Y',
                    type: 'uint256[2]',
                  },
                ],
                internalType: 'struct IVerifier.G2Point',
                name: 'b',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'c',
                type: 'tuple',
              },
            ],
            internalType: 'struct IVerifier.Proof',
            name: 'proof',
            type: 'tuple',
          },
          {
            internalType: 'uint32',
            name: 'rollupSize',
            type: 'uint32',
          },
          {
            internalType: 'uint256',
            name: 'newRoot',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'leafHash',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoLoop.RollupRequest',
        name: 'request',
        type: 'tuple',
      },
    ],
    name: 'rollup',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    name: 'rollupVerifiers',
    outputs: [
      {
        internalType: 'contract IVerifier',
        name: 'verifier',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'enabled',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'rollupWhitelist',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    name: 'rootHistory',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'rootHistoryLength',
    outputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_minRollupFee',
        type: 'uint256',
      },
    ],
    name: 'setMinRollupFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'spentSerialNumbers',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'toggleDeposits',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'toggleRollupWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'toggleVerifierUpdate',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'a',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256[2]',
                    name: 'X',
                    type: 'uint256[2]',
                  },
                  {
                    internalType: 'uint256[2]',
                    name: 'Y',
                    type: 'uint256[2]',
                  },
                ],
                internalType: 'struct IVerifier.G2Point',
                name: 'b',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'c',
                type: 'tuple',
              },
            ],
            internalType: 'struct IVerifier.Proof',
            name: 'proof',
            type: 'tuple',
          },
          {
            internalType: 'uint256',
            name: 'rootHash',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'serialNumbers',
            type: 'uint256[]',
          },
          {
            internalType: 'uint256[]',
            name: 'sigHashes',
            type: 'uint256[]',
          },
          {
            internalType: 'bytes32',
            name: 'sigPk',
            type: 'bytes32',
          },
          {
            internalType: 'uint256',
            name: 'publicAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'relayerFeeAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'outCommitments',
            type: 'uint256[]',
          },
          {
            internalType: 'uint256[]',
            name: 'outRollupFees',
            type: 'uint256[]',
          },
          {
            internalType: 'address',
            name: 'publicRecipient',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'relayerAddress',
            type: 'address',
          },
          {
            internalType: 'bytes[]',
            name: 'outEncryptedNotes',
            type: 'bytes[]',
          },
        ],
        internalType: 'struct IMystikoLoop.TransactRequest',
        name: 'request',
        type: 'tuple',
      },
      {
        internalType: 'bytes',
        name: 'signature',
        type: 'bytes',
      },
    ],
    name: 'transact',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    name: 'transactVerifiers',
    outputs: [
      {
        internalType: 'contract IVerifier',
        name: 'verifier',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'enabled',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'treeCapacity',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x60a060405260006007819055600855600b805463ffffffff191690553480156200002857600080fd5b5060405162004a4238038062004a428339810160408190526200004b9162000946565b6001600055808585858563ffffffff8316620000c25760405162461bcd60e51b815260206004820152602b60248201527f5f726f6f74486973746f72794c656e6774682073686f756c642062652067726560448201526a061746572207468616e20360ac1b60648201526084015b60405180910390fd5b60008211620001235760405162461bcd60e51b815260206004820152602660248201527f5f6d696e526f6c6c75704665652073686f756c6420626520677265617465722060448201526507468616e20360d41b6064820152608401620000b9565b600180546001600160a01b0319166001600160a01b038316179055600b8054600160201b600160e01b03191633680100000000000000000263ffffffff60201b19161764010000000063ffffffff8681169190910291909117909155600c839055620001939085166002620009f6565b608052620001a184620001f9565b600a819055600b5463ffffffff166000908152600960205260409020555050600e80546001600160a01b039094166301000000026301000000600160b81b0319909416939093179092555062000ad795505050505050565b600063ffffffff82166200022e57507f09f658457775074ff4c842032a5ec2f1134c32784cca59d594caac8c503b7923919050565b8163ffffffff16600114156200026557507f1a77569b79cb7c2eaf9368de9e3b1efc0a606561e5ab299c2337340f3cdd576a919050565b8163ffffffff16600214156200029c57507f111bd0002b1e3b8f1978c932b5ccb2fab87fdb0acab2ddb266f9a346dcb11ee1919050565b8163ffffffff1660031415620002d357507f040868ea2a363e05d7ae44280f69b49e429ab096ca2844efe91f8d6b3dad57dd919050565b8163ffffffff16600414156200030957507ef8f605c92c8502c8fe83be1b83b24e3f67312a388f30cbadb5dee8974137c3919050565b8163ffffffff16600514156200034057507f1adc043c99adbc0c86a60a36db0f661e2dd96f36ede322f954386d8935a0c5d9919050565b8163ffffffff16600614156200037757507f2a1fedfa71da723ac3e9b35cef752fa1b647b2b737a23e91241cb7bdc419e3f4919050565b8163ffffffff1660071415620003ae57507f17fe1974543c4c4b228e1292f7e3200d31435fc910ee5a8c5cafd329cc4b256b919050565b8163ffffffff1660081415620003e557507f0e84a586eb63a0eec0f1fe5785022441f0e29e4ae859c7ce1f5fc88a42ad2e6b919050565b8163ffffffff16600914156200041c57507f193deb901f6eeb032e02e093280db17e373d4ff52bafda9215b46bb9b0a86f3e919050565b8163ffffffff16600a14156200045357507f1d10ca7b985697cb519565a5006c3f44b020b2edab9b7422ed15dc34532f9406919050565b8163ffffffff16600b14156200048a57507f1dc200763555467a4e583e00badfdc1fb4d3d3f8f1cc81f31fd2f8b387776081919050565b8163ffffffff16600c1415620004c157507f203dd11fdba0ed13b20ca2d6952f3feb7461836a03512e0cccce8467b320b2f6919050565b8163ffffffff16600d1415620004f857507f0591af64e64a3e69caf23eee2bdea90885343a49f547ee9464e95d8d6267e4f7919050565b8163ffffffff16600e14156200052f57507f2af572f1077a32f46dc8e307d43c0fa6753b400b2107325976b8df7380545ff6919050565b8163ffffffff16600f14156200056657507f043227ae4b70b1aacd04e35e6aaed7b56d91220c31e97aaf52e12a6a56984e52919050565b8163ffffffff16601014156200059d57507f2976f1f6a91d83d4c528dad69ece6d3d91934b0e5657e915b360c8c4c2fb54e6919050565b8163ffffffff1660111415620005d357507ee5c251c9e093658be0cd1b0df55b6f70f3d09146c1c8b4212a4ddcde700dbc919050565b8163ffffffff16601214156200060a57507f0267cbbc1bc2f1c3e3073d2ee60df8cc0bfef39fe3cee735c9ad5c8ad30064d2919050565b8163ffffffff16601314156200064157507f2f356057bc56f67dbf159a0e8935022acd5e982dce9f4071adc43e4d57ce27e6919050565b8163ffffffff16601414156200067857507f273db68f52f12a9d8022ae524050064e42d4d1661c9bcce958acf89b5e8b127b919050565b8163ffffffff1660151415620006af57507f0496a18ad4cca81b7c98ceb197439ad925e0f7f62d69dfa42cf9574be77fe30f919050565b8163ffffffff1660161415620006e657507f24f89a3f943d421b2f3a554b65459f42b820ac09d6fd9d693df5f8ba732ab596919050565b8163ffffffff16601714156200071d57507f1b55bfd751c6807df36876cdce68034ab43210be2bc8afa8043c7f428604e7a7919050565b8163ffffffff16601814156200075457507f16d6595a398cf20f2489b90e958166f1e19c537c0c46e9b8ea5462391ee8f143919050565b8163ffffffff16601914156200078b57507f0f01447ef8f621592474b678ed2fc404ebaf22a6fce15364bb4152a88c113613919050565b8163ffffffff16601a1415620007c257507f026c2dffee48bacbc9d21cf90aa7c6e525ab01db6966a9e7e53b3d3f4d1f5a4d919050565b8163ffffffff16601b1415620007f957507f234fe90732795745b2c504c791242a2bb193baa1cbeab57db9324b6bb9134817919050565b8163ffffffff16601c14156200083057507f23a8e0a7e60981c52ebb498c260d5bef4d7c65145d17128996a77c33a3262a7e919050565b8163ffffffff16601d14156200086757507f24ee69d2565210c7027ff6fc2657ed029278bc79f41077fe3281ea5d5d8e80f9919050565b8163ffffffff16601e14156200089e57507f1de402fa32463bb2917b733aeef0197a49cacacd1fe860c3acc8cd3b65a30a68919050565b8163ffffffff16601f1415620008d557507f1d3015a0f6a7b3f754171d0540628107e50e25debceb16e0e33ae4205501896d919050565b8163ffffffff16602014156200090c57507f264a260539342647256819046bae05bed903a8d19b3c90439d67317d5d881322919050565b506000919050565b80516001600160a01b03811681146200092c57600080fd5b919050565b805163ffffffff811681146200092c57600080fd5b600080600080600060a086880312156200095f57600080fd5b6200096a8662000931565b94506200097a6020870162000931565b935060408601519250620009916060870162000914565b9150620009a16080870162000914565b90509295509295909350565b600181815b80851115620009ee578160001904821115620009d257620009d262000ac1565b80851615620009e057918102915b93841c9390800290620009b2565b509250929050565b600062000a04838362000a0b565b9392505050565b60008262000a1c5750600162000abb565b8162000a2b5750600062000abb565b816001811462000a44576002811462000a4f5762000a6f565b600191505062000abb565b60ff84111562000a635762000a6362000ac1565b50506001821b62000abb565b5060208310610133831016604e8410600b841016171562000a94575081810a62000abb565b62000aa08383620009ad565b806000190482111562000ab75762000ab762000ac1565b0290505b92915050565b634e487b7160e01b600052601160045260246000fd5b608051613f4162000b0160003960008181610831015281816113cc01526126bc0152613f416000f3fe6080604052600436106102c65760003560e01c80639ae39ca311610179578063c3098df9116100d6578063deeff7cd1161008a578063f6afe88f11610064578063f6afe88f146108ec578063fdab463d146108ff578063ffa89b881461091557600080fd5b8063deeff7cd14610869578063e4ed567114610889578063ed6ea33a146108d257600080fd5b8063c9a6999c116100bb578063c9a6999c146107dd578063c9abeb641461081f578063de1559211461085357600080fd5b8063c3098df91461079b578063c9230c5d146107c857600080fd5b8063ba9bd07d1161012d578063c193553911610112578063c1935539146106e8578063c259e2e614610754578063c2d416011461077457600080fd5b8063ba9bd07d14610693578063bc22be14146106b857600080fd5b80639cc6b3541161015e5780639cc6b3541461063d578063a6232a931461065d578063ac967fad1461067d57600080fd5b80639ae39ca3146105fd5780639b0a6fea1461061d57600080fd5b80634eb069f7116102275780637fa4b09c116101db57806390eeb02b116101c057806390eeb02b146105955780639937e147146105c757806399383f78146105dd57600080fd5b80637fa4b09c14610545578063806ae3621461056557600080fd5b80636afdf0481161020c5780636afdf048146104d55780637013ea96146104f55780637cbf0ff61461052557600080fd5b80634eb069f71461047f578063570ca735146104ae57600080fd5b80632421e1551161027e5780633fae882e116102635780633fae882e146103e45780633fe3347a146103f7578063414a37ba1461043d57600080fd5b80632421e1551461037857806338d52e0f146103a557600080fd5b806306394c9b116102af57806306394c9b1461030d57806314a7737d1461032d578063176de7a81461034d57600080fd5b806302d498f1146102cb57806305335faa146102ed575b600080fd5b3480156102d757600080fd5b506102eb6102e63660046135d8565b610935565b005b3480156102f957600080fd5b506102eb6103083660046135f3565b6109bb565b34801561031957600080fd5b506102eb6103283660046135d8565b610a34565b34801561033957600080fd5b506102eb610348366004613764565b610ad2565b34801561035957600080fd5b5061036261114c565b60405161036f9190613b78565b60405180910390f35b34801561038457600080fd5b5060408051808201909152600481526306c6f6f760e41b6020820152610362565b3480156103b157600080fd5b50600e546103cc90630100000090046001600160a01b031681565b6040516001600160a01b03909116815260200161036f565b6102eb6103f23660046137d8565b6111dd565b34801561040357600080fd5b5060408051808201909152600581527f65726332300000000000000000000000000000000000000000000000000000006020820152610362565b34801561044957600080fd5b506104717f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000181565b60405190815260200161036f565b34801561048b57600080fd5b50600e5461049e90610100900460ff1681565b604051901515815260200161036f565b3480156104ba57600080fd5b50600b546103cc90600160401b90046001600160a01b031681565b3480156104e157600080fd5b506001546103cc906001600160a01b031681565b34801561050157600080fd5b5061049e6105103660046135d8565b600d6020526000908152604090205460ff1681565b34801561053157600080fd5b506102eb610540366004613967565b611cda565b34801561055157600080fd5b506102eb610560366004613a11565b611d8c565b34801561057157600080fd5b5061049e610580366004613967565b60046020526000908152604090205460ff1681565b3480156105a157600080fd5b50600b546105b29063ffffffff1681565b60405163ffffffff909116815260200161036f565b3480156105d357600080fd5b50610471600c5481565b3480156105e957600080fd5b506102eb6105f83660046135f3565b611f13565b34801561060957600080fd5b506102eb6106183660046135f3565b611f83565b34801561062957600080fd5b506102eb610638366004613999565b611ffa565b34801561064957600080fd5b506102eb6106583660046135d8565b61214f565b34801561066957600080fd5b5061049e610678366004613967565b6121cd565b34801561068957600080fd5b5061047160075481565b34801561069f57600080fd5b50600b546105b290640100000000900463ffffffff1681565b3480156106c457600080fd5b5061049e6106d3366004613967565b60056020526000908152604090205460ff1681565b3480156106f457600080fd5b506107356107033660046139e7565b60026020908152600092835260408084209091529082529020546001600160a01b03811690600160a01b900460ff1682565b604080516001600160a01b03909316835290151560208301520161036f565b34801561076057600080fd5b506102eb61076f3660046139e7565b612249565b34801561078057600080fd5b506107896123c4565b60405160ff909116815260200161036f565b3480156107a757600080fd5b506104716107b6366004613999565b60096020526000908152604090205481565b3480156107d457600080fd5b5061036261244c565b3480156107e957600080fd5b506107356107f8366004613999565b6003602052600090815260409020546001600160a01b03811690600160a01b900460ff1682565b34801561082b57600080fd5b506104717f000000000000000000000000000000000000000000000000000000000000000081565b34801561085f57600080fd5b5061047160085481565b34801561087557600080fd5b506102eb6108843660046139b4565b61249c565b34801561089557600080fd5b506108bd6108a4366004613967565b6006602052600090815260409020805460019091015482565b6040805192835260208301919091520161036f565b3480156108de57600080fd5b50600e5461049e9060ff1681565b6102eb6108fa3660046136a4565b612611565b34801561090b57600080fd5b50610471600a5481565b34801561092157600080fd5b50600e5461049e9062010000900460ff1681565b600b54600160401b90046001600160a01b031633146109975760405162461bcd60e51b81526020600482015260256024820152600080516020613eec8339815191526044820152643a34b7b71760d91b60648201526084015b60405180910390fd5b6001600160a01b03166000908152600d60205260409020805460ff19166001179055565b600b54600160401b90046001600160a01b03163314610a185760405162461bcd60e51b81526020600482015260256024820152600080516020613eec8339815191526044820152643a34b7b71760d91b606482015260840161098e565b600e8054911515620100000262ff000019909216919091179055565b600b54600160401b90046001600160a01b03163314610a915760405162461bcd60e51b81526020600482015260256024820152600080516020613eec8339815191526044820152643a34b7b71760d91b606482015260840161098e565b600b80546001600160a01b03909216600160401b027fffffffff0000000000000000000000000000000000000000ffffffffffffffff909216919091179055565b600e5462010000900460ff1680610af85750336000908152600d602052604090205460ff165b610b6a5760405162461bcd60e51b815260206004820152602860248201527f4f6e6c792077686974656c69737465642063616e2063616c6c2074686973206660448201527f756e6374696f6e2e000000000000000000000000000000000000000000000000606482015260840161098e565b610b7781604001516121cd565b15610bc45760405162461bcd60e51b815260206004820152601560248201527f6e6577526f6f74206973206475706c6963617465640000000000000000000000604482015260640161098e565b6000816020015163ffffffff16118015610bea5750600754816020015163ffffffff1611155b8015610c17575060208181015163ffffffff16600090815260039091526040902054600160a01b900460ff165b610c585760405162461bcd60e51b8152602060048201526012602482015271696e76616c696420726f6c6c757053697a6560701b604482015260640161098e565b806020015163ffffffff16600854610c709190613e38565b15610cc95760405162461bcd60e51b815260206004820152602360248201527f696e76616c696420726f6c6c757053697a652061742063757272656e7420737460448201526261746560e81b606482015260840161098e565b6000610cdb6008548360200151612855565b90506000826020015163ffffffff1667ffffffffffffffff811115610d0257610d02613ec7565b604051908082528060200260200182016040528015610d2b578160200160208202803683370190505b506008549091506000905b846020015163ffffffff16600854610d4e9190613d33565b811015610e7857600081815260066020526040902054610db05760405162461bcd60e51b815260206004820152601260248201527f696e646578206f7574206f6620626f756e640000000000000000000000000000604482015260640161098e565b60008181526006602052604090205460085481908590610dd09085613d96565b81518110610de057610de0613eb1565b602002602001018181525050600660008381526020019081526020016000206001015483610e0e9190613d33565b6000838152600660205260408120818155600190810191909155600754919450610e3791613d96565b60075560405181907ffe6b097b46a78e08506a3143b6337c2505ba77df76fe05c3663a987395d6341390600090a25080610e7081613df9565b915050610d36565b5060007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000183604051602001610ead9190613ac6565b6040516020818303038152906040528051906020012060001c610ed09190613e38565b905080856060015114610f255760405162461bcd60e51b815260206004820152601060248201527f696e76616c6964206c6561664861736800000000000000000000000000000000604482015260640161098e565b60408051600480825260a0820190925260009160208201608080368337019050509050600a5481600081518110610f5e57610f5e613eb1565b602002602001018181525050856040015181600181518110610f8257610f82613eb1565b602002602001018181525050856060015181600281518110610fa657610fa6613eb1565b6020026020010181815250508481600381518110610fc657610fc6613eb1565b6020908102919091018101919091528681015163ffffffff16600090815260039091526040808220548851915163c941764760e01b81526001600160a01b039091169163c94176479161101e91908690600401613b8b565b602060405180830381600087803b15801561103857600080fd5b505af115801561104c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110709190613610565b9050806110bf5760405162461bcd60e51b815260206004820152600d60248201527f696e76616c69642070726f6f6600000000000000000000000000000000000000604482015260640161098e565b6110c88461288d565b866020015163ffffffff166008546110e09190613d33565b6008556040870151600a55600b5463ffffffff640100000000820481169161110a91166001613d4b565b6111149190613e4c565b600b805463ffffffff191663ffffffff9290921691821790556040978801516000918252600960205297902096909655505050505050565b6060600e60039054906101000a90046001600160a01b03166001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b15801561119c57600080fd5b505afa1580156111b0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526111d8919081019061362d565b905090565b600260005414156112305760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161098e565b600260008181556040848101515160e08601515163ffffffff808316855260209586528385209082168552909452912054909190600160a01b900460ff166112ba5760405162461bcd60e51b815260206004820152601260248201527f696e76616c696420692f6f206c656e6774680000000000000000000000000000604482015260640161098e565b8163ffffffff16846060015151146113145760405162461bcd60e51b815260206004820152601860248201527f696e76616c696420736967486173686573206c656e6774680000000000000000604482015260640161098e565b8063ffffffff16846101000151511461136f5760405162461bcd60e51b815260206004820152601c60248201527f696e76616c6964206f7574526f6c6c757046656573206c656e67746800000000604482015260640161098e565b8063ffffffff1684610160015151146113ca5760405162461bcd60e51b815260206004820181905260248201527f696e76616c6964206f7574456e637279707465644e6f746573206c656e677468604482015260640161098e565b7f00000000000000000000000000000000000000000000000000000000000000008163ffffffff166007546008546114029190613d33565b61140c9190613d33565b11156114495760405162461bcd60e51b815260206004820152600c60248201526b1d1c9959481a5cc8199d5b1b60a21b604482015260640161098e565b6000611454856128ab565b9050600061146282866129c3565b60808701519091506001600160a01b038216146114c15760405162461bcd60e51b815260206004820152601160248201527f696e76616c6964207369676e6174757265000000000000000000000000000000604482015260640161098e565b60006114ce846002613d6a565b6114d9866002613d6a565b6114e4906004613d4b565b6114ee9190613d4b565b63ffffffff1667ffffffffffffffff81111561150c5761150c613ec7565b604051908082528060200260200182016040528015611535578160200160208202803683370190505b50905061154587602001516121cd565b6115915760405162461bcd60e51b815260206004820152600c60248201527f696e76616c696420726f6f740000000000000000000000000000000000000000604482015260640161098e565b8660200151816000815181106115a9576115a9613eb1565b60200260200101818152505060005b8563ffffffff168163ffffffff16101561171b576005600089604001518363ffffffff16815181106115ec576115ec613eb1565b60209081029190910181015182528101919091526040016000205460ff16156116575760405162461bcd60e51b815260206004820152601760248201527f746865206e6f746520686173206265656e207370656e74000000000000000000604482015260640161098e565b87604001518163ffffffff168151811061167357611673613eb1565b6020026020010151828260016116899190613d4b565b63ffffffff168151811061169f5761169f613eb1565b60200260200101818152505087606001518163ffffffff16815181106116c7576116c7613eb1565b602002602001015182878360016116de9190613d4b565b6116e89190613d4b565b63ffffffff16815181106116fe576116fe613eb1565b60209081029190910101528061171381613e14565b9150506115b8565b5060808701518161172d876002613d6a565b611738906001613d4b565b63ffffffff168151811061174e5761174e613eb1565b602090810291909101015260a08701518161176a876002613d6a565b611775906002613d4b565b63ffffffff168151811061178b5761178b613eb1565b602090810291909101015260c0870151816117a7876002613d6a565b6117b2906003613d4b565b63ffffffff16815181106117c8576117c8613eb1565b60200260200101818152505060005b8463ffffffff168163ffffffff1610156119dd57600460008960e001518363ffffffff168151811061180b5761180b613eb1565b60209081029190910181015182528101919091526040016000205460ff16156118765760405162461bcd60e51b815260206004820152601460248201527f6475706c696361746520636f6d6d69746d656e74000000000000000000000000604482015260640161098e565b600c548861010001518263ffffffff168151811061189657611896613eb1565b602002602001015110156118ec5760405162461bcd60e51b815260206004820152601260248201527f726f6c6c75702066656520746f6f206c6f770000000000000000000000000000604482015260640161098e565b8760e001518163ffffffff168151811061190857611908613eb1565b6020026020010151828288600261191f9190613d6a565b61192a906004613d4b565b6119349190613d4b565b63ffffffff168151811061194a5761194a613eb1565b6020026020010181815250508761010001518163ffffffff168151811061197357611973613eb1565b602002602001015182828789600261198b9190613d6a565b6119959190613d4b565b6119a0906004613d4b565b6119aa9190613d4b565b63ffffffff16815181106119c0576119c0613eb1565b6020908102919091010152806119d581613e14565b9150506117d7565b5063ffffffff80861660009081526002602090815260408083209388168352929052818120548951925163c941764760e01b815291926001600160a01b039091169163c941764791611a33918690600401613b8b565b602060405180830381600087803b158015611a4d57600080fd5b505af1158015611a61573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a859190613610565b905080611ad45760405162461bcd60e51b815260206004820152601660248201527f696e76616c6964207472616e736163742070726f6f6600000000000000000000604482015260640161098e565b60005b8663ffffffff168163ffffffff161015611ba1576001600560008b604001518463ffffffff1681518110611b0d57611b0d613eb1565b6020026020010151815260200190815260200160002060006101000a81548160ff02191690831515021790555088604001518163ffffffff1681518110611b5657611b56613eb1565b602002602001015189602001517f3c2372ab6130817bd6b8fc6dbaecae947e84201b49535d358debaa6c34c23ecf60405160405180910390a380611b9981613e14565b915050611ad7565b5060005b8563ffffffff168163ffffffff161015611c90576001600460008b60e001518463ffffffff1681518110611bdb57611bdb613eb1565b6020026020010151815260200190815260200160002060006101000a81548160ff021916908315150217905550611c7e8960e001518263ffffffff1681518110611c2757611c27613eb1565b60200260200101518a61010001518363ffffffff1681518110611c4c57611c4c613eb1565b60200260200101518b61016001518463ffffffff1681518110611c7157611c71613eb1565b60200260200101516129e7565b80611c8881613e14565b915050611ba5565b5060a088015115611cae57611cae8861012001518960a00151612a82565b60c088015115611ccb57611ccb8861014001518960c00151612a82565b50506001600055505050505050565b600b54600160401b90046001600160a01b03163314611d375760405162461bcd60e51b81526020600482015260256024820152600080516020613eec8339815191526044820152643a34b7b71760d91b606482015260840161098e565b60008111611d875760405162461bcd60e51b815260206004820152601560248201527f696e76616c6964205f6d696e526f6c6c75704665650000000000000000000000604482015260640161098e565b600c55565b600b54600160401b90046001600160a01b03163314611de95760405162461bcd60e51b81526020600482015260256024820152600080516020613eec8339815191526044820152643a34b7b71760d91b606482015260840161098e565b600e54610100900460ff1615611e4d5760405162461bcd60e51b8152602060048201526024808201527f566572696669657220757064617465732068617665206265656e2064697361626044820152633632b21760e11b606482015260840161098e565b60008363ffffffff1611611ea35760405162461bcd60e51b815260206004820152601460248201527f6e756d496e707574732073686f756c64203e2030000000000000000000000000604482015260640161098e565b6040805180820182526001600160a01b0392831681526001602080830191825263ffffffff9687166000908152600282528481209690971687529490945293209251835492511515600160a01b0274ffffffffffffffffffffffffffffffffffffffffff19909316911617179055565b600b54600160401b90046001600160a01b03163314611f705760405162461bcd60e51b81526020600482015260256024820152600080516020613eec8339815191526044820152643a34b7b71760d91b606482015260840161098e565b600e805460ff1916911515919091179055565b600b54600160401b90046001600160a01b03163314611fe05760405162461bcd60e51b81526020600482015260256024820152600080516020613eec8339815191526044820152643a34b7b71760d91b606482015260840161098e565b600e80549115156101000261ff0019909216919091179055565b600b54600160401b90046001600160a01b031633146120575760405162461bcd60e51b81526020600482015260256024820152600080516020613eec8339815191526044820152643a34b7b71760d91b606482015260840161098e565b60008163ffffffff16116120a25760405162461bcd60e51b8152602060048201526012602482015271696e76616c696420726f6c6c757053697a6560701b604482015260640161098e565b600e54610100900460ff16156121065760405162461bcd60e51b8152602060048201526024808201527f566572696669657220757064617465732068617665206265656e2064697361626044820152633632b21760e11b606482015260840161098e565b63ffffffff8116600090815260036020526040902054600160a01b900460ff161561214c5763ffffffff81166000908152600360205260409020805460ff60a01b191690555b50565b600b54600160401b90046001600160a01b031633146121ac5760405162461bcd60e51b81526020600482015260256024820152600080516020613eec8339815191526044820152643a34b7b71760d91b606482015260840161098e565b6001600160a01b03166000908152600d60205260409020805460ff19169055565b600b5460009063ffffffff165b63ffffffff81166000908152600960205260409020548314156122005750600192915050565b63ffffffff811661221e5750600b54640100000000900463ffffffff165b8061222881613dd9565b600b5490925063ffffffff8084169116141590506121da5750600092915050565b600b54600160401b90046001600160a01b031633146122a65760405162461bcd60e51b81526020600482015260256024820152600080516020613eec8339815191526044820152643a34b7b71760d91b606482015260840161098e565b600e54610100900460ff161561230a5760405162461bcd60e51b8152602060048201526024808201527f566572696669657220757064617465732068617665206265656e2064697361626044820152633632b21760e11b606482015260840161098e565b60008263ffffffff16116123605760405162461bcd60e51b815260206004820152601460248201527f6e756d496e707574732073686f756c64203e2030000000000000000000000000604482015260640161098e565b63ffffffff828116600090815260026020908152604080832093851683529290522054600160a01b900460ff16156123c05763ffffffff8083166000908152600260209081526040808320938516835292905220805460ff60a01b191690555b5050565b6000600e60039054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561241457600080fd5b505afa158015612428573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111d89190613a54565b6060600e60039054906101000a90046001600160a01b03166001600160a01b03166306fdde036040518163ffffffff1660e01b815260040160006040518083038186803b15801561119c57600080fd5b600b54600160401b90046001600160a01b031633146124f95760405162461bcd60e51b81526020600482015260256024820152600080516020613eec8339815191526044820152643a34b7b71760d91b606482015260840161098e565b600e54610100900460ff161561255d5760405162461bcd60e51b8152602060048201526024808201527f566572696669657220757064617465732068617665206265656e2064697361626044820152633632b21760e11b606482015260840161098e565b60008263ffffffff16116125a85760405162461bcd60e51b8152602060048201526012602482015271696e76616c696420726f6c6c757053697a6560701b604482015260640161098e565b6040805180820182526001600160a01b0392831681526001602080830191825263ffffffff90951660009081526003909552919093209251835491511515600160a01b0274ffffffffffffffffffffffffffffffffffffffffff19909216921691909117179055565b600e5460ff16156126645760405162461bcd60e51b815260206004820152601560248201527f6465706f73697473206172652064697361626c65640000000000000000000000604482015260640161098e565b600c548160a0015110156126ba5760405162461bcd60e51b815260206004820152601260248201527f726f6c6c75702066656520746f6f206665770000000000000000000000000000604482015260640161098e565b7f00000000000000000000000000000000000000000000000000000000000000006007546008546126eb9190613d33565b106127275760405162461bcd60e51b815260206004820152600c60248201526b1d1c9959481a5cc8199d5b1b60a21b604482015260640161098e565b60208082015160009081526004909152604090205460ff16156127965760405162461bcd60e51b815260206004820152602160248201527f74686520636f6d6d69746d656e7420686173206265656e207375626d697474656044820152601960fa1b606482015260840161098e565b60006127af826040015183600001518460600151612aa0565b9050808260200151146128045760405162461bcd60e51b815260206004820152601960248201527f636f6d6d69746d656e74206861736820696e636f727265637400000000000000604482015260640161098e565b6020808301516000908152600490915260409020805460ff1916600117905560a0820151825161283e9161283791613d33565b6000612c62565b6123c082602001518360a0015184608001516129e7565b60011c637fffffff1660005b63ffffffff82161561288657600183901c925060018263ffffffff16901c9150612861565b5090919050565b600e5461214c90630100000090046001600160a01b03163383612cd0565b6101208101516101408201516040516bffffffffffffffffffffffff19606093841b811660208301529190921b1660348201526000908190604801604051602081830303815290604052905060005b836101600151518163ffffffff16101561296957818461016001518263ffffffff168151811061292c5761292c613eb1565b6020026020010151604051602001612945929190613b18565b6040516020818303038152906040529150808061296190613e14565b9150506128fa565b508051602080830191909120604080517f19457468657265756d205369676e6564204d6573736167653a0a33320000000081850152603c8082019390935281518082039093018352605c01905280519101205b9392505050565b60008060006129d28585612d65565b915091506129df81612dd5565b509392505050565b60408051808201825284815260208082018581526007805460009081526006909352938220925183555160019092019190915560085491549091612a2a91613d33565b90506007546001612a3b9190613d33565b60075560405184907ff533f9705aac5020e21695ea3553ac7b6881070d2b6900ab2b1e3050304b5bf990612a7490869085908790613c27565b60405180910390a250505050565b600e546123c090630100000090046001600160a01b03168383612cd0565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018410612b1d5760405162461bcd60e51b8152602060048201526024808201527f686173684b2073686f756c64206265206c657373207468616e204649454c445f60448201526353495a4560e01b606482015260840161098e565b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018310612bb25760405162461bcd60e51b815260206004820152602660248201527f72616e646f6d532073686f756c64206265206c657373207468616e204649454c60448201527f445f53495a450000000000000000000000000000000000000000000000000000606482015260840161098e565b60015460408051606081018252868152602081018690526fffffffffffffffffffffffffffffffff85168183015290516304b98e1d60e31b81526001600160a01b03909216916325cc70e891612c0a91600401613b47565b60206040518083038186803b158015612c2257600080fd5b505afa158015612c36573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c5a9190613980565b949350505050565b803414612cb15760405162461bcd60e51b815260206004820152601360248201527f62726964676520666565206d69736d6174636800000000000000000000000000604482015260640161098e565b600e546123c090630100000090046001600160a01b0316333085612f90565b6040516001600160a01b038316602482015260448101829052612d6090849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152612fce565b505050565b600080825160411415612d9c5760208301516040840151606085015160001a612d90878285856130b3565b94509450505050612dce565b825160401415612dc65760208301516040840151612dbb8683836131a0565b935093505050612dce565b506000905060025b9250929050565b6000816004811115612de957612de9613e9b565b1415612df25750565b6001816004811115612e0657612e06613e9b565b1415612e545760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161098e565b6002816004811115612e6857612e68613e9b565b1415612eb65760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161098e565b6003816004811115612eca57612eca613e9b565b1415612f235760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b606482015260840161098e565b6004816004811115612f3757612f37613e9b565b141561214c5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b606482015260840161098e565b6040516001600160a01b0380851660248301528316604482015260648101829052612fc89085906323b872dd60e01b90608401612cfc565b50505050565b6000613023826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166131f29092919063ffffffff16565b805190915015612d6057808060200190518101906130419190613610565b612d605760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161098e565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156130ea5750600090506003613197565b8460ff16601b1415801561310257508460ff16601c14155b156131135750600090506004613197565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015613167573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661319057600060019250925050613197565b9150600090505b94509492505050565b6000807f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8316816131d660ff86901c601b613d33565b90506131e4878288856130b3565b935093505050935093915050565b6060612c5a8484600085856001600160a01b0385163b6132545760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161098e565b600080866001600160a01b031685876040516132709190613afc565b60006040518083038185875af1925050503d80600081146132ad576040519150601f19603f3d011682016040523d82523d6000602084013e6132b2565b606091505b50915091506132c28282866132cd565b979650505050505050565b606083156132dc5750816129bc565b8251156132ec5782518084602001fd5b8160405162461bcd60e51b815260040161098e9190613b78565b80356001600160a01b038116811461331d57600080fd5b919050565b600082601f83011261333357600080fd5b8135602061334861334383613ce7565b613cb6565b80838252828201915082860187848660051b890101111561336857600080fd5b6000805b868110156133ab57823567ffffffffffffffff81111561338a578283fd5b6133988b88838d010161347e565b865250938501939185019160010161336c565b509198975050505050505050565b600082601f8301126133ca57600080fd5b6133d2613c46565b8083856040860111156133e457600080fd5b60005b60028110156134065781358452602093840193909101906001016133e7565b509095945050505050565b600082601f83011261342257600080fd5b8135602061343261334383613ce7565b80838252828201915082860187848660051b890101111561345257600080fd5b60005b8581101561347157813584529284019290840190600101613455565b5090979650505050505050565b600082601f83011261348f57600080fd5b813561349d61334382613d0b565b8181528460208386010111156134b257600080fd5b816020850160208301376000918101602001919091529392505050565b6000604082840312156134e157600080fd5b6040516040810181811067ffffffffffffffff8211171561350457613504613ec7565b604052823581526020928301359281019290925250919050565b600081830361010081121561353257600080fd5b6040516060810181811067ffffffffffffffff8211171561355557613555613ec7565b60405291508161356585856134cf565b81526080603f198301121561357957600080fd5b613581613c46565b915061359085604086016133b9565b825261359f85608086016133b9565b60208301528160208201526135b78560c086016134cf565b6040820152505092915050565b803563ffffffff8116811461331d57600080fd5b6000602082840312156135ea57600080fd5b6129bc82613306565b60006020828403121561360557600080fd5b81356129bc81613edd565b60006020828403121561362257600080fd5b81516129bc81613edd565b60006020828403121561363f57600080fd5b815167ffffffffffffffff81111561365657600080fd5b8201601f8101841361366757600080fd5b805161367561334382613d0b565b81815285602083850101111561368a57600080fd5b61369b826020830160208601613dad565b95945050505050565b6000602082840312156136b657600080fd5b813567ffffffffffffffff808211156136ce57600080fd5b9083019060c082860312156136e257600080fd5b6136ea613c6f565b82358152602083013560208201526040830135604082015260608301356fffffffffffffffffffffffffffffffff8116811461372557600080fd5b606082015260808301358281111561373c57600080fd5b6137488782860161347e565b60808301525060a083013560a082015280935050505092915050565b6000610160828403121561377757600080fd5b6040516080810181811067ffffffffffffffff8211171561379a5761379a613ec7565b6040526137a7848461351e565b81526137b661010084016135c4565b6020820152610120830135604082015261014090920135606083015250919050565b600080604083850312156137eb57600080fd5b823567ffffffffffffffff8082111561380357600080fd5b90840190610260828703121561381857600080fd5b613820613c92565b61382a878461351e565b8152610100808401356020830152610120808501358481111561384c57600080fd5b6138588a828801613411565b604085015250610140808601358581111561387257600080fd5b61387e8b828901613411565b60608601525061016080870135608086015261018087013560a08601526101a087013560c08601526101c0870135868111156138b957600080fd5b6138c58c828a01613411565b60e0870152506101e0870135868111156138de57600080fd5b6138ea8c828a01613411565b85870152506138fc6102008801613306565b8386015261390d6102208801613306565b8286015261024087013593508584111561392657600080fd5b6139328b858901613322565b90850152509195505050602085013591508082111561395057600080fd5b5061395d8582860161347e565b9150509250929050565b60006020828403121561397957600080fd5b5035919050565b60006020828403121561399257600080fd5b5051919050565b6000602082840312156139ab57600080fd5b6129bc826135c4565b600080604083850312156139c757600080fd5b6139d0836135c4565b91506139de60208401613306565b90509250929050565b600080604083850312156139fa57600080fd5b613a03836135c4565b91506139de602084016135c4565b600080600060608486031215613a2657600080fd5b613a2f846135c4565b9250613a3d602085016135c4565b9150613a4b60408501613306565b90509250925092565b600060208284031215613a6657600080fd5b815160ff811681146129bc57600080fd5b8060005b6002811015612fc8578151845260209384019390910190600101613a7b565b60008151808452613ab2816020860160208601613dad565b601f01601f19169290920160200192915050565b815160009082906020808601845b83811015613af057815185529382019390820190600101613ad4565b50929695505050505050565b60008251613b0e818460208701613dad565b9190910192915050565b60008351613b2a818460208801613dad565b835190830190613b3e818360208801613dad565b01949350505050565b60608101818360005b6003811015613b6f578151835260209283019290910190600101613b50565b50505092915050565b6020815260006129bc6020830184613a9a565b6000610120808301613ba884875180518252602090810151910152565b602080870151613bbc604087018251613a77565b810151613bcc6080870182613a77565b506040870151805160c08701526020015160e08601526101008501929092528451908190526101408401918581019160005b81811015613c1a57835185529382019392820192600101613bfe565b5092979650505050505050565b83815282602082015260606040820152600061369b6060830184613a9a565b6040805190810167ffffffffffffffff81118282101715613c6957613c69613ec7565b60405290565b60405160c0810167ffffffffffffffff81118282101715613c6957613c69613ec7565b604051610180810167ffffffffffffffff81118282101715613c6957613c69613ec7565b604051601f8201601f1916810167ffffffffffffffff81118282101715613cdf57613cdf613ec7565b604052919050565b600067ffffffffffffffff821115613d0157613d01613ec7565b5060051b60200190565b600067ffffffffffffffff821115613d2557613d25613ec7565b50601f01601f191660200190565b60008219821115613d4657613d46613e6f565b500190565b600063ffffffff808316818516808303821115613b3e57613b3e613e6f565b600063ffffffff80831681851681830481118215151615613d8d57613d8d613e6f565b02949350505050565b600082821015613da857613da8613e6f565b500390565b60005b83811015613dc8578181015183820152602001613db0565b83811115612fc85750506000910152565b600063ffffffff821680613def57613def613e6f565b6000190192915050565b6000600019821415613e0d57613e0d613e6f565b5060010190565b600063ffffffff80831681811415613e2e57613e2e613e6f565b6001019392505050565b600082613e4757613e47613e85565b500690565b600063ffffffff80841680613e6357613e63613e85565b92169190910692915050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b801515811461214c57600080fdfe4f6e6c79206f70657261746f722063616e2063616c6c20746869732066756e63a2646970667358221220e5d2e75f1c262144717bb923b067e17b13380d7472925c9cbfcabdeabc1879d664736f6c63430008070033';

type MystikoV2WithLoopERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MystikoV2WithLoopERC20ConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MystikoV2WithLoopERC20__factory extends ContractFactory {
  constructor(...args: MystikoV2WithLoopERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'MystikoV2WithLoopERC20';
  }

  deploy(
    _treeHeight: BigNumberish,
    _rootHistoryLength: BigNumberish,
    _minRollupFee: BigNumberish,
    _hasher3: string,
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<MystikoV2WithLoopERC20> {
    return super.deploy(
      _treeHeight,
      _rootHistoryLength,
      _minRollupFee,
      _hasher3,
      _token,
      overrides || {},
    ) as Promise<MystikoV2WithLoopERC20>;
  }
  getDeployTransaction(
    _treeHeight: BigNumberish,
    _rootHistoryLength: BigNumberish,
    _minRollupFee: BigNumberish,
    _hasher3: string,
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(
      _treeHeight,
      _rootHistoryLength,
      _minRollupFee,
      _hasher3,
      _token,
      overrides || {},
    );
  }
  attach(address: string): MystikoV2WithLoopERC20 {
    return super.attach(address) as MystikoV2WithLoopERC20;
  }
  connect(signer: Signer): MystikoV2WithLoopERC20__factory {
    return super.connect(signer) as MystikoV2WithLoopERC20__factory;
  }
  static readonly contractName: 'MystikoV2WithLoopERC20';
  public readonly contractName: 'MystikoV2WithLoopERC20';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MystikoV2WithLoopERC20Interface {
    return new utils.Interface(_abi) as MystikoV2WithLoopERC20Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MystikoV2WithLoopERC20 {
    return new Contract(address, _abi, signerOrProvider) as MystikoV2WithLoopERC20;
  }
}
