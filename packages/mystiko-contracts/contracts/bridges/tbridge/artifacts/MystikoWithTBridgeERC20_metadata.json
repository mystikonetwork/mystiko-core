{
	"compiler": {
		"version": "0.6.11+commit.5ef660b1"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_relayProxyAddress",
						"type": "address"
					},
					{
						"internalType": "uint64",
						"name": "_peerChainId",
						"type": "uint64"
					},
					{
						"internalType": "address",
						"name": "_verifier",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_token",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_hasher",
						"type": "address"
					},
					{
						"internalType": "uint32",
						"name": "_merkleTreeHeight",
						"type": "uint32"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "commitmentHash",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "bytes",
						"name": "encryptedNote",
						"type": "bytes"
					}
				],
				"name": "Deposit",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "leaf",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "uint32",
						"name": "leafIndex",
						"type": "uint32"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "MerkleTreeInsert",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "recipient",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "rootHash",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "serialNumber",
						"type": "uint256"
					}
				],
				"name": "Withdraw",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "FIELD_SIZE",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "ROOT_HISTORY_SIZE",
				"outputs": [
					{
						"internalType": "uint32",
						"name": "",
						"type": "uint32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "asset",
				"outputs": [
					{
						"internalType": "contract IERC20Metadata",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "assetDecimals",
				"outputs": [
					{
						"internalType": "uint8",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "assetName",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "assetSymbol",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "assetType",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "bridgeType",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_newOperator",
						"type": "address"
					}
				],
				"name": "changeOperator",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "currentRootIndex",
				"outputs": [
					{
						"internalType": "uint32",
						"name": "",
						"type": "uint32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"internalType": "bytes32",
						"name": "commitmentHash",
						"type": "bytes32"
					},
					{
						"internalType": "bytes32",
						"name": "hashK",
						"type": "bytes32"
					},
					{
						"internalType": "bytes16",
						"name": "randomS",
						"type": "bytes16"
					},
					{
						"internalType": "bytes",
						"name": "encryptedNote",
						"type": "bytes"
					}
				],
				"name": "deposit",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"name": "depositedCommitments",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "disableVerifierUpdate",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "filledSubtrees",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getHasherAddress",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getIsDepositsDisabled",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getLastRoot",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getLevels",
				"outputs": [
					{
						"internalType": "uint32",
						"name": "",
						"type": "uint32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getVerifierAddress",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "contract IHasher",
						"name": "_hasher",
						"type": "address"
					},
					{
						"internalType": "bytes32",
						"name": "_left",
						"type": "bytes32"
					},
					{
						"internalType": "bytes32",
						"name": "_right",
						"type": "bytes32"
					}
				],
				"name": "hashLeftRight",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "hasher",
				"outputs": [
					{
						"internalType": "contract IHasher",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "isDepositsDisabled",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "_root",
						"type": "bytes32"
					}
				],
				"name": "isKnownRoot",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "serialNumber",
						"type": "uint256"
					}
				],
				"name": "isSpent",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "isVerifierUpdateDisabled",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "levels",
				"outputs": [
					{
						"internalType": "uint32",
						"name": "",
						"type": "uint32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "nextIndex",
				"outputs": [
					{
						"internalType": "uint32",
						"name": "",
						"type": "uint32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "operator",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "peerChainId",
				"outputs": [
					{
						"internalType": "uint64",
						"name": "",
						"type": "uint64"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "peerContractAddress",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"name": "relayCommitments",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "relayProxyAddress",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "roots",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_peerContractAddress",
						"type": "address"
					}
				],
				"name": "setPeerContractAddress",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_relayProxyAddress",
						"type": "address"
					}
				],
				"name": "setRelayProxyAddress",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes",
						"name": "txDataBytes",
						"type": "bytes"
					},
					{
						"internalType": "bytes",
						"name": "fromContractAddr",
						"type": "bytes"
					},
					{
						"internalType": "uint64",
						"name": "fromChainId",
						"type": "uint64"
					}
				],
				"name": "syncTx",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bool",
						"name": "_state",
						"type": "bool"
					}
				],
				"name": "toggleDeposits",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_newVerifier",
						"type": "address"
					}
				],
				"name": "updateVerifier",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "verifier",
				"outputs": [
					{
						"internalType": "contract IVerifier",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256[2]",
						"name": "a",
						"type": "uint256[2]"
					},
					{
						"internalType": "uint256[2][2]",
						"name": "b",
						"type": "uint256[2][2]"
					},
					{
						"internalType": "uint256[2]",
						"name": "c",
						"type": "uint256[2]"
					},
					{
						"internalType": "uint256",
						"name": "rootHash",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "serialNumber",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "recipient",
						"type": "address"
					}
				],
				"name": "withdraw",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "withdrewSerialNumbers",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "i",
						"type": "uint256"
					}
				],
				"name": "zeros",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"getLastRoot()": {
					"details": "Returns the last root"
				},
				"hashLeftRight(address,bytes32,bytes32)": {
					"details": "Hash 2 tree leaves, returns Poseidon([_left, _right])"
				},
				"isKnownRoot(bytes32)": {
					"details": "Whether the root is present in the root history"
				},
				"zeros(uint256)": {
					"details": "provides Zero (Empty) elements for a Poseidon MerkleTree. Up to 32 levels"
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/bridges/tbridge/MystikoWithTBridgeERC20.sol": "MystikoWithTBridgeERC20"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/math/SafeMath.sol": {
			"keccak256": "0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52",
			"license": "MIT",
			"urls": [
				"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c",
				"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR"
			]
		},
		"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
			"keccak256": "0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5",
			"license": "MIT",
			"urls": [
				"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08",
				"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC"
			]
		},
		"@openzeppelin/contracts/token/ERC20/SafeERC20.sol": {
			"keccak256": "0xf12dfbe97e6276980b83d2830bb0eb75e0cf4f3e626c2471137f82158ae6a0fc",
			"license": "MIT",
			"urls": [
				"bzz-raw://b3a849c2d95e85463909e5b5c920b13e7a11216ca14127085e16d22b9379d52a",
				"dweb:/ipfs/QmUg3CZDbCCcQdroEpexBy5ZFd5vD1UWijWQq9qHZjtJNQ"
			]
		},
		"@openzeppelin/contracts/utils/Address.sol": {
			"keccak256": "0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea",
			"license": "MIT",
			"urls": [
				"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c",
				"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN"
			]
		},
		"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
			"keccak256": "0x8bbbc2f5c10065ee272592ae0a7a6ceb23de2fbd81564ee0bb015ecf404d5f61",
			"license": "MIT",
			"urls": [
				"bzz-raw://b95e56c1640d0ef789fc5c16269e141e992f6c8ac97cc6d377bd3825e9cab182",
				"dweb:/ipfs/QmVzaxJZY51EhagrcNnkxoU6Uq17RhATe7aHvtkC6wUkgK"
			]
		},
		"contracts/Mystiko.sol": {
			"keccak256": "0xb3b8bfcce9de4582dfd6d7c4e4a0a18d2afe378c2469c7c4e1ad72616f8626a0",
			"license": "MIT",
			"urls": [
				"bzz-raw://e863ddcd3aea702575456dbf0f4549df6eb931c82ed9ff6de99fd29509ab5f54",
				"dweb:/ipfs/QmVxoYaqbHdvTXf8KNgBitYPTxC9FmTm8gm1nAFjE29Lds"
			]
		},
		"contracts/bridges/CrossChainDataSerializable.sol": {
			"keccak256": "0x79b7eac56becaed759add08a397822bb0e0b006086dda9fdaa15b420646dc601",
			"license": "MIT",
			"urls": [
				"bzz-raw://f4985f5fe454fd7349c1c411b447d2afd9d31b23a1ca02d807121466a017543f",
				"dweb:/ipfs/QmSb2TgesTQ3oyekgACiqVWnxXLazkkQYC5KpTsZAGXW7J"
			]
		},
		"contracts/bridges/tbridge/MystikoWithTBridge.sol": {
			"keccak256": "0x0be40e26507f9f3d9e97e6914c1ac6f8950a59312a6f132c7aa6ff7c0cf713d9",
			"license": "MIT",
			"urls": [
				"bzz-raw://b541a2717f97abbd603346fc74241739af8c866e5cd77804152575ea325af02f",
				"dweb:/ipfs/QmcFaazCDWHidr63CrNtgNCqbSqku3Wrpsre9kUx8SonEp"
			]
		},
		"contracts/bridges/tbridge/MystikoWithTBridgeERC20.sol": {
			"keccak256": "0xe46f09fb448de741bbfea0a012a0675d581527085a79febfb2734589fa2cdfe1",
			"license": "MIT",
			"urls": [
				"bzz-raw://099e08ea9f64317faf33b2550c4f24f1526f8137617f4d3569136b5ba5cc7edf",
				"dweb:/ipfs/Qmf6KNEaoEUB1v3xGyFDMxeDgmL1fY5CNSMiRsT7TaCYsU"
			]
		},
		"contracts/bridges/tbridge/relay/interface/IEthCrossChainManager.sol": {
			"keccak256": "0x85ed80510117be196a60bc8237b9b4fbed4ddc80e0cdb592b1b64841dd4cddac",
			"license": "UNLICENSED",
			"urls": [
				"bzz-raw://ab1b7ff7dd4f784fa1f05114117a618cf1cc989a48a90ad026dcbe155fb199de",
				"dweb:/ipfs/QmXuRp7D1FeBiJsqbsGipXynFh8BNjgmu9vkXsETx9HVkd"
			]
		},
		"contracts/bridges/tbridge/relay/interface/IEthCrossChainManagerProxy.sol": {
			"keccak256": "0x7f1ed8e7c58ef7dc682923d943b7d5fa909f8d9c4445573e7518583d6135444b",
			"license": "UNLICENSED",
			"urls": [
				"bzz-raw://7616e1a748656f71a9e7e8b0e568b54c1cf0ac3621a36d21546d69ddde7d2d2c",
				"dweb:/ipfs/QmbLeyH9HojhUBTaTu2zfRSAfgWALeCG84aPbRm9GjL5Rs"
			]
		},
		"contracts/libs/common/ZeroCopySink.sol": {
			"keccak256": "0x065d8261f21a9ed46133240fb1def42122582268a2903a3b1d5e017237b9d018",
			"license": "MIT",
			"urls": [
				"bzz-raw://2dc6cbfd08f2713997493be706de3ef4c56fabcf56c7483849a40821b5db3c68",
				"dweb:/ipfs/QmUmSsAHAsCT5Mw6Ud34ByQHtWhZ59hDNTGVaHipR9daFv"
			]
		},
		"contracts/libs/common/ZeroCopySource.sol": {
			"keccak256": "0x70ae787438a23840c3c8bc23ab4807960d7407af1bb93d003fc91fd96538395b",
			"license": "MIT",
			"urls": [
				"bzz-raw://93df92cf6e1bb15da3c31f4f3637581f40477f40e7e23fea75e426492672ee83",
				"dweb:/ipfs/QmZoi9eTan4JcpWi3Jv5JD7roDZ4azpo4D82EcANNmdjzY"
			]
		},
		"contracts/libs/erc20/IERC20Metadata.sol": {
			"keccak256": "0x283ef1f02ec4051e166b12bd8f8b98f2d90df8a3882c2c0262177e16828a1938",
			"license": "MIT",
			"urls": [
				"bzz-raw://6013abca9d2240d7a6486518191210ba7f6f584e2637b210d8f7a71b6268c85e",
				"dweb:/ipfs/QmXnsS3Dxm95PRV87GDsu5qNJcXEVB2GLuEcpwqbJPPVRa"
			]
		},
		"contracts/libs/utils/Utils.sol": {
			"keccak256": "0xb1517aaf025c39a21ea17233922057bcbe9f49475962ee9cef66e6c504ce034c",
			"license": "MIT",
			"urls": [
				"bzz-raw://1d347f60a7b10fb2f0382027f058f0d757756eede9b8a8825702d86af0cfd3aa",
				"dweb:/ipfs/Qmd4bTs1YoVbo9u8oda76jSisjMXPNSYFsfAv83jT6JP1V"
			]
		},
		"contracts/merkle/MerkleTreeWithHistory.sol": {
			"keccak256": "0xe6ce6192eb3d34e89711a3ae9d9447ec85bb7b49e2846658399aa7c5dcad7fae",
			"license": "MIT",
			"urls": [
				"bzz-raw://6d36440a3ce467ee053d5c698ef4d7dd29de6023deb4e3c9177430a368bbb14e",
				"dweb:/ipfs/QmZ7Yu6HxFPhWeLuFrmrXet7HzAXGg9CfgQsEGPa5v6yKn"
			]
		},
		"contracts/pool/AssetPool.sol": {
			"keccak256": "0xc50f30ecedac1a4901e28c196542b0be7b7c1d201b0c26e36ab447dbe1825be7",
			"license": "MIT",
			"urls": [
				"bzz-raw://e5d949b1786c614f122bd1cf8b7e9af9efabba4fa0d81c519f3986f0358860ff",
				"dweb:/ipfs/QmSquQb1sreoT4qKKpeUeqzt1cUadNte29MHPfSeDexwxP"
			]
		},
		"contracts/pool/ERC20AssetPool.sol": {
			"keccak256": "0xc4f2ffae1f9d59bba61dcddcda4754cafda06dd6c10ddbe949a8e8c6d2eea80a",
			"license": "MIT",
			"urls": [
				"bzz-raw://b189db00b090ff5345396fa8ebc034925283a08597c631e927db311e740ea456",
				"dweb:/ipfs/QmYVGBN2Q7CFjRpLhxLzUym53DZHVoXxV2Jf39Ps1BypVL"
			]
		}
	},
	"version": 1
}