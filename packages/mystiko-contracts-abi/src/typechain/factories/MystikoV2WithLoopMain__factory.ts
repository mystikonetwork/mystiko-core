/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { MystikoV2WithLoopMain, MystikoV2WithLoopMainInterface } from '../MystikoV2WithLoopMain';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_hasher3',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'assetType',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'bridgeType',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_newOperator',
        type: 'address',
      },
    ],
    name: 'changeOperator',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'hashK',
            type: 'uint256',
          },
          {
            internalType: 'uint128',
            name: 'randomS',
            type: 'uint128',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoLoop.DepositRequest',
        name: '_request',
        type: 'tuple',
      },
    ],
    name: 'deposit',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getSanctionsContract',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isDepositsDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isSanctionCheckDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_commitmentPoolAddress',
        type: 'address',
      },
    ],
    name: 'setAssociatedCommitmentPool',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_minAmount',
        type: 'uint256',
      },
    ],
    name: 'setMinAmount',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'toggleDeposits',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_check',
        type: 'bool',
      },
    ],
    name: 'toggleSanctionCheck',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_sanction',
        type: 'address',
      },
    ],
    name: 'updateSanctionContractAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x6080604052600080546001600160a81b0319167340c57923924b5c5c5455c48d93317139addac8fb17905534801561003657600080fd5b50604051610f95380380610f9583398101604081905261005591610088565b600480546001600160a01b03199081163317909155600180546001600160a01b03909316929091169190911790556100b8565b60006020828403121561009a57600080fd5b81516001600160a01b03811681146100b157600080fd5b9392505050565b610ece806100c76000396000f3fe6080604052600436106100d25760003560e01c806399383f781161007f578063cfc7e2da11610059578063cfc7e2da14610238578063e19abef814610256578063ed6ea33a14610276578063f6afe88f1461029557600080fd5b806399383f78146101d0578063b4318ead146101f0578063ce7461021461021057600080fd5b806334c33e83116100b057806334c33e83146101635780633fe3347a14610183578063897b0637146101b057600080fd5b806306394c9b146100d75780632421e155146100f957806330d7803614610138575b600080fd5b3480156100e357600080fd5b506100f76100f2366004610bdf565b6102a8565b005b34801561010557600080fd5b5060408051808201909152600481526306c6f6f760e41b60208201525b60405161012f9190610db2565b60405180910390f35b34801561014457600080fd5b50600054600160a01b900460ff165b604051901515815260200161012f565b34801561016f57600080fd5b506100f761017e366004610bdf565b610327565b34801561018f57600080fd5b5060408051808201909152600481526336b0b4b760e11b6020820152610122565b3480156101bc57600080fd5b506100f76101cb366004610d02565b6103a1565b3480156101dc57600080fd5b506100f76101eb366004610c08565b6103f1565b3480156101fc57600080fd5b506100f761020b366004610c08565b61045a565b34801561021c57600080fd5b506000546040516001600160a01b03909116815260200161012f565b34801561024457600080fd5b5060035460405190815260200161012f565b34801561026257600080fd5b506100f7610271366004610bdf565b6104c3565b34801561028257600080fd5b50600454600160a01b900460ff16610153565b6100f76102a3366004610c42565b61053d565b6004546001600160a01b031633146102f85760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b60448201526064015b60405180910390fd5b6004805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6004546001600160a01b031633146103725760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b60448201526064016102ef565b6000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6004546001600160a01b031633146103ec5760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b60448201526064016102ef565b600355565b6004546001600160a01b0316331461043c5760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b60448201526064016102ef565b60048054911515600160a01b0260ff60a01b19909216919091179055565b6004546001600160a01b031633146104a55760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b60448201526064016102ef565b60008054911515600160a01b0260ff60a01b19909216919091179055565b6004546001600160a01b0316331461050e5760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b60448201526064016102ef565b6002805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b600454600160a01b900460ff16156105975760405162461bcd60e51b815260206004820152601560248201527f6465706f73697473206172652064697361626c6564000000000000000000000060448201526064016102ef565b600354815110156105ea5760405162461bcd60e51b815260206004820152600e60248201527f616d6f756e7420746f6f2066657700000000000000000000000000000000000060448201526064016102ef565b60006106038260400151836000015184606001516106ce565b9050808260200151146106585760405162461bcd60e51b815260206004820152601960248201527f636f6d6d69746d656e74206861736820696e636f72726563740000000000000060448201526064016102ef565b61066133610890565b156106ae5760405162461bcd60e51b815260206004820152601260248201527f73616e6374696f6e65642061646472657373000000000000000000000000000060448201526064016102ef565b6106ca826000015183602001518460a001518560800151610931565b5050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001841061074b5760405162461bcd60e51b8152602060048201526024808201527f686173684b2073686f756c64206265206c657373207468616e204649454c445f60448201526353495a4560e01b60648201526084016102ef565b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000183106107e05760405162461bcd60e51b815260206004820152602660248201527f72616e646f6d532073686f756c64206265206c657373207468616e204649454c60448201527f445f53495a45000000000000000000000000000000000000000000000000000060648201526084016102ef565b60015460408051606081018252868152602081018690526fffffffffffffffffffffffffffffffff85168183015290516304b98e1d60e31b81526001600160a01b03909216916325cc70e89161083891600401610d81565b60206040518083038186803b15801561085057600080fd5b505afa158015610864573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108889190610d1b565b949350505050565b60008054600160a01b900460ff16156108ab57506000919050565b60005460405163df592f7d60e01b81526001600160a01b03848116600483015290911690819063df592f7d9060240160206040518083038186803b1580156108f257600080fd5b505afa158015610906573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092a9190610c25565b9392505050565b600254610952906001600160a01b031661094b8487610e4b565b6000610a51565b6040805160a081018252858152602081018590526000818301819052606082018590526080820184905260025492516378d60cd760e01b815291926001600160a01b0316916378d60cd7916109ac91859190600401610dc5565b602060405180830381600087803b1580156109c657600080fd5b505af11580156109da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109fe9190610c25565b610a4a5760405162461bcd60e51b815260206004820152601260248201527f63616c6c20656e7175657565206572726f72000000000000000000000000000060448201526064016102ef565b5050505050565b610a5b8183610e4b565b3414610aa95760405162461bcd60e51b815260206004820152601260248201527f696e73756666696369656e7420746f6b656e000000000000000000000000000060448201526064016102ef565b6000836001600160a01b03168360405160006040518083038185875af1925050503d8060008114610af6576040519150601f19603f3d011682016040523d82523d6000602084013e610afb565b606091505b5050905080610b4c5760405162461bcd60e51b815260206004820152601660248201527f616d6f756e74207472616e73666572206661696c65640000000000000000000060448201526064016102ef565b50505050565b600082601f830112610b6357600080fd5b813567ffffffffffffffff80821115610b7e57610b7e610e71565b604051601f8301601f19908116603f01168101908282118183101715610ba657610ba6610e71565b81604052838152866020858801011115610bbf57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600060208284031215610bf157600080fd5b81356001600160a01b038116811461092a57600080fd5b600060208284031215610c1a57600080fd5b813561092a81610e87565b600060208284031215610c3757600080fd5b815161092a81610e87565b600060208284031215610c5457600080fd5b813567ffffffffffffffff80821115610c6c57600080fd5b9083019060c08286031215610c8057600080fd5b610c88610e22565b82358152602083013560208201526040830135604082015260608301356fffffffffffffffffffffffffffffffff81168114610cc357600080fd5b6060820152608083013582811115610cda57600080fd5b610ce687828601610b52565b60808301525060a083013560a082015280935050505092915050565b600060208284031215610d1457600080fd5b5035919050565b600060208284031215610d2d57600080fd5b5051919050565b6000815180845260005b81811015610d5a57602081850181015186830182015201610d3e565b81811115610d6c576000602083870101525b50601f01601f19169290920160200192915050565b60608101818360005b6003811015610da9578151835260209283019290910190600101610d8a565b50505092915050565b60208152600061092a6020830184610d34565b60408152825160408201526020830151606082015260408301516080820152606083015160a08201526000608084015160a060c0840152610e0960e0840182610d34565b9150506001600160a01b03831660208301529392505050565b60405160c0810167ffffffffffffffff81118282101715610e4557610e45610e71565b60405290565b60008219821115610e6c57634e487b7160e01b600052601160045260246000fd5b500190565b634e487b7160e01b600052604160045260246000fd5b8015158114610e9557600080fd5b5056fea2646970667358221220d6d705ddfddb56e0dc53899a1b240ea69408a922aacf503694eafcfbdca4624d64736f6c63430008070033';

type MystikoV2WithLoopMainConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MystikoV2WithLoopMainConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MystikoV2WithLoopMain__factory extends ContractFactory {
  constructor(...args: MystikoV2WithLoopMainConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'MystikoV2WithLoopMain';
  }

  deploy(
    _hasher3: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<MystikoV2WithLoopMain> {
    return super.deploy(_hasher3, overrides || {}) as Promise<MystikoV2WithLoopMain>;
  }
  getDeployTransaction(
    _hasher3: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(_hasher3, overrides || {});
  }
  attach(address: string): MystikoV2WithLoopMain {
    return super.attach(address) as MystikoV2WithLoopMain;
  }
  connect(signer: Signer): MystikoV2WithLoopMain__factory {
    return super.connect(signer) as MystikoV2WithLoopMain__factory;
  }
  static readonly contractName: 'MystikoV2WithLoopMain';
  public readonly contractName: 'MystikoV2WithLoopMain';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MystikoV2WithLoopMainInterface {
    return new utils.Interface(_abi) as MystikoV2WithLoopMainInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MystikoV2WithLoopMain {
    return new Contract(address, _abi, signerOrProvider) as MystikoV2WithLoopMain;
  }
}
