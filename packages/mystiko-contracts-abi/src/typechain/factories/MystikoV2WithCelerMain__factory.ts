/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { MystikoV2WithCelerMain, MystikoV2WithCelerMainInterface } from '../MystikoV2WithCelerMain';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_hasher3',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
    ],
    name: 'CommitmentCrossChain',
    type: 'event',
  },
  {
    inputs: [],
    name: 'FIELD_SIZE',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetType',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'associatedCommitmentPool',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'bridgeProxyAddress',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'bridgeType',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_newOperator',
        type: 'address',
      },
    ],
    name: 'changeOperator',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'hashK',
            type: 'uint256',
          },
          {
            internalType: 'uint128',
            name: 'randomS',
            type: 'uint128',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
          {
            internalType: 'uint256',
            name: 'bridgeFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoBridge.DepositRequest',
        name: '_request',
        type: 'tuple',
      },
    ],
    name: 'deposit',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_sender',
        type: 'address',
      },
      {
        internalType: 'uint64',
        name: '_srcChainId',
        type: 'uint64',
      },
      {
        internalType: 'bytes',
        name: '_message',
        type: 'bytes',
      },
      {
        internalType: 'address',
        name: '_executor',
        type: 'address',
      },
    ],
    name: 'executeMessage',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'hasher3',
    outputs: [
      {
        internalType: 'contract IHasher3',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isDepositsDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'minBridgeFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'minExecutorFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'minRollupFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'operator',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'peerChainId',
    outputs: [
      {
        internalType: 'uint64',
        name: '',
        type: 'uint64',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'peerContract',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'peerMinExecutorFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'peerMinRollupFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_commitmentPoolAddress',
        type: 'address',
      },
    ],
    name: 'setAssociatedCommitmentPool',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_bridgeProxyAddress',
        type: 'address',
      },
    ],
    name: 'setBridgeProxyAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_minBridgeFee',
        type: 'uint256',
      },
    ],
    name: 'setMinBridgeFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_minExecutorFee',
        type: 'uint256',
      },
    ],
    name: 'setMinExecutorFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_minRollupFee',
        type: 'uint256',
      },
    ],
    name: 'setMinRollupFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_peerMinExecutorFee',
        type: 'uint256',
      },
    ],
    name: 'setPeerMinExecutorFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_peerMinRollupFee',
        type: 'uint256',
      },
    ],
    name: 'setPeerMinRollupFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint64',
        name: '_peerChainId',
        type: 'uint64',
      },
      {
        internalType: 'address',
        name: '_peerContract',
        type: 'address',
      },
    ],
    name: 'setpeerContract',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'toggleDeposits',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x60806040523480156200001157600080fd5b50604051620025cd380380620025cd833981016040819052620000349162000068565b600980546001600160a01b03199081163317909155600080546001600160a01b03909316929091169190911790556200009a565b6000602082840312156200007b57600080fd5b81516001600160a01b03811681146200009357600080fd5b9392505050565b61252380620000aa6000396000f3fe6080604052600436106101ac5760003560e01c80637cbf0ff6116100ec578063a564ac161161008a578063d1c1a68011610064578063d1c1a680146104f3578063e19abef814610513578063ec18d3e214610533578063ed6ea33a1461055357600080fd5b8063a564ac1614610486578063c0868f2b1461049c578063cdfceeba146104b257600080fd5b80639a03636c116100c65780639a03636c1461041a5780639b215a261461042d5780639c649fdf14610443578063a3bc64f21461046657600080fd5b80637cbf0ff6146103c45780639937e147146103e457806399383f78146103fa57600080fd5b80632cd26d4511610159578063521ff05711610133578063521ff05714610344578063570ca735146103645780635e10b2b7146103845780636afdf048146103a457600080fd5b80632cd26d45146102c35780633fe3347a146102e3578063414a37ba1461031057600080fd5b806319e75d6e1161018a57806319e75d6e1461021c57806321e32d551461023c5780632421e1551461027457600080fd5b806306394c9b146101b157806306462865146101d3578063153dc450146101fc575b600080fd5b3480156101bd57600080fd5b506101d16101cc36600461207e565b610574565b005b3480156101df57600080fd5b506101e960075481565b6040519081526020015b60405180910390f35b34801561020857600080fd5b506101d161021736600461223d565b6105f1565b34801561022857600080fd5b506101d161023736600461223d565b6106a6565b34801561024857600080fd5b5060025461025c906001600160a01b031681565b6040516001600160a01b0390911681526020016101f3565b34801561028057600080fd5b5060408051808201909152600581527f63656c657200000000000000000000000000000000000000000000000000000060208201525b6040516101f391906123d4565b3480156102cf57600080fd5b5060035461025c906001600160a01b031681565b3480156102ef57600080fd5b5060408051808201909152600481526336b0b4b760e11b60208201526102b6565b34801561031c57600080fd5b506101e97f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000181565b34801561035057600080fd5b506101d161035f36600461223d565b610701565b34801561037057600080fd5b5060095461025c906001600160a01b031681565b34801561039057600080fd5b506101d161039f36600461223d565b6107ac565b3480156103b057600080fd5b5060005461025c906001600160a01b031681565b3480156103d057600080fd5b506101d16103df36600461223d565b610857565b3480156103f057600080fd5b506101e960065481565b34801561040657600080fd5b506101d1610415366004612145565b610902565b6101d161042836600461217f565b610991565b34801561043957600080fd5b506101e960085481565b6104566104513660046120a0565b610c6b565b60405190151581526020016101f3565b34801561047257600080fd5b506101d161048136600461207e565b610d24565b34801561049257600080fd5b506101e960055481565b3480156104a857600080fd5b506101e960045481565b3480156104be57600080fd5b506001546104da90600160a01b900467ffffffffffffffff1681565b60405167ffffffffffffffff90911681526020016101f3565b3480156104ff57600080fd5b506101d161050e36600461226f565b610d9c565b34801561051f57600080fd5b506101d161052e36600461207e565b610e56565b34801561053f57600080fd5b5060015461025c906001600160a01b031681565b34801561055f57600080fd5b5060095461045690600160a01b900460ff1681565b6009546001600160a01b031633146105cf5760405162461bcd60e51b815260206004820152602560248201526000805160206124ce8339815191526044820152643a34b7b71760d91b60648201526084015b60405180910390fd5b600980546001600160a01b0319166001600160a01b0392909216919091179055565b6009546001600160a01b031633146106475760405162461bcd60e51b815260206004820152602560248201526000805160206124ce8339815191526044820152643a34b7b71760d91b60648201526084016105c6565b600081116106a15760405162461bcd60e51b815260206004820152602160248201527f696e76616c69642070656572206d696e696d616c206578656375746f722066656044820152606560f81b60648201526084016105c6565b600755565b6009546001600160a01b031633146106fc5760405162461bcd60e51b815260206004820152602560248201526000805160206124ce8339815191526044820152643a34b7b71760d91b60648201526084016105c6565b600455565b6009546001600160a01b031633146107575760405162461bcd60e51b815260206004820152602560248201526000805160206124ce8339815191526044820152643a34b7b71760d91b60648201526084016105c6565b600081116107a75760405162461bcd60e51b815260206004820152601f60248201527f696e76616c69642070656572206d696e696d616c20726f6c6c7570206665650060448201526064016105c6565b600855565b6009546001600160a01b031633146108025760405162461bcd60e51b815260206004820152602560248201526000805160206124ce8339815191526044820152643a34b7b71760d91b60648201526084016105c6565b600081116108525760405162461bcd60e51b815260206004820152601c60248201527f696e76616c6964206d696e696d616c206578656375746f72206665650000000060448201526064016105c6565b600555565b6009546001600160a01b031633146108ad5760405162461bcd60e51b815260206004820152602560248201526000805160206124ce8339815191526044820152643a34b7b71760d91b60648201526084016105c6565b600081116108fd5760405162461bcd60e51b815260206004820152601a60248201527f696e76616c6964206d696e696d616c20726f6c6c75702066656500000000000060448201526064016105c6565b600655565b6009546001600160a01b031633146109585760405162461bcd60e51b815260206004820152602560248201526000805160206124ce8339815191526044820152643a34b7b71760d91b60648201526084016105c6565b60098054911515600160a01b027fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff909216919091179055565b600954600160a01b900460ff16156109eb5760405162461bcd60e51b815260206004820152601560248201527f6465706f73697473206172652064697361626c6564000000000000000000000060448201526064016105c6565b8051610a395760405162461bcd60e51b815260206004820152601f60248201527f616d6f756e742073686f756c642062652067726561746572207468616e20300060448201526064016105c6565b6004548160a001511015610a8f5760405162461bcd60e51b815260206004820152601260248201527f6272696467652066656520746f6f20666577000000000000000000000000000060448201526064016105c6565b6007548160c001511015610ae55760405162461bcd60e51b815260206004820152601460248201527f6578656375746f722066656520746f6f2066657700000000000000000000000060448201526064016105c6565b6008548160e001511015610b3b5760405162461bcd60e51b815260206004820152601260248201527f726f6c6c75702066656520746f6f20666577000000000000000000000000000060448201526064016105c6565b6000610b54826040015183600001518460600151610ece565b905080826020015114610ba95760405162461bcd60e51b815260206004820152601960248201527f636f6d6d69746d656e74206861736820696e636f72726563740000000000000060448201526064016105c6565b60015460e083015160c08401518451610be4936001600160a01b03169291610bd091612454565b610bda9190612454565b8460a00151611090565b6040805160a081018252835181526020808501519082015260c08401519181019190915260e08301516060820152608080840151908201526000610c27826110ed565b9050610c378460a001518261115c565b60208401516040517fd106eb38b3368b7c294e36fae5513fdefe880be5abfad529b37b044f2fdd2dbe90600090a250505050565b6003546000906001600160a01b03163314610cc85760405162461bcd60e51b815260206004820152601e60248201527f6d73672073656e646572206973206e6f74206272696467652070726f7879000060448201526064016105c6565b6000610d0985858080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506111e292505050565b9050610d17868885846112aa565b5060019695505050505050565b6009546001600160a01b03163314610d7a5760405162461bcd60e51b815260206004820152602560248201526000805160206124ce8339815191526044820152643a34b7b71760d91b60648201526084016105c6565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6009546001600160a01b03163314610df25760405162461bcd60e51b815260206004820152602560248201526000805160206124ce8339815191526044820152643a34b7b71760d91b60648201526084016105c6565b6001805467ffffffffffffffff909316600160a01b027fffffffff0000000000000000ffffffffffffffffffffffffffffffffffffffff90931692909217909155600280546001600160a01b039092166001600160a01b0319909216919091179055565b6009546001600160a01b03163314610eac5760405162461bcd60e51b815260206004820152602560248201526000805160206124ce8339815191526044820152643a34b7b71760d91b60648201526084016105c6565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018410610f4b5760405162461bcd60e51b8152602060048201526024808201527f686173684b2073686f756c64206265206c657373207468616e204649454c445f60448201526353495a4560e01b60648201526084016105c6565b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018310610fe05760405162461bcd60e51b815260206004820152602660248201527f72616e646f6d532073686f756c64206265206c657373207468616e204649454c60448201527f445f53495a45000000000000000000000000000000000000000000000000000060648201526084016105c6565b60005460408051606081018252868152602081018690526fffffffffffffffffffffffffffffffff85168183015290516304b98e1d60e31b81526001600160a01b03909216916325cc70e891611038916004016123a3565b60206040518083038186803b15801561105057600080fd5b505afa158015611064573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110889190612256565b949350505050565b61109a8183612454565b34146110e85760405162461bcd60e51b815260206004820152601260248201527f696e73756666696369656e7420746f6b656e000000000000000000000000000060448201526064016105c6565b505050565b6060806110fd8360000151611548565b61110a8460200151611548565b6111178560400151611548565b6111248660600151611548565b61113187608001516115e0565b6040516020016111459594939291906122fd565b60408051601f198184030181529190529392505050565b600354600254600154604051634f9e72ad60e11b81526001600160a01b0393841693639f3ce55a9387936111ac93919092169167ffffffffffffffff600160a01b90910416908790600401612368565b6000604051808303818588803b1580156111c557600080fd5b505af11580156111d9573d6000803e3d6000fd5b50505050505050565b6112146040518060a0016040528060008152602001600081526020016000815260200160008152602001606081525090565b6112466040518060a0016040528060008152602001600081526020016000815260200160008152602001606081525090565b60006112528482611617565b90835290506112618482611617565b602084019190915290506112758482611617565b604084019190915290506112898482611617565b6060840191909152905061129d8482611748565b5060808301525092915050565b6002546001600160a01b038481169116146113075760405162461bcd60e51b815260206004820152601e60248201527f66726f6d2070726f78792061646472657373206e6f74206d617463686564000060448201526064016105c6565b60015467ffffffffffffffff858116600160a01b909204161461136c5760405162461bcd60e51b815260206004820152601960248201527f66726f6d20636861696e206964206e6f74206d6174636865640000000000000060448201526064016105c6565b80516113ba5760405162461bcd60e51b815260206004820152601f60248201527f616d6f756e742073686f756c642062652067726561746572207468616e20300060448201526064016105c6565b600554816040015110156114105760405162461bcd60e51b815260206004820152601460248201527f6578656375746f722066656520746f6f2066657700000000000000000000000060448201526064016105c6565b600654816060015110156114665760405162461bcd60e51b815260206004820152601260248201527f726f6c6c75702066656520746f6f20666577000000000000000000000000000060448201526064016105c6565b600154604051630c987d1360e01b81526001600160a01b0390911690630c987d13906114969084906004016123e7565b602060405180830381600087803b1580156114b057600080fd5b505af11580156114c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114e89190612162565b6115345760405162461bcd60e51b815260206004820152601260248201527f63616c6c20656e7175657565206572726f72000000000000000000000000000060448201526064016105c6565b611542828260400151611855565b50505050565b60606001600160ff1b038211156115a15760405162461bcd60e51b815260206004820152601b60248201527f56616c756520657863656564732075696e743235352072616e6765000000000060448201526064016105c6565b60405160208082526000601f5b828210156115d05785811a8260208601015360019190910190600019016115ae565b5050506040818101905292915050565b80516060906115ee816118f8565b836040516020016116009291906122ce565b604051602081830303815290604052915050919050565b60008083518360206116299190612454565b11158015611640575061163d836020612454565b83105b6116985760405162461bcd60e51b815260206004820152602360248201527f4e65787455696e743235352c206f66667365742065786365656473206d6178696044820152626d756d60e81b60648201526084016105c6565b600060405160206000600182038760208a0101515b838310156116cd5780821a838601536001830192506001820391506116ad565b50505081016040525190506001600160ff1b0381111561172f5760405162461bcd60e51b815260206004820152601760248201527f56616c75652065786365656473207468652072616e676500000000000000000060448201526064016105c6565b8061173b856020612454565b92509250505b9250929050565b606060008061175785856119c7565b86519095509091506117698286612454565b1115801561177f575061177c8185612454565b84105b6117d75760405162461bcd60e51b8152602060048201526024808201527f4e65787456617242797465732c206f66667365742065786365656473206d6178604482015263696d756d60e01b60648201526084016105c6565b6060811580156117f25760405191506020820160405261183c565b6040519150601f8316801560200281840101848101888315602002848c0101015b8183101561182b578051835260209283019201611813565b5050848452601f01601f1916604052505b50806118488387612454565b9350935050509250929050565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146118a2576040519150601f19603f3d011682016040523d82523d6000602084013e6118a7565b606091505b50509050806110e85760405162461bcd60e51b815260206004820152601c60248201527f6578656375746f7220666565207472616e73666572206661696c65640000000060448201526064016105c6565b606060fd8267ffffffffffffffff16101561192d57604080516001815260f884901b6020820152602181019091525b92915050565b61ffff8267ffffffffffffffff161161197d5761194d60fd60f81b611bcd565b61195683611bf4565b6040516020016119679291906122ce565b6040516020818303038152906040529050919050565b63ffffffff8267ffffffffffffffff16116119a85761199f607f60f91b611bcd565b61195683611c37565b6119b96001600160f81b0319611bcd565b61195683611c7a565b919050565b60008060006119d68585611cbd565b94509050600060fd60f81b6001600160f81b031983161415611a6f576119fc8686611d45565b955061ffff16905060fd8110801590611a17575061ffff8111155b611a635760405162461bcd60e51b815260206004820152601f60248201527f4e65787455696e7431362c2076616c7565206f7574736964652072616e67650060448201526064016105c6565b92508391506117419050565b607f60f91b6001600160f81b031983161415611afa57611a8f8686611dfe565b955063ffffffff16905061ffff81118015611aae575063ffffffff8111155b611a635760405162461bcd60e51b815260206004820181905260248201527f4e65787456617255696e742c2076616c7565206f7574736964652072616e676560448201526064016105c6565b6001600160f81b03198083161415611b7757611b168686611ed0565b955067ffffffffffffffff16905063ffffffff8111611a635760405162461bcd60e51b815260206004820181905260248201527f4e65787456617255696e742c2076616c7565206f7574736964652072616e676560448201526064016105c6565b5060f881901c60fd8110611a635760405162461bcd60e51b815260206004820181905260248201527f4e65787456617255696e742c2076616c7565206f7574736964652072616e676560448201526064016105c6565b60408051600181526001600160f81b03198316602082015260218101909152606090611927565b6040516002808252606091906000601f5b82821015611c275785811a826020860101536001919091019060001901611c05565b5050506022810160405292915050565b6040516004808252606091906000601f5b82821015611c6a5785811a826020860101536001919091019060001901611c48565b5050506024810160405292915050565b6040516008808252606091906000601f5b82821015611cad5785811a826020860101536001919091019060001901611c8b565b5050506028810160405292915050565b6000808351836001611ccf9190612454565b11158015611ce65750611ce3836001612454565b83105b611d325760405162461bcd60e51b815260206004820181905260248201527f4e657874427974652c204f66667365742065786365656473206d6178696d756d60448201526064016105c6565b838301602001518061173b856001612454565b6000808351836002611d579190612454565b11158015611d6e5750611d6b836002612454565b83105b611dc55760405162461bcd60e51b815260206004820152602260248201527f4e65787455696e7431362c206f66667365742065786365656473206d6178696d604482015261756d60f01b60648201526084016105c6565b6000604051846020870101518060011a82538060001a60018301535060028101604052601e8103519150508084600261173b9190612454565b6000808351836004611e109190612454565b11158015611e275750611e24836004612454565b83105b611e7e5760405162461bcd60e51b815260206004820152602260248201527f4e65787455696e7433322c206f66667365742065786365656473206d6178696d604482015261756d60f01b60648201526084016105c6565b600060405160046000600182038760208a0101515b83831015611eb35780821a83860153600183019250600182039150611e93565b50505081810160405260200390035190508061173b856004612454565b6000808351836008611ee29190612454565b11158015611ef95750611ef6836008612454565b83105b611f505760405162461bcd60e51b815260206004820152602260248201527f4e65787455696e7436342c206f66667365742065786365656473206d6178696d604482015261756d60f01b60648201526084016105c6565b600060405160086000600182038760208a0101515b83831015611f855780821a83860153600183019250600182039150611f65565b50505081810160405260200390035190508061173b856008612454565b80356001600160a01b03811681146119c257600080fd5b600082601f830112611fca57600080fd5b813567ffffffffffffffff80821115611fe557611fe56124a6565b604051601f8301601f19908116603f0116810190828211818310171561200d5761200d6124a6565b8160405283815286602085880101111561202657600080fd5b836020870160208301376000602085830101528094505050505092915050565b80356fffffffffffffffffffffffffffffffff811681146119c257600080fd5b803567ffffffffffffffff811681146119c257600080fd5b60006020828403121561209057600080fd5b61209982611fa2565b9392505050565b6000806000806000608086880312156120b857600080fd5b6120c186611fa2565b94506120cf60208701612066565b9350604086013567ffffffffffffffff808211156120ec57600080fd5b818801915088601f83011261210057600080fd5b81358181111561210f57600080fd5b89602082850101111561212157600080fd5b60208301955080945050505061213960608701611fa2565b90509295509295909350565b60006020828403121561215757600080fd5b8135612099816124bc565b60006020828403121561217457600080fd5b8151612099816124bc565b60006020828403121561219157600080fd5b813567ffffffffffffffff808211156121a957600080fd5b9083019061010082860312156121be57600080fd5b6121c661242a565b8235815260208301356020820152604083013560408201526121ea60608401612046565b606082015260808301358281111561220157600080fd5b61220d87828601611fb9565b60808301525060a083013560a082015260c083013560c082015260e083013560e082015280935050505092915050565b60006020828403121561224f57600080fd5b5035919050565b60006020828403121561226857600080fd5b5051919050565b6000806040838503121561228257600080fd5b61228b83612066565b915061229960208401611fa2565b90509250929050565b600081518084526122ba81602086016020860161247a565b601f01601f19169290920160200192915050565b600083516122e081846020880161247a565b8351908301906122f481836020880161247a565b01949350505050565b6000865161230f818460208b0161247a565b865190830190612323818360208b0161247a565b8651910190612336818360208a0161247a565b855191019061234981836020890161247a565b845191019061235c81836020880161247a565b01979650505050505050565b6001600160a01b038416815267ffffffffffffffff8316602082015260606040820152600061239a60608301846122a2565b95945050505050565b60608101818360005b60038110156123cb5781518352602092830192909101906001016123ac565b50505092915050565b60208152600061209960208301846122a2565b60208152815160208201526020820151604082015260408201516060820152606082015160808201526000608083015160a08084015261108860c08401826122a2565b604051610100810167ffffffffffffffff8111828210171561244e5761244e6124a6565b60405290565b6000821982111561247557634e487b7160e01b600052601160045260246000fd5b500190565b60005b8381101561249557818101518382015260200161247d565b838111156115425750506000910152565b634e487b7160e01b600052604160045260246000fd5b80151581146124ca57600080fd5b5056fe4f6e6c79206f70657261746f722063616e2063616c6c20746869732066756e63a2646970667358221220d68449193a5ec57aae35ba0f5c72ba5b496abe6bbd2fc32fc05546104a84865564736f6c63430008070033';

type MystikoV2WithCelerMainConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MystikoV2WithCelerMainConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MystikoV2WithCelerMain__factory extends ContractFactory {
  constructor(...args: MystikoV2WithCelerMainConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'MystikoV2WithCelerMain';
  }

  deploy(
    _hasher3: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<MystikoV2WithCelerMain> {
    return super.deploy(_hasher3, overrides || {}) as Promise<MystikoV2WithCelerMain>;
  }
  getDeployTransaction(
    _hasher3: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(_hasher3, overrides || {});
  }
  attach(address: string): MystikoV2WithCelerMain {
    return super.attach(address) as MystikoV2WithCelerMain;
  }
  connect(signer: Signer): MystikoV2WithCelerMain__factory {
    return super.connect(signer) as MystikoV2WithCelerMain__factory;
  }
  static readonly contractName: 'MystikoV2WithCelerMain';
  public readonly contractName: 'MystikoV2WithCelerMain';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MystikoV2WithCelerMainInterface {
    return new utils.Interface(_abi) as MystikoV2WithCelerMainInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MystikoV2WithCelerMain {
    return new Contract(address, _abi, signerOrProvider) as MystikoV2WithCelerMain;
  }
}
