/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  MystikoV2WithTBridgeERC20,
  MystikoV2WithTBridgeERC20Interface,
} from '../MystikoV2WithTBridgeERC20';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_hasher3',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_token',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
    ],
    name: 'CommitmentCrossChain',
    type: 'event',
  },
  {
    inputs: [],
    name: 'FIELD_SIZE',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'asset',
    outputs: [
      {
        internalType: 'contract IERC20Metadata',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetDecimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetName',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetSymbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetType',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'associatedCommitmentPool',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'bridgeProxyAddress',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'bridgeType',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_newOperator',
        type: 'address',
      },
    ],
    name: 'changeOperator',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint64',
        name: '_fromChainId',
        type: 'uint64',
      },
      {
        internalType: 'address',
        name: '_fromContract',
        type: 'address',
      },
      {
        internalType: 'bytes',
        name: '_message',
        type: 'bytes',
      },
      {
        internalType: 'address',
        name: '_executor',
        type: 'address',
      },
    ],
    name: 'crossChainSyncTx',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'hashK',
            type: 'uint256',
          },
          {
            internalType: 'uint128',
            name: 'randomS',
            type: 'uint128',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
          {
            internalType: 'uint256',
            name: 'bridgeFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoBridge.DepositRequest',
        name: '_request',
        type: 'tuple',
      },
    ],
    name: 'deposit',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'hasher3',
    outputs: [
      {
        internalType: 'contract IHasher3',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isDepositsDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'minAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'minBridgeFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'minExecutorFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'operator',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'peerChainId',
    outputs: [
      {
        internalType: 'uint64',
        name: '',
        type: 'uint64',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'peerContract',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'peerMinExecutorFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'peerMinRollupFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sanctionsContract',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_commitmentPoolAddress',
        type: 'address',
      },
    ],
    name: 'setAssociatedCommitmentPool',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_bridgeProxyAddress',
        type: 'address',
      },
    ],
    name: 'setBridgeProxyAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_minAmount',
        type: 'uint256',
      },
    ],
    name: 'setMinAmount',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_minBridgeFee',
        type: 'uint256',
      },
    ],
    name: 'setMinBridgeFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_minExecutorFee',
        type: 'uint256',
      },
    ],
    name: 'setMinExecutorFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint64',
        name: '_peerChainId',
        type: 'uint64',
      },
      {
        internalType: 'address',
        name: '_peerContract',
        type: 'address',
      },
    ],
    name: 'setPeerContract',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_peerMinExecutorFee',
        type: 'uint256',
      },
    ],
    name: 'setPeerMinExecutorFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_peerMinRollupFee',
        type: 'uint256',
      },
    ],
    name: 'setPeerMinRollupFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'toggleDeposits',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_check',
        type: 'bool',
      },
    ],
    name: 'toggleSanctionCheck',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_sanction',
        type: 'address',
      },
    ],
    name: 'updateSanctionContractAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x6080604052600080546001600160a81b0319167340c57923924b5c5c5455c48d93317139addac8fb1790553480156200003757600080fd5b5060405162002d1438038062002d148339810160408190526200005a91620000b4565b600a8054336001600160a01b0319918216179091556001805482166001600160a01b03948516179055600b805490911691909216179055620000ec565b80516001600160a01b0381168114620000af57600080fd5b919050565b60008060408385031215620000c857600080fd5b620000d38362000097565b9150620000e36020840162000097565b90509250929050565b612c1880620000fc6000396000f3fe6080604052600436106102195760003560e01c806382d21cd81161011d578063b4318ead116100b0578063c9230c5d1161007f578063e19abef811610064578063e19abef81461067b578063ec18d3e21461069b578063ed6ea33a146106bb57600080fd5b8063c9230c5d14610625578063cdfceeba1461063a57600080fd5b8063b4318ead146105a8578063babc2044146105c8578063c0868f2b146105e8578063c2d41601146105fe57600080fd5b80639b215a26116100ec5780639b215a26146105465780639b2cb5d81461055c578063a3bc64f214610572578063a564ac161461059257600080fd5b806382d21cd8146104c3578063897b0637146104f357806399383f78146105135780639a03636c1461053357600080fd5b806334c33e83116101b0578063521ff0571161017f578063570ca73511610164578063570ca735146104635780635e10b2b7146104835780636afdf048146104a357600080fd5b8063521ff0571461042357806353af27d51461044357600080fd5b806334c33e831461036957806338d52e0f146103895780633fe3347a146103a9578063414a37ba146103ef57600080fd5b806319e75d6e116101ec57806319e75d6e146102ab57806321e32d55146102cb5780632421e155146103035780632cd26d451461034957600080fd5b806306394c9b1461021e5780630646286514610240578063153dc45014610269578063176de7a814610289575b600080fd5b34801561022a57600080fd5b5061023e61023936600461265a565b6106dc565b005b34801561024c57600080fd5b5061025660085481565b6040519081526020015b60405180910390f35b34801561027557600080fd5b5061023e6102843660046127e4565b610759565b34801561029557600080fd5b5061029e61080e565b6040516102609190612a56565b3480156102b757600080fd5b5061023e6102c63660046127e4565b610894565b3480156102d757600080fd5b506003546102eb906001600160a01b031681565b6040516001600160a01b039091168152602001610260565b34801561030f57600080fd5b5060408051808201909152600781527f7462726964676500000000000000000000000000000000000000000000000000602082015261029e565b34801561035557600080fd5b506004546102eb906001600160a01b031681565b34801561037557600080fd5b5061023e61038436600461265a565b6108ef565b34801561039557600080fd5b50600b546102eb906001600160a01b031681565b3480156103b557600080fd5b5060408051808201909152600581527f6572633230000000000000000000000000000000000000000000000000000000602082015261029e565b3480156103fb57600080fd5b506102567f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000181565b34801561042f57600080fd5b5061023e61043e3660046127e4565b610967565b34801561044f57600080fd5b506000546102eb906001600160a01b031681565b34801561046f57600080fd5b50600a546102eb906001600160a01b031681565b34801561048f57600080fd5b5061023e61049e3660046127e4565b610a12565b3480156104af57600080fd5b506001546102eb906001600160a01b031681565b3480156104cf57600080fd5b506104e36104de366004612849565b610abd565b6040519015158152602001610260565b3480156104ff57600080fd5b5061023e61050e3660046127e4565b610b76565b34801561051f57600080fd5b5061023e61052e366004612675565b610bd1565b61023e610541366004612726565b610c45565b34801561055257600080fd5b5061025660095481565b34801561056857600080fd5b5061025660055481565b34801561057e57600080fd5b5061023e61058d36600461265a565b610f7a565b34801561059e57600080fd5b5061025660075481565b3480156105b457600080fd5b5061023e6105c3366004612675565b610ff2565b3480156105d457600080fd5b5061023e6105e3366004612816565b611066565b3480156105f457600080fd5b5061025660065481565b34801561060a57600080fd5b50610613611120565b60405160ff9091168152602001610260565b34801561063157600080fd5b5061029e61119d565b34801561064657600080fd5b5060025461066290600160a01b900467ffffffffffffffff1681565b60405167ffffffffffffffff9091168152602001610260565b34801561068757600080fd5b5061023e61069636600461265a565b6111e2565b3480156106a757600080fd5b506002546102eb906001600160a01b031681565b3480156106c757600080fd5b50600a546104e390600160a01b900460ff1681565b600a546001600160a01b031633146107375760405162461bcd60e51b81526020600482015260256024820152600080516020612bc38339815191526044820152643a34b7b71760d91b60648201526084015b60405180910390fd5b600a80546001600160a01b0319166001600160a01b0392909216919091179055565b600a546001600160a01b031633146107af5760405162461bcd60e51b81526020600482015260256024820152600080516020612bc38339815191526044820152643a34b7b71760d91b606482015260840161072e565b600081116108095760405162461bcd60e51b815260206004820152602160248201527f696e76616c69642070656572206d696e696d616c206578656375746f722066656044820152606560f81b606482015260840161072e565b600855565b600b54604080516395d89b4160e01b815290516060926001600160a01b0316916395d89b41916004808301926000929190829003018186803b15801561085357600080fd5b505afa158015610867573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261088f91908101906126af565b905090565b600a546001600160a01b031633146108ea5760405162461bcd60e51b81526020600482015260256024820152600080516020612bc38339815191526044820152643a34b7b71760d91b606482015260840161072e565b600655565b600a546001600160a01b031633146109455760405162461bcd60e51b81526020600482015260256024820152600080516020612bc38339815191526044820152643a34b7b71760d91b606482015260840161072e565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b600a546001600160a01b031633146109bd5760405162461bcd60e51b81526020600482015260256024820152600080516020612bc38339815191526044820152643a34b7b71760d91b606482015260840161072e565b60008111610a0d5760405162461bcd60e51b815260206004820152601f60248201527f696e76616c69642070656572206d696e696d616c20726f6c6c75702066656500604482015260640161072e565b600955565b600a546001600160a01b03163314610a685760405162461bcd60e51b81526020600482015260256024820152600080516020612bc38339815191526044820152643a34b7b71760d91b606482015260840161072e565b60008111610ab85760405162461bcd60e51b815260206004820152601c60248201527f696e76616c6964206d696e696d616c206578656375746f722066656500000000604482015260640161072e565b600755565b6004546000906001600160a01b03163314610b1a5760405162461bcd60e51b815260206004820152601e60248201527f6d73672073656e646572206973206e6f74206272696467652070726f78790000604482015260640161072e565b6000610b5b85858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061125a92505050565b9050610b6987878584611322565b5060019695505050505050565b600a546001600160a01b03163314610bcc5760405162461bcd60e51b81526020600482015260256024820152600080516020612bc38339815191526044820152643a34b7b71760d91b606482015260840161072e565b600555565b600a546001600160a01b03163314610c275760405162461bcd60e51b81526020600482015260256024820152600080516020612bc38339815191526044820152643a34b7b71760d91b606482015260840161072e565b600a8054911515600160a01b0260ff60a01b19909216919091179055565b600a54600160a01b900460ff1615610c9f5760405162461bcd60e51b815260206004820152601560248201527f6465706f73697473206172652064697361626c65640000000000000000000000604482015260640161072e565b60055481511015610cf25760405162461bcd60e51b815260206004820152600e60248201527f616d6f756e7420746f6f20666577000000000000000000000000000000000000604482015260640161072e565b6006548160a001511015610d485760405162461bcd60e51b815260206004820152601260248201527f6272696467652066656520746f6f206665770000000000000000000000000000604482015260640161072e565b6008548160c001511015610d9e5760405162461bcd60e51b815260206004820152601460248201527f6578656375746f722066656520746f6f20666577000000000000000000000000604482015260640161072e565b6009548160e001511015610df45760405162461bcd60e51b815260206004820152601260248201527f726f6c6c75702066656520746f6f206665770000000000000000000000000000604482015260640161072e565b6000610e0d82604001518360000151846060015161155e565b905080826020015114610e625760405162461bcd60e51b815260206004820152601960248201527f636f6d6d69746d656e74206861736820696e636f727265637400000000000000604482015260640161072e565b610e6b33611722565b15610eb85760405162461bcd60e51b815260206004820152601260248201527f73616e6374696f6e656420616464726573730000000000000000000000000000604482015260640161072e565b60025460e083015160c08401518451610ef3936001600160a01b03169291610edf91612b49565b610ee99190612b49565b8460a001516117bc565b6040805160a081018252835181526020808501519082015260c08401519181019190915260e08301516060820152608080840151908201526000610f3682611828565b9050610f468460a0015182611897565b60208401516040517fd106eb38b3368b7c294e36fae5513fdefe880be5abfad529b37b044f2fdd2dbe90600090a250505050565b600a546001600160a01b03163314610fd05760405162461bcd60e51b81526020600482015260256024820152600080516020612bc38339815191526044820152643a34b7b71760d91b606482015260840161072e565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b600a546001600160a01b031633146110485760405162461bcd60e51b81526020600482015260256024820152600080516020612bc38339815191526044820152643a34b7b71760d91b606482015260840161072e565b60008054911515600160a01b0260ff60a01b19909216919091179055565b600a546001600160a01b031633146110bc5760405162461bcd60e51b81526020600482015260256024820152600080516020612bc38339815191526044820152643a34b7b71760d91b606482015260840161072e565b6002805467ffffffffffffffff909316600160a01b027fffffffff0000000000000000ffffffffffffffffffffffffffffffffffffffff90931692909217909155600380546001600160a01b039092166001600160a01b0319909216919091179055565b600b546040805163313ce56760e01b815290516000926001600160a01b03169163313ce567916004808301926020929190829003018186803b15801561116557600080fd5b505afa158015611179573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061088f91906128ee565b600b54604080516306fdde0360e01b815290516060926001600160a01b0316916306fdde03916004808301926000929190829003018186803b15801561085357600080fd5b600a546001600160a01b031633146112385760405162461bcd60e51b81526020600482015260256024820152600080516020612bc38339815191526044820152643a34b7b71760d91b606482015260840161072e565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b61128c6040518060a0016040528060008152602001600081526020016000815260200160008152602001606081525090565b6112be6040518060a0016040528060008152602001600081526020016000815260200160008152602001606081525090565b60006112ca848261191a565b90835290506112d9848261191a565b602084019190915290506112ed848261191a565b60408401919091529050611301848261191a565b606084019190915290506113158482611a4b565b5060808301525092915050565b6003546001600160a01b0384811691161461137f5760405162461bcd60e51b815260206004820152601e60248201527f66726f6d2070726f78792061646472657373206e6f74206d6174636865640000604482015260640161072e565b60025467ffffffffffffffff858116600160a01b90920416146113e45760405162461bcd60e51b815260206004820152601960248201527f66726f6d20636861696e206964206e6f74206d61746368656400000000000000604482015260640161072e565b80516114325760405162461bcd60e51b815260206004820152601f60248201527f616d6f756e742073686f756c642062652067726561746572207468616e203000604482015260640161072e565b600754816040015110156114885760405162461bcd60e51b815260206004820152601460248201527f6578656375746f722066656520746f6f20666577000000000000000000000000604482015260640161072e565b6002546040516378d60cd760e01b81526001600160a01b03909116906378d60cd7906114ba9084908690600401612a69565b602060405180830381600087803b1580156114d457600080fd5b505af11580156114e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061150c9190612692565b6115585760405162461bcd60e51b815260206004820152601260248201527f63616c6c20656e7175657565206572726f720000000000000000000000000000604482015260640161072e565b50505050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000184106115db5760405162461bcd60e51b8152602060048201526024808201527f686173684b2073686f756c64206265206c657373207468616e204649454c445f60448201526353495a4560e01b606482015260840161072e565b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000183106116705760405162461bcd60e51b815260206004820152602660248201527f72616e646f6d532073686f756c64206265206c657373207468616e204649454c60448201527f445f53495a450000000000000000000000000000000000000000000000000000606482015260840161072e565b60015460408051606081018252868152602081018690526fffffffffffffffffffffffffffffffff85168183015290516304b98e1d60e31b81526001600160a01b03909216916325cc70e8916116c891600401612a25565b60206040518083038186803b1580156116e057600080fd5b505afa1580156116f4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061171891906127fd565b90505b9392505050565b60008054600160a01b900460ff161561173d57506000919050565b60005460405163df592f7d60e01b81526001600160a01b03848116600483015290911690819063df592f7d9060240160206040518083038186803b15801561178457600080fd5b505afa158015611798573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061171b9190612692565b80341461180b5760405162461bcd60e51b815260206004820152601360248201527f62726964676520666565206d69736d6174636800000000000000000000000000604482015260640161072e565b600b54611823906001600160a01b0316338585611b58565b505050565b6060806118388360000151611bc7565b6118458460200151611bc7565b6118528560400151611bc7565b61185f8660600151611bc7565b61186c8760800151611c5f565b604051602001611880959493929190612988565b60408051601f198184030181529190529392505050565b6004805460035460025460405163c81739cd60e01b81526001600160a01b039384169463c81739cd9488946118e494911692600160a01b90910467ffffffffffffffff16918891016129f3565b6000604051808303818588803b1580156118fd57600080fd5b505af1158015611911573d6000803e3d6000fd5b50505050505050565b600080835183602061192c9190612b49565b111580156119435750611940836020612b49565b83105b61199b5760405162461bcd60e51b815260206004820152602360248201527f4e65787455696e743235352c206f66667365742065786365656473206d6178696044820152626d756d60e81b606482015260840161072e565b600060405160206000600182038760208a0101515b838310156119d05780821a838601536001830192506001820391506119b0565b50505081016040525190506001600160ff1b03811115611a325760405162461bcd60e51b815260206004820152601760248201527f56616c75652065786365656473207468652072616e6765000000000000000000604482015260640161072e565b80611a3e856020612b49565b92509250505b9250929050565b6060600080611a5a8585611c96565b8651909550909150611a6c8286612b49565b11158015611a825750611a7f8185612b49565b84105b611ada5760405162461bcd60e51b8152602060048201526024808201527f4e65787456617242797465732c206f66667365742065786365656473206d6178604482015263696d756d60e01b606482015260840161072e565b606081158015611af557604051915060208201604052611b3f565b6040519150601f8316801560200281840101848101888315602002848c0101015b81831015611b2e578051835260209283019201611b16565b5050848452601f01601f1916604052505b5080611b4b8387612b49565b9350935050509250929050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b179052611558908590611e9c565b60606001600160ff1b03821115611c205760405162461bcd60e51b815260206004820152601b60248201527f56616c756520657863656564732075696e743235352072616e67650000000000604482015260640161072e565b60405160208082526000601f5b82821015611c4f5785811a826020860101536001919091019060001901611c2d565b5050506040818101905292915050565b8051606090611c6d81611f81565b83604051602001611c7f929190612959565b604051602081830303815290604052915050919050565b6000806000611ca58585612050565b94509050600060fd60f81b6001600160f81b031983161415611d3e57611ccb86866120d8565b955061ffff16905060fd8110801590611ce6575061ffff8111155b611d325760405162461bcd60e51b815260206004820152601f60248201527f4e65787455696e7431362c2076616c7565206f7574736964652072616e676500604482015260640161072e565b9250839150611a449050565b607f60f91b6001600160f81b031983161415611dc957611d5e8686612191565b955063ffffffff16905061ffff81118015611d7d575063ffffffff8111155b611d325760405162461bcd60e51b815260206004820181905260248201527f4e65787456617255696e742c2076616c7565206f7574736964652072616e6765604482015260640161072e565b6001600160f81b03198083161415611e4657611de58686612263565b955067ffffffffffffffff16905063ffffffff8111611d325760405162461bcd60e51b815260206004820181905260248201527f4e65787456617255696e742c2076616c7565206f7574736964652072616e6765604482015260640161072e565b5060f881901c60fd8110611d325760405162461bcd60e51b815260206004820181905260248201527f4e65787456617255696e742c2076616c7565206f7574736964652072616e6765604482015260640161072e565b6000611ef1826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166123359092919063ffffffff16565b8051909150156118235780806020019051810190611f0f9190612692565b6118235760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161072e565b606060fd8267ffffffffffffffff161015611fb657604080516001815260f884901b6020820152602181019091525b92915050565b61ffff8267ffffffffffffffff161161200657611fd660fd60f81b612344565b611fdf8361236b565b604051602001611ff0929190612959565b6040516020818303038152906040529050919050565b63ffffffff8267ffffffffffffffff161161203157612028607f60f91b612344565b611fdf836123ae565b6120426001600160f81b0319612344565b611fdf836123f1565b919050565b60008083518360016120629190612b49565b111580156120795750612076836001612b49565b83105b6120c55760405162461bcd60e51b815260206004820181905260248201527f4e657874427974652c204f66667365742065786365656473206d6178696d756d604482015260640161072e565b8383016020015180611a3e856001612b49565b60008083518360026120ea9190612b49565b1115801561210157506120fe836002612b49565b83105b6121585760405162461bcd60e51b815260206004820152602260248201527f4e65787455696e7431362c206f66667365742065786365656473206d6178696d604482015261756d60f01b606482015260840161072e565b6000604051846020870101518060011a82538060001a60018301535060028101604052601e81035191505080846002611a3e9190612b49565b60008083518360046121a39190612b49565b111580156121ba57506121b7836004612b49565b83105b6122115760405162461bcd60e51b815260206004820152602260248201527f4e65787455696e7433322c206f66667365742065786365656473206d6178696d604482015261756d60f01b606482015260840161072e565b600060405160046000600182038760208a0101515b838310156122465780821a83860153600183019250600182039150612226565b505050818101604052602003900351905080611a3e856004612b49565b60008083518360086122759190612b49565b1115801561228c5750612289836008612b49565b83105b6122e35760405162461bcd60e51b815260206004820152602260248201527f4e65787455696e7436342c206f66667365742065786365656473206d6178696d604482015261756d60f01b606482015260840161072e565b600060405160086000600182038760208a0101515b838310156123185780821a838601536001830192506001820391506122f8565b505050818101604052602003900351905080611a3e856008612b49565b60606117188484600085612434565b60408051600181526001600160f81b03198316602082015260218101909152606090611fb0565b6040516002808252606091906000601f5b8282101561239e5785811a82602086010153600191909101906000190161237c565b5050506022810160405292915050565b6040516004808252606091906000601f5b828210156123e15785811a8260208601015360019190910190600019016123bf565b5050506024810160405292915050565b6040516008808252606091906000601f5b828210156124245785811a826020860101536001919091019060001901612402565b5050506028810160405292915050565b6060824710156124ac5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161072e565b6001600160a01b0385163b6125035760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161072e565b600080866001600160a01b0316858760405161251f919061293d565b60006040518083038185875af1925050503d806000811461255c576040519150601f19603f3d011682016040523d82523d6000602084013e612561565b606091505b509150915061257182828661257c565b979650505050505050565b6060831561258b57508161171b565b82511561259b5782518084602001fd5b8160405162461bcd60e51b815260040161072e9190612a56565b80356001600160a01b038116811461204b57600080fd5b600082601f8301126125dd57600080fd5b81356125f06125eb82612b21565b612af0565b81815284602083860101111561260557600080fd5b816020850160208301376000918101602001919091529392505050565b80356fffffffffffffffffffffffffffffffff8116811461204b57600080fd5b803567ffffffffffffffff8116811461204b57600080fd5b60006020828403121561266c57600080fd5b61171b826125b5565b60006020828403121561268757600080fd5b813561171b81612bb1565b6000602082840312156126a457600080fd5b815161171b81612bb1565b6000602082840312156126c157600080fd5b815167ffffffffffffffff8111156126d857600080fd5b8201601f810184136126e957600080fd5b80516126f76125eb82612b21565b81815285602083850101111561270c57600080fd5b61271d826020830160208601612b6f565b95945050505050565b60006020828403121561273857600080fd5b813567ffffffffffffffff8082111561275057600080fd5b90830190610100828603121561276557600080fd5b61276d612ac6565b82358152602083013560208201526040830135604082015261279160608401612622565b60608201526080830135828111156127a857600080fd5b6127b4878286016125cc565b60808301525060a083013560a082015260c083013560c082015260e083013560e082015280935050505092915050565b6000602082840312156127f657600080fd5b5035919050565b60006020828403121561280f57600080fd5b5051919050565b6000806040838503121561282957600080fd5b61283283612642565b9150612840602084016125b5565b90509250929050565b60008060008060006080868803121561286157600080fd5b61286a86612642565b9450612878602087016125b5565b9350604086013567ffffffffffffffff8082111561289557600080fd5b818801915088601f8301126128a957600080fd5b8135818111156128b857600080fd5b8960208285010111156128ca57600080fd5b6020830195508094505050506128e2606087016125b5565b90509295509295909350565b60006020828403121561290057600080fd5b815160ff8116811461171b57600080fd5b60008151808452612929816020860160208601612b6f565b601f01601f19169290920160200192915050565b6000825161294f818460208701612b6f565b9190910192915050565b6000835161296b818460208801612b6f565b83519083019061297f818360208801612b6f565b01949350505050565b6000865161299a818460208b01612b6f565b8651908301906129ae818360208b01612b6f565b86519101906129c1818360208a01612b6f565b85519101906129d4818360208901612b6f565b84519101906129e7818360208801612b6f565b01979650505050505050565b6001600160a01b038416815267ffffffffffffffff8316602082015260606040820152600061271d6060830184612911565b60608101818360005b6003811015612a4d578151835260209283019290910190600101612a2e565b50505092915050565b60208152600061171b6020830184612911565b60408152825160408201526020830151606082015260408301516080820152606083015160a08201526000608084015160a060c0840152612aad60e0840182612911565b9150506001600160a01b03831660208301529392505050565b604051610100810167ffffffffffffffff81118282101715612aea57612aea612b9b565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715612b1957612b19612b9b565b604052919050565b600067ffffffffffffffff821115612b3b57612b3b612b9b565b50601f01601f191660200190565b60008219821115612b6a57634e487b7160e01b600052601160045260246000fd5b500190565b60005b83811015612b8a578181015183820152602001612b72565b838111156115585750506000910152565b634e487b7160e01b600052604160045260246000fd5b8015158114612bbf57600080fd5b5056fe4f6e6c79206f70657261746f722063616e2063616c6c20746869732066756e63a2646970667358221220f5ea135415abb9758f6d18141790341c2bebd8910adac55a036183bb3bfe8b3864736f6c63430008070033';

type MystikoV2WithTBridgeERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MystikoV2WithTBridgeERC20ConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MystikoV2WithTBridgeERC20__factory extends ContractFactory {
  constructor(...args: MystikoV2WithTBridgeERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'MystikoV2WithTBridgeERC20';
  }

  deploy(
    _hasher3: string,
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<MystikoV2WithTBridgeERC20> {
    return super.deploy(_hasher3, _token, overrides || {}) as Promise<MystikoV2WithTBridgeERC20>;
  }
  getDeployTransaction(
    _hasher3: string,
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(_hasher3, _token, overrides || {});
  }
  attach(address: string): MystikoV2WithTBridgeERC20 {
    return super.attach(address) as MystikoV2WithTBridgeERC20;
  }
  connect(signer: Signer): MystikoV2WithTBridgeERC20__factory {
    return super.connect(signer) as MystikoV2WithTBridgeERC20__factory;
  }
  static readonly contractName: 'MystikoV2WithTBridgeERC20';
  public readonly contractName: 'MystikoV2WithTBridgeERC20';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MystikoV2WithTBridgeERC20Interface {
    return new utils.Interface(_abi) as MystikoV2WithTBridgeERC20Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MystikoV2WithTBridgeERC20 {
    return new Contract(address, _abi, signerOrProvider) as MystikoV2WithTBridgeERC20;
  }
}
