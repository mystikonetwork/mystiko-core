/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { MystikoV2WithLoopMain, MystikoV2WithLoopMainInterface } from '../MystikoV2WithLoopMain';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_hasher3',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'FIELD_SIZE',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetType',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'associatedCommitmentPool',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'bridgeType',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_newOperator',
        type: 'address',
      },
    ],
    name: 'changeOperator',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'hashK',
            type: 'uint256',
          },
          {
            internalType: 'uint128',
            name: 'randomS',
            type: 'uint128',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoLoop.DepositRequest',
        name: '_request',
        type: 'tuple',
      },
    ],
    name: 'deposit',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'hasher3',
    outputs: [
      {
        internalType: 'contract IHasher3',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isDepositsDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'minRollupFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'operator',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_commitmentPoolAddress',
        type: 'address',
      },
    ],
    name: 'setAssociatedCommitmentPool',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_minRollupFee',
        type: 'uint256',
      },
    ],
    name: 'setMinRollupFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'toggleDeposits',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b50604051610e3e380380610e3e83398101604081905261002f91610062565b600380546001600160a01b03199081163317909155600080546001600160a01b0390931692909116919091179055610092565b60006020828403121561007457600080fd5b81516001600160a01b038116811461008b57600080fd5b9392505050565b610d9d806100a16000396000f3fe6080604052600436106100d25760003560e01c80637cbf0ff61161007f578063e19abef811610059578063e19abef814610255578063ec18d3e214610275578063ed6ea33a14610295578063f6afe88f146102c657600080fd5b80637cbf0ff6146101ff5780639937e1471461021f57806399383f781461023557600080fd5b8063414a37ba116100b0578063414a37ba14610165578063570ca735146101a75780636afdf048146101df57600080fd5b806306394c9b146100d75780632421e155146100f95780633fe3347a14610138575b600080fd5b3480156100e357600080fd5b506100f76100f2366004610ac1565b6102d9565b005b34801561010557600080fd5b5060408051808201909152600481526306c6f6f760e41b60208201525b60405161012f9190610c9b565b60405180910390f35b34801561014457600080fd5b5060408051808201909152600481526336b0b4b760e11b6020820152610122565b34801561017157600080fd5b506101997f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000181565b60405190815260200161012f565b3480156101b357600080fd5b506003546101c7906001600160a01b031681565b6040516001600160a01b03909116815260200161012f565b3480156101eb57600080fd5b506000546101c7906001600160a01b031681565b34801561020b57600080fd5b506100f761021a366004610beb565b610375565b34801561022b57600080fd5b5061019960025481565b34801561024157600080fd5b506100f7610250366004610af1565b610432565b34801561026157600080fd5b506100f7610270366004610ac1565b6104d3565b34801561028157600080fd5b506001546101c7906001600160a01b031681565b3480156102a157600080fd5b506003546102b690600160a01b900460ff1681565b604051901515815260200161012f565b6100f76102d4366004610b2b565b61056a565b6003546001600160a01b031633146103465760405162461bcd60e51b815260206004820152602560248201527f4f6e6c79206f70657261746f722063616e2063616c6c20746869732066756e636044820152643a34b7b71760d91b60648201526084015b60405180910390fd5b6003805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6003546001600160a01b031633146103dd5760405162461bcd60e51b815260206004820152602560248201527f4f6e6c79206f70657261746f722063616e2063616c6c20746869732066756e636044820152643a34b7b71760d91b606482015260840161033d565b6000811161042d5760405162461bcd60e51b815260206004820152601a60248201527f696e76616c6964206d696e696d616c20726f6c6c757020666565000000000000604482015260640161033d565b600255565b6003546001600160a01b0316331461049a5760405162461bcd60e51b815260206004820152602560248201527f4f6e6c79206f70657261746f722063616e2063616c6c20746869732066756e636044820152643a34b7b71760d91b606482015260840161033d565b60038054911515600160a01b027fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff909216919091179055565b6003546001600160a01b0316331461053b5760405162461bcd60e51b815260206004820152602560248201527f4f6e6c79206f70657261746f722063616e2063616c6c20746869732066756e636044820152643a34b7b71760d91b606482015260840161033d565b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b600354600160a01b900460ff16156105c45760405162461bcd60e51b815260206004820152601560248201527f6465706f73697473206172652064697361626c65640000000000000000000000604482015260640161033d565b80516106125760405162461bcd60e51b815260206004820152601f60248201527f616d6f756e742073686f756c642062652067726561746572207468616e203000604482015260640161033d565b6002548160a0015110156106685760405162461bcd60e51b815260206004820152601260248201527f726f6c6c75702066656520746f6f206665770000000000000000000000000000604482015260640161033d565b60006106818260400151836000015184606001516106f6565b9050808260200151146106d65760405162461bcd60e51b815260206004820152601960248201527f636f6d6d69746d656e74206861736820696e636f727265637400000000000000604482015260640161033d565b6106f2826000015183602001518460a0015185608001516108b8565b5050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000184106107735760405162461bcd60e51b8152602060048201526024808201527f686173684b2073686f756c64206265206c657373207468616e204649454c445f60448201526353495a4560e01b606482015260840161033d565b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000183106108085760405162461bcd60e51b815260206004820152602660248201527f72616e646f6d532073686f756c64206265206c657373207468616e204649454c60448201527f445f53495a450000000000000000000000000000000000000000000000000000606482015260840161033d565b60005460408051606081018252868152602081018690526fffffffffffffffffffffffffffffffff85168183015290516304b98e1d60e31b81526001600160a01b03909216916325cc70e89161086091600401610c6a565b60206040518083038186803b15801561087857600080fd5b505afa15801561088c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b09190610c04565b949350505050565b6001546108d9906001600160a01b03166108d28487610d1a565b60006109d7565b6040805160a0810182528581526020810185905260008183015260608101849052608081018390526001549151630c987d1360e01b815290916001600160a01b031690630c987d13903490610932908590600401610cae565b6020604051808303818588803b15801561094b57600080fd5b505af115801561095f573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906109849190610b0e565b6109d05760405162461bcd60e51b815260206004820152601260248201527f63616c6c20656e7175657565206572726f720000000000000000000000000000604482015260640161033d565b5050505050565b6109e18183610d1a565b3414610a2f5760405162461bcd60e51b815260206004820152601260248201527f696e73756666696369656e7420746f6b656e0000000000000000000000000000604482015260640161033d565b505050565b600082601f830112610a4557600080fd5b813567ffffffffffffffff80821115610a6057610a60610d40565b604051601f8301601f19908116603f01168101908282118183101715610a8857610a88610d40565b81604052838152866020858801011115610aa157600080fd5b836020870160208301376000602085830101528094505050505092915050565b600060208284031215610ad357600080fd5b81356001600160a01b0381168114610aea57600080fd5b9392505050565b600060208284031215610b0357600080fd5b8135610aea81610d56565b600060208284031215610b2057600080fd5b8151610aea81610d56565b600060208284031215610b3d57600080fd5b813567ffffffffffffffff80821115610b5557600080fd5b9083019060c08286031215610b6957600080fd5b610b71610cf1565b82358152602083013560208201526040830135604082015260608301356fffffffffffffffffffffffffffffffff81168114610bac57600080fd5b6060820152608083013582811115610bc357600080fd5b610bcf87828601610a34565b60808301525060a083013560a082015280935050505092915050565b600060208284031215610bfd57600080fd5b5035919050565b600060208284031215610c1657600080fd5b5051919050565b6000815180845260005b81811015610c4357602081850181015186830182015201610c27565b81811115610c55576000602083870101525b50601f01601f19169290920160200192915050565b60608101818360005b6003811015610c92578151835260209283019290910190600101610c73565b50505092915050565b602081526000610aea6020830184610c1d565b60208152815160208201526020820151604082015260408201516060820152606082015160808201526000608083015160a0808401526108b060c0840182610c1d565b60405160c0810167ffffffffffffffff81118282101715610d1457610d14610d40565b60405290565b60008219821115610d3b57634e487b7160e01b600052601160045260246000fd5b500190565b634e487b7160e01b600052604160045260246000fd5b8015158114610d6457600080fd5b5056fea26469706673582212203eb7f079ab1fd5101fecd6a19f1397a59468d397910d82d78f7f76e70eee67e564736f6c63430008070033';

type MystikoV2WithLoopMainConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MystikoV2WithLoopMainConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MystikoV2WithLoopMain__factory extends ContractFactory {
  constructor(...args: MystikoV2WithLoopMainConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'MystikoV2WithLoopMain';
  }

  deploy(
    _hasher3: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<MystikoV2WithLoopMain> {
    return super.deploy(_hasher3, overrides || {}) as Promise<MystikoV2WithLoopMain>;
  }
  getDeployTransaction(
    _hasher3: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(_hasher3, overrides || {});
  }
  attach(address: string): MystikoV2WithLoopMain {
    return super.attach(address) as MystikoV2WithLoopMain;
  }
  connect(signer: Signer): MystikoV2WithLoopMain__factory {
    return super.connect(signer) as MystikoV2WithLoopMain__factory;
  }
  static readonly contractName: 'MystikoV2WithLoopMain';
  public readonly contractName: 'MystikoV2WithLoopMain';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MystikoV2WithLoopMainInterface {
    return new utils.Interface(_abi) as MystikoV2WithLoopMainInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MystikoV2WithLoopMain {
    return new Contract(address, _abi, signerOrProvider) as MystikoV2WithLoopMain;
  }
}
