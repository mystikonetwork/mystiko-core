/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides, BigNumberish } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { CommitmentPoolMain, CommitmentPoolMainInterface } from '../CommitmentPoolMain';

const _abi = [
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_treeHeight',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '_rootHistoryLength',
        type: 'uint32',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
    ],
    name: 'CommitmentIncluded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'rollupFee',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'leafIndex',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'bytes',
        name: 'encryptedNote',
        type: 'bytes',
      },
    ],
    name: 'CommitmentQueued',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'rootHash',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'serialNumber',
        type: 'uint256',
      },
    ],
    name: 'CommitmentSpent',
    type: 'event',
  },
  {
    inputs: [],
    name: 'FIELD_SIZE',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_actor',
        type: 'address',
      },
    ],
    name: 'addEnqueueWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_roller',
        type: 'address',
      },
    ],
    name: 'addRollupWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetType',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_newOperator',
        type: 'address',
      },
    ],
    name: 'changeOperator',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'commitmentIncludedCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'commitmentQueue',
    outputs: [
      {
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'rollupFee',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'commitmentQueueSize',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'currentRoot',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'currentRootIndex',
    outputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
    ],
    name: 'disableRollupVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_numInputs',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '_numOutputs',
        type: 'uint32',
      },
    ],
    name: 'disableTransactVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
      {
        internalType: 'address',
        name: '_rollupVerifier',
        type: 'address',
      },
    ],
    name: 'enableRollupVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_numInputs',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '_numOutputs',
        type: 'uint32',
      },
      {
        internalType: 'address',
        name: '_transactVerifier',
        type: 'address',
      },
    ],
    name: 'enableTransactVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
        ],
        internalType: 'struct ICommitmentPool.CommitmentRequest',
        name: '_request',
        type: 'tuple',
      },
      {
        internalType: 'address',
        name: '_executor',
        type: 'address',
      },
    ],
    name: 'enqueue',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'enqueueWhitelist',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'historicCommitments',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'root',
        type: 'uint256',
      },
    ],
    name: 'isKnownRoot',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isRollupWhitelistDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isSanctionCheckDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isVerifierUpdateDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'minRollupFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'operator',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_actor',
        type: 'address',
      },
    ],
    name: 'removeEnqueueWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_roller',
        type: 'address',
      },
    ],
    name: 'removeRollupWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'a',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256[2]',
                    name: 'X',
                    type: 'uint256[2]',
                  },
                  {
                    internalType: 'uint256[2]',
                    name: 'Y',
                    type: 'uint256[2]',
                  },
                ],
                internalType: 'struct IVerifier.G2Point',
                name: 'b',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'c',
                type: 'tuple',
              },
            ],
            internalType: 'struct IVerifier.Proof',
            name: 'proof',
            type: 'tuple',
          },
          {
            internalType: 'uint32',
            name: 'rollupSize',
            type: 'uint32',
          },
          {
            internalType: 'uint256',
            name: 'newRoot',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'leafHash',
            type: 'uint256',
          },
        ],
        internalType: 'struct ICommitmentPool.RollupRequest',
        name: '_request',
        type: 'tuple',
      },
    ],
    name: 'rollup',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    name: 'rollupVerifiers',
    outputs: [
      {
        internalType: 'contract IVerifier',
        name: 'verifier',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'enabled',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'rollupWhitelist',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    name: 'rootHistory',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'rootHistoryLength',
    outputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sanctionsContract',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_minRollupFee',
        type: 'uint256',
      },
    ],
    name: 'setMinRollupFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'spentSerialNumbers',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'toggleRollupWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_check',
        type: 'bool',
      },
    ],
    name: 'toggleSanctionCheck',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'toggleVerifierUpdate',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'a',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256[2]',
                    name: 'X',
                    type: 'uint256[2]',
                  },
                  {
                    internalType: 'uint256[2]',
                    name: 'Y',
                    type: 'uint256[2]',
                  },
                ],
                internalType: 'struct IVerifier.G2Point',
                name: 'b',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'c',
                type: 'tuple',
              },
            ],
            internalType: 'struct IVerifier.Proof',
            name: 'proof',
            type: 'tuple',
          },
          {
            internalType: 'uint256',
            name: 'rootHash',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'serialNumbers',
            type: 'uint256[]',
          },
          {
            internalType: 'uint256[]',
            name: 'sigHashes',
            type: 'uint256[]',
          },
          {
            internalType: 'bytes32',
            name: 'sigPk',
            type: 'bytes32',
          },
          {
            internalType: 'uint256',
            name: 'publicAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'relayerFeeAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'outCommitments',
            type: 'uint256[]',
          },
          {
            internalType: 'uint256[]',
            name: 'outRollupFees',
            type: 'uint256[]',
          },
          {
            internalType: 'address',
            name: 'publicRecipient',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'relayerAddress',
            type: 'address',
          },
          {
            internalType: 'bytes[]',
            name: 'outEncryptedNotes',
            type: 'bytes[]',
          },
        ],
        internalType: 'struct ICommitmentPool.TransactRequest',
        name: '_request',
        type: 'tuple',
      },
      {
        internalType: 'bytes',
        name: '_signature',
        type: 'bytes',
      },
    ],
    name: 'transact',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    name: 'transactVerifiers',
    outputs: [
      {
        internalType: 'contract IVerifier',
        name: 'verifier',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'enabled',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'treeCapacity',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_sanction',
        type: 'address',
      },
    ],
    name: 'updateSanctionContractAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    stateMutability: 'payable',
    type: 'receive',
  },
];

const _bytecode =
  '0x60a0604052600180546001600160a81b0319167340c57923924b5c5c5455c48d93317139addac8fb17905560006007819055600855600b805463ffffffff191690553480156200004e57600080fd5b50604051620044f3380380620044f383398101604081905262000071916200089f565b6001600055818163ffffffff8116620000e45760405162461bcd60e51b815260206004820152602b60248201527f5f726f6f74486973746f72794c656e6774682073686f756c642062652067726560448201526a061746572207468616e20360ac1b606482015260840160405180910390fd5b600b8054600160201b600160e01b03191633680100000000000000000263ffffffff60201b19161764010000000063ffffffff848116919091029190911790915562000134908316600262000920565b60805262000142826200016a565b600a819055600b5463ffffffff166000908152600960205260409020555062000a0192505050565b600063ffffffff82166200019f57507f09f658457775074ff4c842032a5ec2f1134c32784cca59d594caac8c503b7923919050565b8163ffffffff1660011415620001d657507f1a77569b79cb7c2eaf9368de9e3b1efc0a606561e5ab299c2337340f3cdd576a919050565b8163ffffffff16600214156200020d57507f111bd0002b1e3b8f1978c932b5ccb2fab87fdb0acab2ddb266f9a346dcb11ee1919050565b8163ffffffff16600314156200024457507f040868ea2a363e05d7ae44280f69b49e429ab096ca2844efe91f8d6b3dad57dd919050565b8163ffffffff16600414156200027a57507ef8f605c92c8502c8fe83be1b83b24e3f67312a388f30cbadb5dee8974137c3919050565b8163ffffffff1660051415620002b157507f1adc043c99adbc0c86a60a36db0f661e2dd96f36ede322f954386d8935a0c5d9919050565b8163ffffffff1660061415620002e857507f2a1fedfa71da723ac3e9b35cef752fa1b647b2b737a23e91241cb7bdc419e3f4919050565b8163ffffffff16600714156200031f57507f17fe1974543c4c4b228e1292f7e3200d31435fc910ee5a8c5cafd329cc4b256b919050565b8163ffffffff16600814156200035657507f0e84a586eb63a0eec0f1fe5785022441f0e29e4ae859c7ce1f5fc88a42ad2e6b919050565b8163ffffffff16600914156200038d57507f193deb901f6eeb032e02e093280db17e373d4ff52bafda9215b46bb9b0a86f3e919050565b8163ffffffff16600a1415620003c457507f1d10ca7b985697cb519565a5006c3f44b020b2edab9b7422ed15dc34532f9406919050565b8163ffffffff16600b1415620003fb57507f1dc200763555467a4e583e00badfdc1fb4d3d3f8f1cc81f31fd2f8b387776081919050565b8163ffffffff16600c14156200043257507f203dd11fdba0ed13b20ca2d6952f3feb7461836a03512e0cccce8467b320b2f6919050565b8163ffffffff16600d14156200046957507f0591af64e64a3e69caf23eee2bdea90885343a49f547ee9464e95d8d6267e4f7919050565b8163ffffffff16600e1415620004a057507f2af572f1077a32f46dc8e307d43c0fa6753b400b2107325976b8df7380545ff6919050565b8163ffffffff16600f1415620004d757507f043227ae4b70b1aacd04e35e6aaed7b56d91220c31e97aaf52e12a6a56984e52919050565b8163ffffffff16601014156200050e57507f2976f1f6a91d83d4c528dad69ece6d3d91934b0e5657e915b360c8c4c2fb54e6919050565b8163ffffffff16601114156200054457507ee5c251c9e093658be0cd1b0df55b6f70f3d09146c1c8b4212a4ddcde700dbc919050565b8163ffffffff16601214156200057b57507f0267cbbc1bc2f1c3e3073d2ee60df8cc0bfef39fe3cee735c9ad5c8ad30064d2919050565b8163ffffffff1660131415620005b257507f2f356057bc56f67dbf159a0e8935022acd5e982dce9f4071adc43e4d57ce27e6919050565b8163ffffffff1660141415620005e957507f273db68f52f12a9d8022ae524050064e42d4d1661c9bcce958acf89b5e8b127b919050565b8163ffffffff16601514156200062057507f0496a18ad4cca81b7c98ceb197439ad925e0f7f62d69dfa42cf9574be77fe30f919050565b8163ffffffff16601614156200065757507f24f89a3f943d421b2f3a554b65459f42b820ac09d6fd9d693df5f8ba732ab596919050565b8163ffffffff16601714156200068e57507f1b55bfd751c6807df36876cdce68034ab43210be2bc8afa8043c7f428604e7a7919050565b8163ffffffff1660181415620006c557507f16d6595a398cf20f2489b90e958166f1e19c537c0c46e9b8ea5462391ee8f143919050565b8163ffffffff1660191415620006fc57507f0f01447ef8f621592474b678ed2fc404ebaf22a6fce15364bb4152a88c113613919050565b8163ffffffff16601a14156200073357507f026c2dffee48bacbc9d21cf90aa7c6e525ab01db6966a9e7e53b3d3f4d1f5a4d919050565b8163ffffffff16601b14156200076a57507f234fe90732795745b2c504c791242a2bb193baa1cbeab57db9324b6bb9134817919050565b8163ffffffff16601c1415620007a157507f23a8e0a7e60981c52ebb498c260d5bef4d7c65145d17128996a77c33a3262a7e919050565b8163ffffffff16601d1415620007d857507f24ee69d2565210c7027ff6fc2657ed029278bc79f41077fe3281ea5d5d8e80f9919050565b8163ffffffff16601e14156200080f57507f1de402fa32463bb2917b733aeef0197a49cacacd1fe860c3acc8cd3b65a30a68919050565b8163ffffffff16601f14156200084657507f1d3015a0f6a7b3f754171d0540628107e50e25debceb16e0e33ae4205501896d919050565b8163ffffffff16602014156200087d57507f264a260539342647256819046bae05bed903a8d19b3c90439d67317d5d881322919050565b506000919050565b805163ffffffff811681146200089a57600080fd5b919050565b60008060408385031215620008b357600080fd5b620008be8362000885565b9150620008ce6020840162000885565b90509250929050565b600181815b8085111562000918578160001904821115620008fc57620008fc620009eb565b808516156200090a57918102915b93841c9390800290620008dc565b509250929050565b60006200092e838362000935565b9392505050565b6000826200094657506001620009e5565b816200095557506000620009e5565b81600181146200096e5760028114620009795762000999565b6001915050620009e5565b60ff8411156200098d576200098d620009eb565b50506001821b620009e5565b5060208310610133831016604e8410600b8410161715620009be575081810a620009e5565b620009ca8383620008d7565b8060001904821115620009e157620009e1620009eb565b0290505b92915050565b634e487b7160e01b600052601160045260246000fd5b608051613ac862000a2b60003960008181610834015281816113c50152611de50152613ac86000f3fe6080604052600436106102bf5760003560e01c80639937e1471161016e578063c1935539116100cb578063de1559211161007f578063e4ed567111610064578063e4ed56711461088c578063fdab463d146108d5578063ffa89b88146108eb57600080fd5b8063de15592114610856578063deeff7cd1461086c57600080fd5b8063c3098df9116100b0578063c3098df9146107b3578063c9a6999c146107e0578063c9abeb641461082257600080fd5b8063c193553914610727578063c259e2e61461079357600080fd5b8063a9b1d29611610122578063b4318ead11610107578063b4318ead146106b2578063ba9bd07d146106d2578063bc22be14146106f757600080fd5b8063a9b1d2961461067c578063ac967fad1461069c57600080fd5b80639b0a6fea116101535780639b0a6fea1461061c5780639cc6b3541461063c578063a6232a931461065c57600080fd5b80639937e147146105e65780639ae39ca3146105fc57600080fd5b80634eb069f71161021c5780637a9fff08116101d05780637fa4b09c116101b55780637fa4b09c14610564578063806ae3621461058457806390eeb02b146105b457600080fd5b80637a9fff08146105145780637cbf0ff61461054457600080fd5b8063570ca73511610201578063570ca7351461049d5780637013ea96146104c457806378d60cd7146104f457600080fd5b80634eb069f71461044b57806353af27d51461046557600080fd5b806330d78036116102735780633fae882e116102585780633fae882e146103c35780633fe3347a146103d6578063414a37ba1461040957600080fd5b806330d780361461036d57806334c33e83146103a357600080fd5b806305335faa116102a457806305335faa1461030d57806306394c9b1461032d57806314a7737d1461034d57600080fd5b806302d498f1146102cb57806303db9874146102ed57600080fd5b366102c657005b600080fd5b3480156102d757600080fd5b506102eb6102e63660046132ba565b61090a565b005b3480156102f957600080fd5b506102eb6103083660046132ba565b610985565b34801561031957600080fd5b506102eb6103283660046132d5565b6109f8565b34801561033957600080fd5b506102eb6103483660046132ba565b610a64565b34801561035957600080fd5b506102eb6103683660046133b6565b610af7565b34801561037957600080fd5b5060015461038e90600160a01b900460ff1681565b60405190151581526020015b60405180910390f35b3480156103af57600080fd5b506102eb6103be3660046132ba565b61114a565b6102eb6103d136600461342a565b6111d6565b3480156103e257600080fd5b50604080518082018252600481526336b0b4b760e11b6020820152905161039a919061373e565b34801561041557600080fd5b5061043d7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000181565b60405190815260200161039a565b34801561045757600080fd5b50600f5461038e9060ff1681565b34801561047157600080fd5b50600154610485906001600160a01b031681565b6040516001600160a01b03909116815260200161039a565b3480156104a957600080fd5b50600b5461048590600160401b90046001600160a01b031681565b3480156104d057600080fd5b5061038e6104df3660046132ba565b600d6020526000908152604090205460ff1681565b34801561050057600080fd5b5061038e61050f36600461330f565b611d2e565b34801561052057600080fd5b5061038e61052f3660046132ba565b600e6020526000908152604090205460ff1681565b34801561055057600080fd5b506102eb61055f3660046135b9565b611f17565b34801561057057600080fd5b506102eb61057f366004613641565b611fbe565b34801561059057600080fd5b5061038e61059f3660046135b9565b60046020526000908152604090205460ff1681565b3480156105c057600080fd5b50600b546105d19063ffffffff1681565b60405163ffffffff909116815260200161039a565b3480156105f257600080fd5b5061043d600c5481565b34801561060857600080fd5b506102eb6106173660046132d5565b612135565b34801561062857600080fd5b506102eb6106373660046135d2565b61219a565b34801561064857600080fd5b506102eb6106573660046132ba565b6122df565b34801561066857600080fd5b5061038e6106773660046135b9565b612352565b34801561068857600080fd5b506102eb6106973660046132ba565b6123ce565b3480156106a857600080fd5b5061043d60075481565b3480156106be57600080fd5b506102eb6106cd3660046132d5565b612444565b3480156106de57600080fd5b50600b546105d190640100000000900463ffffffff1681565b34801561070357600080fd5b5061038e6107123660046135b9565b60056020526000908152604090205460ff1681565b34801561073357600080fd5b50610774610742366004613617565b60026020908152600092835260408084209091529082529020546001600160a01b03811690600160a01b900460ff1682565b604080516001600160a01b03909316835290151560208301520161039a565b34801561079f57600080fd5b506102eb6107ae366004613617565b6124b4565b3480156107bf57600080fd5b5061043d6107ce3660046135d2565b60096020526000908152604090205481565b3480156107ec57600080fd5b506107746107fb3660046135d2565b6003602052600090815260409020546001600160a01b03811690600160a01b900460ff1682565b34801561082e57600080fd5b5061043d7f000000000000000000000000000000000000000000000000000000000000000081565b34801561086257600080fd5b5061043d60085481565b34801561087857600080fd5b506102eb6108873660046135ed565b61261f565b34801561089857600080fd5b506108c06108a73660046135b9565b6006602052600090815260409020805460019091015482565b6040805192835260208301919091520161039a565b3480156108e157600080fd5b5061043d600a5481565b3480156108f757600080fd5b50600f5461038e90610100900460ff1681565b600b54600160401b90046001600160a01b031633146109615760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b60448201526064015b60405180910390fd5b6001600160a01b03166000908152600d60205260409020805460ff19166001179055565b600b54600160401b90046001600160a01b031633146109d75760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b6044820152606401610958565b6001600160a01b03166000908152600e60205260409020805460ff19169055565b600b54600160401b90046001600160a01b03163314610a4a5760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b6044820152606401610958565b600f80549115156101000261ff0019909216919091179055565b600b54600160401b90046001600160a01b03163314610ab65760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b6044820152606401610958565b600b80546001600160a01b03909216600160401b027fffffffff0000000000000000000000000000000000000000ffffffffffffffff909216919091179055565b600f54610100900460ff1680610b1c5750336000908152600d602052604090205460ff165b610b685760405162461bcd60e51b815260206004820152601860248201527f4f6e6c792077686974656c697374656420726f6c6c65722e00000000000000006044820152606401610958565b610b758160400151612352565b15610bc25760405162461bcd60e51b815260206004820152601560248201527f6e6577526f6f74206973206475706c69636174656400000000000000000000006044820152606401610958565b6000816020015163ffffffff16118015610be85750600754816020015163ffffffff1611155b8015610c15575060208181015163ffffffff16600090815260039091526040902054600160a01b900460ff165b610c565760405162461bcd60e51b8152602060048201526012602482015271696e76616c696420726f6c6c757053697a6560701b6044820152606401610958565b806020015163ffffffff16600854610c6e91906139df565b15610cc75760405162461bcd60e51b815260206004820152602360248201527f696e76616c696420726f6c6c757053697a652061742063757272656e7420737460448201526261746560e81b6064820152608401610958565b6000610cd96008548360200151612784565b90506000826020015163ffffffff1667ffffffffffffffff811115610d0057610d00613a6e565b604051908082528060200260200182016040528015610d29578160200160208202803683370190505b506008549091506000905b846020015163ffffffff16600854610d4c91906138da565b811015610e7657600081815260066020526040902054610dae5760405162461bcd60e51b815260206004820152601260248201527f696e646578206f7574206f6620626f756e6400000000000000000000000000006044820152606401610958565b60008181526006602052604090205460085481908590610dce908561393d565b81518110610dde57610dde613a58565b602002602001018181525050600660008381526020019081526020016000206001015483610e0c91906138da565b6000838152600660205260408120818155600190810191909155600754919450610e359161393d565b60075560405181907ffe6b097b46a78e08506a3143b6337c2505ba77df76fe05c3663a987395d6341390600090a25080610e6e816139a0565b915050610d34565b5060007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000183604051602001610eab91906136d9565b6040516020818303038152906040528051906020012060001c610ece91906139df565b905080856060015114610f235760405162461bcd60e51b815260206004820152601060248201527f696e76616c6964206c65616648617368000000000000000000000000000000006044820152606401610958565b60408051600480825260a0820190925260009160208201608080368337019050509050600a5481600081518110610f5c57610f5c613a58565b602002602001018181525050856040015181600181518110610f8057610f80613a58565b602002602001018181525050856060015181600281518110610fa457610fa4613a58565b6020026020010181815250508481600381518110610fc457610fc4613a58565b6020908102919091018101919091528681015163ffffffff16600090815260039091526040808220548851915163c941764760e01b81526001600160a01b039091169163c94176479161101c91908690600401613751565b602060405180830381600087803b15801561103657600080fd5b505af115801561104a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061106e91906132f2565b9050806110bd5760405162461bcd60e51b815260206004820152600d60248201527f696e76616c69642070726f6f66000000000000000000000000000000000000006044820152606401610958565b6110c6846127bc565b866020015163ffffffff166008546110de91906138da565b6008556040870151600a55600b5463ffffffff6401000000008204811691611108911660016138f2565b61111291906139f3565b600b805463ffffffff191663ffffffff9290921691821790556040978801516000918252600960205297902096909655505050505050565b600b54600160401b90046001600160a01b0316331461119c5760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b6044820152606401610958565b600180547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b600260005414156112295760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610958565b600260008181556040848101515160e08601515163ffffffff808316855260209586528385209082168552909452912054909190600160a01b900460ff166112b35760405162461bcd60e51b815260206004820152601260248201527f696e76616c696420692f6f206c656e67746800000000000000000000000000006044820152606401610958565b8163ffffffff168460600151511461130d5760405162461bcd60e51b815260206004820152601860248201527f696e76616c696420736967486173686573206c656e67746800000000000000006044820152606401610958565b8063ffffffff1684610100015151146113685760405162461bcd60e51b815260206004820152601c60248201527f696e76616c6964206f7574526f6c6c757046656573206c656e677468000000006044820152606401610958565b8063ffffffff1684610160015151146113c35760405162461bcd60e51b815260206004820181905260248201527f696e76616c6964206f7574456e637279707465644e6f746573206c656e6774686044820152606401610958565b7f00000000000000000000000000000000000000000000000000000000000000008163ffffffff166007546008546113fb91906138da565b61140591906138da565b11156114425760405162461bcd60e51b815260206004820152600c60248201526b1d1c9959481a5cc8199d5b1b60a21b6044820152606401610958565b611450846101200151612854565b1561149d5760405162461bcd60e51b815260206004820152601260248201527f73616e6374696f6e6564206164647265737300000000000000000000000000006044820152606401610958565b60006114a8856128f7565b905060006114b68286612a0c565b60808701519091506001600160a01b038216146115155760405162461bcd60e51b815260206004820152601160248201527f696e76616c6964207369676e61747572650000000000000000000000000000006044820152606401610958565b6000611522846002613911565b61152d866002613911565b6115389060046138f2565b61154291906138f2565b63ffffffff1667ffffffffffffffff81111561156057611560613a6e565b604051908082528060200260200182016040528015611589578160200160208202803683370190505b5090506115998760200151612352565b6115e55760405162461bcd60e51b815260206004820152600c60248201527f696e76616c696420726f6f7400000000000000000000000000000000000000006044820152606401610958565b8660200151816000815181106115fd576115fd613a58565b60200260200101818152505060005b8563ffffffff168163ffffffff16101561176f576005600089604001518363ffffffff168151811061164057611640613a58565b60209081029190910181015182528101919091526040016000205460ff16156116ab5760405162461bcd60e51b815260206004820152601760248201527f746865206e6f746520686173206265656e207370656e740000000000000000006044820152606401610958565b87604001518163ffffffff16815181106116c7576116c7613a58565b6020026020010151828260016116dd91906138f2565b63ffffffff16815181106116f3576116f3613a58565b60200260200101818152505087606001518163ffffffff168151811061171b5761171b613a58565b6020026020010151828783600161173291906138f2565b61173c91906138f2565b63ffffffff168151811061175257611752613a58565b602090810291909101015280611767816139bb565b91505061160c565b50608087015181611781876002613911565b61178c9060016138f2565b63ffffffff16815181106117a2576117a2613a58565b602090810291909101015260a0870151816117be876002613911565b6117c99060026138f2565b63ffffffff16815181106117df576117df613a58565b602090810291909101015260c0870151816117fb876002613911565b6118069060036138f2565b63ffffffff168151811061181c5761181c613a58565b60200260200101818152505060005b8463ffffffff168163ffffffff161015611a3157600460008960e001518363ffffffff168151811061185f5761185f613a58565b60209081029190910181015182528101919091526040016000205460ff16156118ca5760405162461bcd60e51b815260206004820152601460248201527f6475706c696361746520636f6d6d69746d656e740000000000000000000000006044820152606401610958565b600c548861010001518263ffffffff16815181106118ea576118ea613a58565b602002602001015110156119405760405162461bcd60e51b815260206004820152601260248201527f726f6c6c75702066656520746f6f206c6f7700000000000000000000000000006044820152606401610958565b8760e001518163ffffffff168151811061195c5761195c613a58565b602002602001015182828860026119739190613911565b61197e9060046138f2565b61198891906138f2565b63ffffffff168151811061199e5761199e613a58565b6020026020010181815250508761010001518163ffffffff16815181106119c7576119c7613a58565b60200260200101518282878960026119df9190613911565b6119e991906138f2565b6119f49060046138f2565b6119fe91906138f2565b63ffffffff1681518110611a1457611a14613a58565b602090810291909101015280611a29816139bb565b91505061182b565b5063ffffffff80861660009081526002602090815260408083209388168352929052818120548951925163c941764760e01b815291926001600160a01b039091169163c941764791611a87918690600401613751565b602060405180830381600087803b158015611aa157600080fd5b505af1158015611ab5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ad991906132f2565b905080611b285760405162461bcd60e51b815260206004820152601660248201527f696e76616c6964207472616e736163742070726f6f66000000000000000000006044820152606401610958565b60005b8663ffffffff168163ffffffff161015611bf5576001600560008b604001518463ffffffff1681518110611b6157611b61613a58565b6020026020010151815260200190815260200160002060006101000a81548160ff02191690831515021790555088604001518163ffffffff1681518110611baa57611baa613a58565b602002602001015189602001517f3c2372ab6130817bd6b8fc6dbaecae947e84201b49535d358debaa6c34c23ecf60405160405180910390a380611bed816139bb565b915050611b2b565b5060005b8563ffffffff168163ffffffff161015611ce4576001600460008b60e001518463ffffffff1681518110611c2f57611c2f613a58565b6020026020010151815260200190815260200160002060006101000a81548160ff021916908315150217905550611cd28960e001518263ffffffff1681518110611c7b57611c7b613a58565b60200260200101518a61010001518363ffffffff1681518110611ca057611ca0613a58565b60200260200101518b61016001518463ffffffff1681518110611cc557611cc5613a58565b6020026020010151612a30565b80611cdc816139bb565b915050611bf9565b5060a088015115611d0257611d028861012001518960a00151612ac6565b60c088015115611d1f57611d1f8861014001518960c00151612ac6565b50506001600055505050505050565b336000908152600e602052604081205460ff16611d8d5760405162461bcd60e51b815260206004820152601860248201527f4f6e6c792077686974656c69737465642073656e6465722e00000000000000006044820152606401610958565b600c5483606001511015611de35760405162461bcd60e51b815260206004820152601260248201527f726f6c6c75702066656520746f6f2066657700000000000000000000000000006044820152606401610958565b7f0000000000000000000000000000000000000000000000000000000000000000600754600854611e1491906138da565b10611e505760405162461bcd60e51b815260206004820152600c60248201526b1d1c9959481a5cc8199d5b1b60a21b6044820152606401610958565b60208084015160009081526004909152604090205460ff1615611ebf5760405162461bcd60e51b815260206004820152602160248201527f74686520636f6d6d69746d656e7420686173206265656e207375626d697474656044820152601960fa1b6064820152608401610958565b60208084018051600090815260049092526040909120805460ff191660011790555160608401516080850151611ef6929190612a30565b604083015115611f0e57611f0e828460400151612bbc565b50600192915050565b600b54600160401b90046001600160a01b03163314611f695760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b6044820152606401610958565b60008111611fb95760405162461bcd60e51b815260206004820152601560248201527f696e76616c6964205f6d696e526f6c6c757046656500000000000000000000006044820152606401610958565b600c55565b600b54600160401b90046001600160a01b031633146120105760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b6044820152606401610958565b600f5460ff161561206f5760405162461bcd60e51b8152602060048201526024808201527f566572696669657220757064617465732068617665206265656e2064697361626044820152633632b21760e11b6064820152608401610958565b60008363ffffffff16116120c55760405162461bcd60e51b815260206004820152601460248201527f6e756d496e707574732073686f756c64203e20300000000000000000000000006044820152606401610958565b6040805180820182526001600160a01b0392831681526001602080830191825263ffffffff9687166000908152600282528481209690971687529490945293209251835492511515600160a01b0274ffffffffffffffffffffffffffffffffffffffffff19909316911617179055565b600b54600160401b90046001600160a01b031633146121875760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b6044820152606401610958565b600f805460ff1916911515919091179055565b600b54600160401b90046001600160a01b031633146121ec5760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b6044820152606401610958565b60008163ffffffff16116122375760405162461bcd60e51b8152602060048201526012602482015271696e76616c696420726f6c6c757053697a6560701b6044820152606401610958565b600f5460ff16156122965760405162461bcd60e51b8152602060048201526024808201527f566572696669657220757064617465732068617665206265656e2064697361626044820152633632b21760e11b6064820152608401610958565b63ffffffff8116600090815260036020526040902054600160a01b900460ff16156122dc5763ffffffff81166000908152600360205260409020805460ff60a01b191690555b50565b600b54600160401b90046001600160a01b031633146123315760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b6044820152606401610958565b6001600160a01b03166000908152600d60205260409020805460ff19169055565b600b5460009063ffffffff165b63ffffffff81166000908152600960205260409020548314156123855750600192915050565b63ffffffff81166123a35750600b54640100000000900463ffffffff165b806123ad81613980565b600b5490925063ffffffff80841691161415905061235f5750600092915050565b600b54600160401b90046001600160a01b031633146124205760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b6044820152606401610958565b6001600160a01b03166000908152600e60205260409020805460ff19166001179055565b600b54600160401b90046001600160a01b031633146124965760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b6044820152606401610958565b60018054911515600160a01b0260ff60a01b19909216919091179055565b600b54600160401b90046001600160a01b031633146125065760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b6044820152606401610958565b600f5460ff16156125655760405162461bcd60e51b8152602060048201526024808201527f566572696669657220757064617465732068617665206265656e2064697361626044820152633632b21760e11b6064820152608401610958565b60008263ffffffff16116125bb5760405162461bcd60e51b815260206004820152601460248201527f6e756d496e707574732073686f756c64203e20300000000000000000000000006044820152606401610958565b63ffffffff828116600090815260026020908152604080832093851683529290522054600160a01b900460ff161561261b5763ffffffff8083166000908152600260209081526040808320938516835292905220805460ff60a01b191690555b5050565b600b54600160401b90046001600160a01b031633146126715760405162461bcd60e51b815260206004820152600e60248201526d27b7363c9037b832b930ba37b91760911b6044820152606401610958565b600f5460ff16156126d05760405162461bcd60e51b8152602060048201526024808201527f566572696669657220757064617465732068617665206265656e2064697361626044820152633632b21760e11b6064820152608401610958565b60008263ffffffff161161271b5760405162461bcd60e51b8152602060048201526012602482015271696e76616c696420726f6c6c757053697a6560701b6044820152606401610958565b6040805180820182526001600160a01b0392831681526001602080830191825263ffffffff90951660009081526003909552919093209251835491511515600160a01b0274ffffffffffffffffffffffffffffffffffffffffff19909216921691909117179055565b60011c637fffffff1660005b63ffffffff8216156127b557600183901c925060018263ffffffff16901c9150612790565b5090919050565b604051600090339083908381818185875af1925050503d80600081146127fe576040519150601f19603f3d011682016040523d82523d6000602084013e612803565b606091505b505090508061261b5760405162461bcd60e51b815260206004820152601a60248201527f726f6c6c757020666565207472616e73666572206661696c65640000000000006044820152606401610958565b600154600090600160a01b900460ff161561287157506000919050565b60015460405163df592f7d60e01b81526001600160a01b03848116600483015290911690819063df592f7d9060240160206040518083038186803b1580156128b857600080fd5b505afa1580156128cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128f091906132f2565b9392505050565b6101208101516101408201516040516bffffffffffffffffffffffff19606093841b811660208301529190921b1660348201526000908190604801604051602081830303815290604052905060005b836101600151518163ffffffff1610156129b557818461016001518263ffffffff168151811061297857612978613a58565b602002602001015160405160200161299192919061370f565b604051602081830303815290604052915080806129ad906139bb565b915050612946565b508051602080830191909120604080517f19457468657265756d205369676e6564204d6573736167653a0a33320000000081850152603c8082019390935281518082039093018352605c01905280519101206128f0565b6000806000612a1b8585612c5f565b91509150612a2881612ccf565b509392505050565b6000600854600754612a4291906138da565b604080518082018252868152602080820187815260008581526006909252929020905181559051600191820155600754919250612a7f91906138da565b60075560405184907ff533f9705aac5020e21695ea3553ac7b6881070d2b6900ab2b1e3050304b5bf990612ab8908690859087906137ed565b60405180910390a250505050565b3415612b145760405162461bcd60e51b815260206004820152601860248201527f6e6f206d61696e6e657420746f6b656e20616c6c6f77656400000000000000006044820152606401610958565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114612b61576040519150601f19603f3d011682016040523d82523d6000602084013e612b66565b606091505b5050905080612bb75760405162461bcd60e51b815260206004820152600f60248201527f7769746864726177206661696c656400000000000000000000000000000000006044820152606401610958565b505050565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114612c09576040519150601f19603f3d011682016040523d82523d6000602084013e612c0e565b606091505b5050905080612bb75760405162461bcd60e51b815260206004820152601c60248201527f6578656375746f7220666565207472616e73666572206661696c6564000000006044820152606401610958565b600080825160411415612c965760208301516040840151606085015160001a612c8a87828585612e8a565b94509450505050612cc8565b825160401415612cc05760208301516040840151612cb5868383612f77565b935093505050612cc8565b506000905060025b9250929050565b6000816004811115612ce357612ce3613a42565b1415612cec5750565b6001816004811115612d0057612d00613a42565b1415612d4e5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610958565b6002816004811115612d6257612d62613a42565b1415612db05760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610958565b6003816004811115612dc457612dc4613a42565b1415612e1d5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610958565b6004816004811115612e3157612e31613a42565b14156122dc5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610958565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115612ec15750600090506003612f6e565b8460ff16601b14158015612ed957508460ff16601c14155b15612eea5750600090506004612f6e565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015612f3e573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116612f6757600060019250925050612f6e565b9150600090505b94509492505050565b6000807f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831681612fad60ff86901c601b6138da565b9050612fbb87828885612e8a565b935093505050935093915050565b80356001600160a01b0381168114612fe057600080fd5b919050565b600082601f830112612ff657600080fd5b8135602061300b613006836138b6565b613885565b80838252828201915082860187848660051b890101111561302b57600080fd5b6000805b8681101561306e57823567ffffffffffffffff81111561304d578283fd5b61305b8b88838d0101613141565b865250938501939185019160010161302f565b509198975050505050505050565b600082601f83011261308d57600080fd5b613095613815565b8083856040860111156130a757600080fd5b60005b60028110156130c95781358452602093840193909101906001016130aa565b509095945050505050565b600082601f8301126130e557600080fd5b813560206130f5613006836138b6565b80838252828201915082860187848660051b890101111561311557600080fd5b60005b8581101561313457813584529284019290840190600101613118565b5090979650505050505050565b600082601f83011261315257600080fd5b813567ffffffffffffffff81111561316c5761316c613a6e565b61317f601f8201601f1916602001613885565b81815284602083860101111561319457600080fd5b816020850160208301376000918101602001919091529392505050565b6000604082840312156131c357600080fd5b6040516040810181811067ffffffffffffffff821117156131e6576131e6613a6e565b604052823581526020928301359281019290925250919050565b600081830361010081121561321457600080fd5b6040516060810181811067ffffffffffffffff8211171561323757613237613a6e565b60405291508161324785856131b1565b81526080603f198301121561325b57600080fd5b613263613815565b9150613272856040860161307c565b8252613281856080860161307c565b60208301528160208201526132998560c086016131b1565b6040820152505092915050565b803563ffffffff81168114612fe057600080fd5b6000602082840312156132cc57600080fd5b6128f082612fc9565b6000602082840312156132e757600080fd5b81356128f081613a84565b60006020828403121561330457600080fd5b81516128f081613a84565b6000806040838503121561332257600080fd5b823567ffffffffffffffff8082111561333a57600080fd5b9084019060a0828703121561334e57600080fd5b61335661383e565b8235815260208301356020820152604083013560408201526060830135606082015260808301358281111561338a57600080fd5b61339688828601613141565b60808301525093506133ad91505060208401612fc9565b90509250929050565b600061016082840312156133c957600080fd5b6040516080810181811067ffffffffffffffff821117156133ec576133ec613a6e565b6040526133f98484613200565b815261340861010084016132a6565b6020820152610120830135604082015261014090920135606083015250919050565b6000806040838503121561343d57600080fd5b823567ffffffffffffffff8082111561345557600080fd5b90840190610260828703121561346a57600080fd5b613472613861565b61347c8784613200565b8152610100808401356020830152610120808501358481111561349e57600080fd5b6134aa8a8288016130d4565b60408501525061014080860135858111156134c457600080fd5b6134d08b8289016130d4565b60608601525061016080870135608086015261018087013560a08601526101a087013560c08601526101c08701358681111561350b57600080fd5b6135178c828a016130d4565b60e0870152506101e08701358681111561353057600080fd5b61353c8c828a016130d4565b858701525061354e6102008801612fc9565b8386015261355f6102208801612fc9565b8286015261024087013593508584111561357857600080fd5b6135848b858901612fe5565b9085015250919550505060208501359150808211156135a257600080fd5b506135af85828601613141565b9150509250929050565b6000602082840312156135cb57600080fd5b5035919050565b6000602082840312156135e457600080fd5b6128f0826132a6565b6000806040838503121561360057600080fd5b613609836132a6565b91506133ad60208401612fc9565b6000806040838503121561362a57600080fd5b613633836132a6565b91506133ad602084016132a6565b60008060006060848603121561365657600080fd5b61365f846132a6565b925061366d602085016132a6565b915061367b60408501612fc9565b90509250925092565b8060005b60028110156136a7578151845260209384019390910190600101613688565b50505050565b600081518084526136c5816020860160208601613954565b601f01601f19169290920160200192915050565b815160009082906020808601845b83811015613703578151855293820193908201906001016136e7565b50929695505050505050565b60008351613721818460208801613954565b835190830190613735818360208801613954565b01949350505050565b6020815260006128f060208301846136ad565b600061012080830161376e84875180518252602090810151910152565b602080870151613782604087018251613684565b8101516137926080870182613684565b506040870151805160c08701526020015160e08601526101008501929092528451908190526101408401918581019160005b818110156137e0578351855293820193928201926001016137c4565b5092979650505050505050565b83815282602082015260606040820152600061380c60608301846136ad565b95945050505050565b6040805190810167ffffffffffffffff8111828210171561383857613838613a6e565b60405290565b60405160a0810167ffffffffffffffff8111828210171561383857613838613a6e565b604051610180810167ffffffffffffffff8111828210171561383857613838613a6e565b604051601f8201601f1916810167ffffffffffffffff811182821017156138ae576138ae613a6e565b604052919050565b600067ffffffffffffffff8211156138d0576138d0613a6e565b5060051b60200190565b600082198211156138ed576138ed613a16565b500190565b600063ffffffff80831681851680830382111561373557613735613a16565b600063ffffffff8083168185168183048111821515161561393457613934613a16565b02949350505050565b60008282101561394f5761394f613a16565b500390565b60005b8381101561396f578181015183820152602001613957565b838111156136a75750506000910152565b600063ffffffff82168061399657613996613a16565b6000190192915050565b60006000198214156139b4576139b4613a16565b5060010190565b600063ffffffff808316818114156139d5576139d5613a16565b6001019392505050565b6000826139ee576139ee613a2c565b500690565b600063ffffffff80841680613a0a57613a0a613a2c565b92169190910692915050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b80151581146122dc57600080fdfea264697066735822122013277e4a60213d1648bca2d514d1a19eb37c04692b5a5b079464d95689ccc57664736f6c63430008070033';

type CommitmentPoolMainConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CommitmentPoolMainConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CommitmentPoolMain__factory extends ContractFactory {
  constructor(...args: CommitmentPoolMainConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'CommitmentPoolMain';
  }

  deploy(
    _treeHeight: BigNumberish,
    _rootHistoryLength: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<CommitmentPoolMain> {
    return super.deploy(_treeHeight, _rootHistoryLength, overrides || {}) as Promise<CommitmentPoolMain>;
  }
  getDeployTransaction(
    _treeHeight: BigNumberish,
    _rootHistoryLength: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(_treeHeight, _rootHistoryLength, overrides || {});
  }
  attach(address: string): CommitmentPoolMain {
    return super.attach(address) as CommitmentPoolMain;
  }
  connect(signer: Signer): CommitmentPoolMain__factory {
    return super.connect(signer) as CommitmentPoolMain__factory;
  }
  static readonly contractName: 'CommitmentPoolMain';
  public readonly contractName: 'CommitmentPoolMain';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CommitmentPoolMainInterface {
    return new utils.Interface(_abi) as CommitmentPoolMainInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): CommitmentPoolMain {
    return new Contract(address, _abi, signerOrProvider) as CommitmentPoolMain;
  }
}
