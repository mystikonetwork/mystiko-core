/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides, BigNumberish } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { MystikoV2WithLoopMain, MystikoV2WithLoopMainInterface } from '../MystikoV2WithLoopMain';

const _abi = [
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_treeHeight',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '_rootHistoryLength',
        type: 'uint32',
      },
      {
        internalType: 'uint256',
        name: '_minRollupFee',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: '_hasher3',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
    ],
    name: 'CommitmentIncluded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'rollupFee',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'leafIndex',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'bytes',
        name: 'encryptedNote',
        type: 'bytes',
      },
    ],
    name: 'CommitmentQueued',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'rootHash',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'serialNumber',
        type: 'uint256',
      },
    ],
    name: 'CommitmentSpent',
    type: 'event',
  },
  {
    inputs: [],
    name: 'FIELD_SIZE',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'roller',
        type: 'address',
      },
    ],
    name: 'addRollupWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetType',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'bridgeType',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_newOperator',
        type: 'address',
      },
    ],
    name: 'changeOperator',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'commitmentIncludedCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'commitmentQueue',
    outputs: [
      {
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'rollupFee',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'commitmentQueueSize',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'currentRoot',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'currentRootIndex',
    outputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'hashK',
            type: 'uint256',
          },
          {
            internalType: 'uint128',
            name: 'randomS',
            type: 'uint128',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoLoop.DepositRequest',
        name: 'request',
        type: 'tuple',
      },
    ],
    name: 'deposit',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'rollupSize',
        type: 'uint32',
      },
    ],
    name: 'disableRollupVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'numInputs',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: 'numOutputs',
        type: 'uint32',
      },
    ],
    name: 'disableTransactVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'rollupSize',
        type: 'uint32',
      },
      {
        internalType: 'address',
        name: '_rollupVerifier',
        type: 'address',
      },
    ],
    name: 'enableRollupVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'numInputs',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: 'numOutputs',
        type: 'uint32',
      },
      {
        internalType: 'address',
        name: '_transactVerifier',
        type: 'address',
      },
    ],
    name: 'enableTransactVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'hasher3',
    outputs: [
      {
        internalType: 'contract IHasher3',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'historicCommitments',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isDepositsDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'root',
        type: 'uint256',
      },
    ],
    name: 'isKnownRoot',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isRollupWhitelistDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isVerifierUpdateDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'minRollupFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'operator',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'roller',
        type: 'address',
      },
    ],
    name: 'removeRollupWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'a',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256[2]',
                    name: 'X',
                    type: 'uint256[2]',
                  },
                  {
                    internalType: 'uint256[2]',
                    name: 'Y',
                    type: 'uint256[2]',
                  },
                ],
                internalType: 'struct IVerifier.G2Point',
                name: 'b',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'c',
                type: 'tuple',
              },
            ],
            internalType: 'struct IVerifier.Proof',
            name: 'proof',
            type: 'tuple',
          },
          {
            internalType: 'uint32',
            name: 'rollupSize',
            type: 'uint32',
          },
          {
            internalType: 'uint256',
            name: 'newRoot',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'leafHash',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoLoop.RollupRequest',
        name: 'request',
        type: 'tuple',
      },
    ],
    name: 'rollup',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    name: 'rollupVerifiers',
    outputs: [
      {
        internalType: 'contract IVerifier',
        name: 'verifier',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'enabled',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'rollupWhitelist',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    name: 'rootHistory',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'rootHistoryLength',
    outputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_minRollupFee',
        type: 'uint256',
      },
    ],
    name: 'setMinRollupFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'spentSerialNumbers',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'toggleDeposits',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'toggleRollupWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'toggleVerifierUpdate',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'a',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256[2]',
                    name: 'X',
                    type: 'uint256[2]',
                  },
                  {
                    internalType: 'uint256[2]',
                    name: 'Y',
                    type: 'uint256[2]',
                  },
                ],
                internalType: 'struct IVerifier.G2Point',
                name: 'b',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'c',
                type: 'tuple',
              },
            ],
            internalType: 'struct IVerifier.Proof',
            name: 'proof',
            type: 'tuple',
          },
          {
            internalType: 'uint256',
            name: 'rootHash',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'serialNumbers',
            type: 'uint256[]',
          },
          {
            internalType: 'uint256[]',
            name: 'sigHashes',
            type: 'uint256[]',
          },
          {
            internalType: 'bytes32',
            name: 'sigPk',
            type: 'bytes32',
          },
          {
            internalType: 'uint256',
            name: 'publicAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'relayerFeeAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'outCommitments',
            type: 'uint256[]',
          },
          {
            internalType: 'uint256[]',
            name: 'outRollupFees',
            type: 'uint256[]',
          },
          {
            internalType: 'address',
            name: 'publicRecipient',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'relayerAddress',
            type: 'address',
          },
          {
            internalType: 'bytes[]',
            name: 'outEncryptedNotes',
            type: 'bytes[]',
          },
        ],
        internalType: 'struct IMystikoLoop.TransactRequest',
        name: 'request',
        type: 'tuple',
      },
      {
        internalType: 'bytes',
        name: 'signature',
        type: 'bytes',
      },
    ],
    name: 'transact',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    name: 'transactVerifiers',
    outputs: [
      {
        internalType: 'contract IVerifier',
        name: 'verifier',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'enabled',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'treeCapacity',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x60a060405260006007819055600855600b805463ffffffff191690553480156200002857600080fd5b506040516200455e3803806200455e8339810160408190526200004b9162000901565b60016000558383838363ffffffff8316620000c15760405162461bcd60e51b815260206004820152602b60248201527f5f726f6f74486973746f72794c656e6774682073686f756c642062652067726560448201526a061746572207468616e20360ac1b60648201526084015b60405180910390fd5b60008211620001225760405162461bcd60e51b815260206004820152602660248201527f5f6d696e526f6c6c75704665652073686f756c6420626520677265617465722060448201526507468616e20360d41b6064820152608401620000b8565b600180546001600160a01b0319166001600160a01b038316179055600b8054600160201b600160e01b03191633680100000000000000000263ffffffff60201b19161764010000000063ffffffff8681169190910291909117909155600c839055620001929085166002620009ac565b608052620001a084620001cc565b600a819055600b5463ffffffff166000908152600960205260409020555062000a8d9650505050505050565b600063ffffffff82166200020157507f09f658457775074ff4c842032a5ec2f1134c32784cca59d594caac8c503b7923919050565b8163ffffffff16600114156200023857507f1a77569b79cb7c2eaf9368de9e3b1efc0a606561e5ab299c2337340f3cdd576a919050565b8163ffffffff16600214156200026f57507f111bd0002b1e3b8f1978c932b5ccb2fab87fdb0acab2ddb266f9a346dcb11ee1919050565b8163ffffffff1660031415620002a657507f040868ea2a363e05d7ae44280f69b49e429ab096ca2844efe91f8d6b3dad57dd919050565b8163ffffffff1660041415620002dc57507ef8f605c92c8502c8fe83be1b83b24e3f67312a388f30cbadb5dee8974137c3919050565b8163ffffffff16600514156200031357507f1adc043c99adbc0c86a60a36db0f661e2dd96f36ede322f954386d8935a0c5d9919050565b8163ffffffff16600614156200034a57507f2a1fedfa71da723ac3e9b35cef752fa1b647b2b737a23e91241cb7bdc419e3f4919050565b8163ffffffff16600714156200038157507f17fe1974543c4c4b228e1292f7e3200d31435fc910ee5a8c5cafd329cc4b256b919050565b8163ffffffff1660081415620003b857507f0e84a586eb63a0eec0f1fe5785022441f0e29e4ae859c7ce1f5fc88a42ad2e6b919050565b8163ffffffff1660091415620003ef57507f193deb901f6eeb032e02e093280db17e373d4ff52bafda9215b46bb9b0a86f3e919050565b8163ffffffff16600a14156200042657507f1d10ca7b985697cb519565a5006c3f44b020b2edab9b7422ed15dc34532f9406919050565b8163ffffffff16600b14156200045d57507f1dc200763555467a4e583e00badfdc1fb4d3d3f8f1cc81f31fd2f8b387776081919050565b8163ffffffff16600c14156200049457507f203dd11fdba0ed13b20ca2d6952f3feb7461836a03512e0cccce8467b320b2f6919050565b8163ffffffff16600d1415620004cb57507f0591af64e64a3e69caf23eee2bdea90885343a49f547ee9464e95d8d6267e4f7919050565b8163ffffffff16600e14156200050257507f2af572f1077a32f46dc8e307d43c0fa6753b400b2107325976b8df7380545ff6919050565b8163ffffffff16600f14156200053957507f043227ae4b70b1aacd04e35e6aaed7b56d91220c31e97aaf52e12a6a56984e52919050565b8163ffffffff16601014156200057057507f2976f1f6a91d83d4c528dad69ece6d3d91934b0e5657e915b360c8c4c2fb54e6919050565b8163ffffffff1660111415620005a657507ee5c251c9e093658be0cd1b0df55b6f70f3d09146c1c8b4212a4ddcde700dbc919050565b8163ffffffff1660121415620005dd57507f0267cbbc1bc2f1c3e3073d2ee60df8cc0bfef39fe3cee735c9ad5c8ad30064d2919050565b8163ffffffff16601314156200061457507f2f356057bc56f67dbf159a0e8935022acd5e982dce9f4071adc43e4d57ce27e6919050565b8163ffffffff16601414156200064b57507f273db68f52f12a9d8022ae524050064e42d4d1661c9bcce958acf89b5e8b127b919050565b8163ffffffff16601514156200068257507f0496a18ad4cca81b7c98ceb197439ad925e0f7f62d69dfa42cf9574be77fe30f919050565b8163ffffffff1660161415620006b957507f24f89a3f943d421b2f3a554b65459f42b820ac09d6fd9d693df5f8ba732ab596919050565b8163ffffffff1660171415620006f057507f1b55bfd751c6807df36876cdce68034ab43210be2bc8afa8043c7f428604e7a7919050565b8163ffffffff16601814156200072757507f16d6595a398cf20f2489b90e958166f1e19c537c0c46e9b8ea5462391ee8f143919050565b8163ffffffff16601914156200075e57507f0f01447ef8f621592474b678ed2fc404ebaf22a6fce15364bb4152a88c113613919050565b8163ffffffff16601a14156200079557507f026c2dffee48bacbc9d21cf90aa7c6e525ab01db6966a9e7e53b3d3f4d1f5a4d919050565b8163ffffffff16601b1415620007cc57507f234fe90732795745b2c504c791242a2bb193baa1cbeab57db9324b6bb9134817919050565b8163ffffffff16601c14156200080357507f23a8e0a7e60981c52ebb498c260d5bef4d7c65145d17128996a77c33a3262a7e919050565b8163ffffffff16601d14156200083a57507f24ee69d2565210c7027ff6fc2657ed029278bc79f41077fe3281ea5d5d8e80f9919050565b8163ffffffff16601e14156200087157507f1de402fa32463bb2917b733aeef0197a49cacacd1fe860c3acc8cd3b65a30a68919050565b8163ffffffff16601f1415620008a857507f1d3015a0f6a7b3f754171d0540628107e50e25debceb16e0e33ae4205501896d919050565b8163ffffffff1660201415620008df57507f264a260539342647256819046bae05bed903a8d19b3c90439d67317d5d881322919050565b506000919050565b805163ffffffff81168114620008fc57600080fd5b919050565b600080600080608085870312156200091857600080fd5b6200092385620008e7565b93506200093360208601620008e7565b6040860151606087015191945092506001600160a01b03811681146200095857600080fd5b939692955090935050565b600181815b80851115620009a457816000190482111562000988576200098862000a77565b808516156200099657918102915b93841c939080029062000968565b509250929050565b6000620009ba8383620009c1565b9392505050565b600082620009d25750600162000a71565b81620009e15750600062000a71565b8160018114620009fa576002811462000a055762000a25565b600191505062000a71565b60ff84111562000a195762000a1962000a77565b50506001821b62000a71565b5060208310610133831016604e8410600b841016171562000a4a575081810a62000a71565b62000a56838362000963565b806000190482111562000a6d5762000a6d62000a77565b0290505b92915050565b634e487b7160e01b600052601160045260246000fd5b608051613aa762000ab7600039600081816107400152818161124a01526124620152613aa76000f3fe60806040526004361061026a5760003560e01c80639ae39ca311610153578063c3098df9116100cb578063e4ed56711161007f578063f6afe88f11610064578063f6afe88f146107fb578063fdab463d1461080e578063ffa89b881461082457600080fd5b8063e4ed567114610798578063ed6ea33a146107e157600080fd5b8063c9abeb64116100b0578063c9abeb641461072e578063de15592114610762578063deeff7cd1461077857600080fd5b8063c3098df9146106bf578063c9a6999c146106ec57600080fd5b8063ac967fad11610122578063bc22be1411610107578063bc22be1414610603578063c193553914610633578063c259e2e61461069f57600080fd5b8063ac967fad146105c8578063ba9bd07d146105de57600080fd5b80639ae39ca3146105485780639b0a6fea146105685780639cc6b35414610588578063a6232a93146105a857600080fd5b8063570ca735116101e65780637fa4b09c116101b557806390eeb02b1161019a57806390eeb02b146104e05780639937e1471461051257806399383f781461052857600080fd5b80637fa4b09c14610490578063806ae362146104b057600080fd5b8063570ca735146103e15780636afdf048146104205780637013ea96146104405780637cbf0ff61461047057600080fd5b80632421e1551161023d5780633fe3347a116102225780633fe3347a14610343578063414a37ba146103705780634eb069f7146103b257600080fd5b80632421e155146102f15780633fae882e1461033057600080fd5b806302d498f11461026f57806305335faa1461029157806306394c9b146102b157806314a7737d146102d1575b600080fd5b34801561027b57600080fd5b5061028f61028a36600461320d565b610844565b005b34801561029d57600080fd5b5061028f6102ac366004613228565b6108ca565b3480156102bd57600080fd5b5061028f6102cc36600461320d565b610943565b3480156102dd57600080fd5b5061028f6102ec366004613322565b6109e1565b3480156102fd57600080fd5b5060408051808201909152600481526306c6f6f760e41b60208201525b60405161032791906136fd565b60405180910390f35b61028f61033e366004613396565b61105b565b34801561034f57600080fd5b5060408051808201909152600481526336b0b4b760e11b602082015261031a565b34801561037c57600080fd5b506103a47f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000181565b604051908152602001610327565b3480156103be57600080fd5b50600e546103d190610100900460ff1681565b6040519015158152602001610327565b3480156103ed57600080fd5b50600b5461040890600160401b90046001600160a01b031681565b6040516001600160a01b039091168152602001610327565b34801561042c57600080fd5b50600154610408906001600160a01b031681565b34801561044c57600080fd5b506103d161045b36600461320d565b600d6020526000908152604090205460ff1681565b34801561047c57600080fd5b5061028f61048b366004613525565b611b58565b34801561049c57600080fd5b5061028f6104ab3660046135cf565b611c0a565b3480156104bc57600080fd5b506103d16104cb366004613525565b60046020526000908152604090205460ff1681565b3480156104ec57600080fd5b50600b546104fd9063ffffffff1681565b60405163ffffffff9091168152602001610327565b34801561051e57600080fd5b506103a4600c5481565b34801561053457600080fd5b5061028f610543366004613228565b611d91565b34801561055457600080fd5b5061028f610563366004613228565b611e01565b34801561057457600080fd5b5061028f610583366004613557565b611e78565b34801561059457600080fd5b5061028f6105a336600461320d565b611fcd565b3480156105b457600080fd5b506103d16105c3366004613525565b61204b565b3480156105d457600080fd5b506103a460075481565b3480156105ea57600080fd5b50600b546104fd90640100000000900463ffffffff1681565b34801561060f57600080fd5b506103d161061e366004613525565b60056020526000908152604090205460ff1681565b34801561063f57600080fd5b5061068061064e3660046135a5565b60026020908152600092835260408084209091529082529020546001600160a01b03811690600160a01b900460ff1682565b604080516001600160a01b039093168352901515602083015201610327565b3480156106ab57600080fd5b5061028f6106ba3660046135a5565b6120c7565b3480156106cb57600080fd5b506103a46106da366004613557565b60096020526000908152604090205481565b3480156106f857600080fd5b50610680610707366004613557565b6003602052600090815260409020546001600160a01b03811690600160a01b900460ff1682565b34801561073a57600080fd5b506103a47f000000000000000000000000000000000000000000000000000000000000000081565b34801561076e57600080fd5b506103a460085481565b34801561078457600080fd5b5061028f610793366004613572565b612242565b3480156107a457600080fd5b506107cc6107b3366004613525565b6006602052600090815260409020805460019091015482565b60408051928352602083019190915201610327565b3480156107ed57600080fd5b50600e546103d19060ff1681565b61028f610809366004613262565b6123b7565b34801561081a57600080fd5b506103a4600a5481565b34801561083057600080fd5b50600e546103d19062010000900460ff1681565b600b54600160401b90046001600160a01b031633146108a65760405162461bcd60e51b81526020600482015260256024820152600080516020613a528339815191526044820152643a34b7b71760d91b60648201526084015b60405180910390fd5b6001600160a01b03166000908152600d60205260409020805460ff19166001179055565b600b54600160401b90046001600160a01b031633146109275760405162461bcd60e51b81526020600482015260256024820152600080516020613a528339815191526044820152643a34b7b71760d91b606482015260840161089d565b600e8054911515620100000262ff000019909216919091179055565b600b54600160401b90046001600160a01b031633146109a05760405162461bcd60e51b81526020600482015260256024820152600080516020613a528339815191526044820152643a34b7b71760d91b606482015260840161089d565b600b80546001600160a01b03909216600160401b027fffffffff0000000000000000000000000000000000000000ffffffffffffffff909216919091179055565b600e5462010000900460ff1680610a075750336000908152600d602052604090205460ff165b610a795760405162461bcd60e51b815260206004820152602860248201527f4f6e6c792077686974656c69737465642063616e2063616c6c2074686973206660448201527f756e6374696f6e2e000000000000000000000000000000000000000000000000606482015260840161089d565b610a86816040015161204b565b15610ad35760405162461bcd60e51b815260206004820152601560248201527f6e6577526f6f74206973206475706c6963617465640000000000000000000000604482015260640161089d565b6000816020015163ffffffff16118015610af95750600754816020015163ffffffff1611155b8015610b26575060208181015163ffffffff16600090815260039091526040902054600160a01b900460ff165b610b675760405162461bcd60e51b8152602060048201526012602482015271696e76616c696420726f6c6c757053697a6560701b604482015260640161089d565b806020015163ffffffff16600854610b7f919061399e565b15610bd85760405162461bcd60e51b815260206004820152602360248201527f696e76616c696420726f6c6c757053697a652061742063757272656e7420737460448201526261746560e81b606482015260840161089d565b6000610bea60085483602001516125fb565b90506000826020015163ffffffff1667ffffffffffffffff811115610c1157610c11613a2d565b604051908082528060200260200182016040528015610c3a578160200160208202803683370190505b506008549091506000905b846020015163ffffffff16600854610c5d9190613899565b811015610d8757600081815260066020526040902054610cbf5760405162461bcd60e51b815260206004820152601260248201527f696e646578206f7574206f6620626f756e640000000000000000000000000000604482015260640161089d565b60008181526006602052604090205460085481908590610cdf90856138fc565b81518110610cef57610cef613a17565b602002602001018181525050600660008381526020019081526020016000206001015483610d1d9190613899565b6000838152600660205260408120818155600190810191909155600754919450610d46916138fc565b60075560405181907ffe6b097b46a78e08506a3143b6337c2505ba77df76fe05c3663a987395d6341390600090a25080610d7f8161395f565b915050610c45565b5060007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000183604051602001610dbc9190613667565b6040516020818303038152906040528051906020012060001c610ddf919061399e565b905080856060015114610e345760405162461bcd60e51b815260206004820152601060248201527f696e76616c6964206c6561664861736800000000000000000000000000000000604482015260640161089d565b60408051600480825260a0820190925260009160208201608080368337019050509050600a5481600081518110610e6d57610e6d613a17565b602002602001018181525050856040015181600181518110610e9157610e91613a17565b602002602001018181525050856060015181600281518110610eb557610eb5613a17565b6020026020010181815250508481600381518110610ed557610ed5613a17565b6020908102919091018101919091528681015163ffffffff16600090815260039091526040808220548851915163c941764760e01b81526001600160a01b039091169163c941764791610f2d91908690600401613710565b602060405180830381600087803b158015610f4757600080fd5b505af1158015610f5b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f7f9190613245565b905080610fce5760405162461bcd60e51b815260206004820152600d60248201527f696e76616c69642070726f6f6600000000000000000000000000000000000000604482015260640161089d565b610fd784612633565b866020015163ffffffff16600854610fef9190613899565b6008556040870151600a55600b5463ffffffff6401000000008204811691611019911660016138b1565b61102391906139b2565b600b805463ffffffff191663ffffffff9290921691821790556040978801516000918252600960205297902096909655505050505050565b600260005414156110ae5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161089d565b600260008181556040848101515160e08601515163ffffffff808316855260209586528385209082168552909452912054909190600160a01b900460ff166111385760405162461bcd60e51b815260206004820152601260248201527f696e76616c696420692f6f206c656e6774680000000000000000000000000000604482015260640161089d565b8163ffffffff16846060015151146111925760405162461bcd60e51b815260206004820152601860248201527f696e76616c696420736967486173686573206c656e6774680000000000000000604482015260640161089d565b8063ffffffff1684610100015151146111ed5760405162461bcd60e51b815260206004820152601c60248201527f696e76616c6964206f7574526f6c6c757046656573206c656e67746800000000604482015260640161089d565b8063ffffffff1684610160015151146112485760405162461bcd60e51b815260206004820181905260248201527f696e76616c6964206f7574456e637279707465644e6f746573206c656e677468604482015260640161089d565b7f00000000000000000000000000000000000000000000000000000000000000008163ffffffff166007546008546112809190613899565b61128a9190613899565b11156112c75760405162461bcd60e51b815260206004820152600c60248201526b1d1c9959481a5cc8199d5b1b60a21b604482015260640161089d565b60006112d2856126cb565b905060006112e082866127e3565b60808701519091506001600160a01b0382161461133f5760405162461bcd60e51b815260206004820152601160248201527f696e76616c6964207369676e6174757265000000000000000000000000000000604482015260640161089d565b600061134c8460026138d0565b6113578660026138d0565b6113629060046138b1565b61136c91906138b1565b63ffffffff1667ffffffffffffffff81111561138a5761138a613a2d565b6040519080825280602002602001820160405280156113b3578160200160208202803683370190505b5090506113c3876020015161204b565b61140f5760405162461bcd60e51b815260206004820152600c60248201527f696e76616c696420726f6f740000000000000000000000000000000000000000604482015260640161089d565b86602001518160008151811061142757611427613a17565b60200260200101818152505060005b8563ffffffff168163ffffffff161015611599576005600089604001518363ffffffff168151811061146a5761146a613a17565b60209081029190910181015182528101919091526040016000205460ff16156114d55760405162461bcd60e51b815260206004820152601760248201527f746865206e6f746520686173206265656e207370656e74000000000000000000604482015260640161089d565b87604001518163ffffffff16815181106114f1576114f1613a17565b60200260200101518282600161150791906138b1565b63ffffffff168151811061151d5761151d613a17565b60200260200101818152505087606001518163ffffffff168151811061154557611545613a17565b6020026020010151828783600161155c91906138b1565b61156691906138b1565b63ffffffff168151811061157c5761157c613a17565b6020908102919091010152806115918161397a565b915050611436565b506080870151816115ab8760026138d0565b6115b69060016138b1565b63ffffffff16815181106115cc576115cc613a17565b602090810291909101015260a0870151816115e88760026138d0565b6115f39060026138b1565b63ffffffff168151811061160957611609613a17565b602090810291909101015260c0870151816116258760026138d0565b6116309060036138b1565b63ffffffff168151811061164657611646613a17565b60200260200101818152505060005b8463ffffffff168163ffffffff16101561185b57600460008960e001518363ffffffff168151811061168957611689613a17565b60209081029190910181015182528101919091526040016000205460ff16156116f45760405162461bcd60e51b815260206004820152601460248201527f6475706c696361746520636f6d6d69746d656e74000000000000000000000000604482015260640161089d565b600c548861010001518263ffffffff168151811061171457611714613a17565b6020026020010151101561176a5760405162461bcd60e51b815260206004820152601260248201527f726f6c6c75702066656520746f6f206c6f770000000000000000000000000000604482015260640161089d565b8760e001518163ffffffff168151811061178657611786613a17565b6020026020010151828288600261179d91906138d0565b6117a89060046138b1565b6117b291906138b1565b63ffffffff16815181106117c8576117c8613a17565b6020026020010181815250508761010001518163ffffffff16815181106117f1576117f1613a17565b602002602001015182828789600261180991906138d0565b61181391906138b1565b61181e9060046138b1565b61182891906138b1565b63ffffffff168151811061183e5761183e613a17565b6020908102919091010152806118538161397a565b915050611655565b5063ffffffff80861660009081526002602090815260408083209388168352929052818120548951925163c941764760e01b815291926001600160a01b039091169163c9417647916118b1918690600401613710565b602060405180830381600087803b1580156118cb57600080fd5b505af11580156118df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119039190613245565b9050806119525760405162461bcd60e51b815260206004820152601660248201527f696e76616c6964207472616e736163742070726f6f6600000000000000000000604482015260640161089d565b60005b8663ffffffff168163ffffffff161015611a1f576001600560008b604001518463ffffffff168151811061198b5761198b613a17565b6020026020010151815260200190815260200160002060006101000a81548160ff02191690831515021790555088604001518163ffffffff16815181106119d4576119d4613a17565b602002602001015189602001517f3c2372ab6130817bd6b8fc6dbaecae947e84201b49535d358debaa6c34c23ecf60405160405180910390a380611a178161397a565b915050611955565b5060005b8563ffffffff168163ffffffff161015611b0e576001600460008b60e001518463ffffffff1681518110611a5957611a59613a17565b6020026020010151815260200190815260200160002060006101000a81548160ff021916908315150217905550611afc8960e001518263ffffffff1681518110611aa557611aa5613a17565b60200260200101518a61010001518363ffffffff1681518110611aca57611aca613a17565b60200260200101518b61016001518463ffffffff1681518110611aef57611aef613a17565b6020026020010151612807565b80611b068161397a565b915050611a23565b5060a088015115611b2c57611b2c8861012001518960a001516128a2565b60c088015115611b4957611b498861014001518960c001516128a2565b50506001600055505050505050565b600b54600160401b90046001600160a01b03163314611bb55760405162461bcd60e51b81526020600482015260256024820152600080516020613a528339815191526044820152643a34b7b71760d91b606482015260840161089d565b60008111611c055760405162461bcd60e51b815260206004820152601560248201527f696e76616c6964205f6d696e526f6c6c75704665650000000000000000000000604482015260640161089d565b600c55565b600b54600160401b90046001600160a01b03163314611c675760405162461bcd60e51b81526020600482015260256024820152600080516020613a528339815191526044820152643a34b7b71760d91b606482015260840161089d565b600e54610100900460ff1615611ccb5760405162461bcd60e51b8152602060048201526024808201527f566572696669657220757064617465732068617665206265656e2064697361626044820152633632b21760e11b606482015260840161089d565b60008363ffffffff1611611d215760405162461bcd60e51b815260206004820152601460248201527f6e756d496e707574732073686f756c64203e2030000000000000000000000000604482015260640161089d565b6040805180820182526001600160a01b0392831681526001602080830191825263ffffffff9687166000908152600282528481209690971687529490945293209251835492511515600160a01b0274ffffffffffffffffffffffffffffffffffffffffff19909316911617179055565b600b54600160401b90046001600160a01b03163314611dee5760405162461bcd60e51b81526020600482015260256024820152600080516020613a528339815191526044820152643a34b7b71760d91b606482015260840161089d565b600e805460ff1916911515919091179055565b600b54600160401b90046001600160a01b03163314611e5e5760405162461bcd60e51b81526020600482015260256024820152600080516020613a528339815191526044820152643a34b7b71760d91b606482015260840161089d565b600e80549115156101000261ff0019909216919091179055565b600b54600160401b90046001600160a01b03163314611ed55760405162461bcd60e51b81526020600482015260256024820152600080516020613a528339815191526044820152643a34b7b71760d91b606482015260840161089d565b60008163ffffffff1611611f205760405162461bcd60e51b8152602060048201526012602482015271696e76616c696420726f6c6c757053697a6560701b604482015260640161089d565b600e54610100900460ff1615611f845760405162461bcd60e51b8152602060048201526024808201527f566572696669657220757064617465732068617665206265656e2064697361626044820152633632b21760e11b606482015260840161089d565b63ffffffff8116600090815260036020526040902054600160a01b900460ff1615611fca5763ffffffff81166000908152600360205260409020805460ff60a01b191690555b50565b600b54600160401b90046001600160a01b0316331461202a5760405162461bcd60e51b81526020600482015260256024820152600080516020613a528339815191526044820152643a34b7b71760d91b606482015260840161089d565b6001600160a01b03166000908152600d60205260409020805460ff19169055565b600b5460009063ffffffff165b63ffffffff811660009081526009602052604090205483141561207e5750600192915050565b63ffffffff811661209c5750600b54640100000000900463ffffffff165b806120a68161393f565b600b5490925063ffffffff8084169116141590506120585750600092915050565b600b54600160401b90046001600160a01b031633146121245760405162461bcd60e51b81526020600482015260256024820152600080516020613a528339815191526044820152643a34b7b71760d91b606482015260840161089d565b600e54610100900460ff16156121885760405162461bcd60e51b8152602060048201526024808201527f566572696669657220757064617465732068617665206265656e2064697361626044820152633632b21760e11b606482015260840161089d565b60008263ffffffff16116121de5760405162461bcd60e51b815260206004820152601460248201527f6e756d496e707574732073686f756c64203e2030000000000000000000000000604482015260640161089d565b63ffffffff828116600090815260026020908152604080832093851683529290522054600160a01b900460ff161561223e5763ffffffff8083166000908152600260209081526040808320938516835292905220805460ff60a01b191690555b5050565b600b54600160401b90046001600160a01b0316331461229f5760405162461bcd60e51b81526020600482015260256024820152600080516020613a528339815191526044820152643a34b7b71760d91b606482015260840161089d565b600e54610100900460ff16156123035760405162461bcd60e51b8152602060048201526024808201527f566572696669657220757064617465732068617665206265656e2064697361626044820152633632b21760e11b606482015260840161089d565b60008263ffffffff161161234e5760405162461bcd60e51b8152602060048201526012602482015271696e76616c696420726f6c6c757053697a6560701b604482015260640161089d565b6040805180820182526001600160a01b0392831681526001602080830191825263ffffffff90951660009081526003909552919093209251835491511515600160a01b0274ffffffffffffffffffffffffffffffffffffffffff19909216921691909117179055565b600e5460ff161561240a5760405162461bcd60e51b815260206004820152601560248201527f6465706f73697473206172652064697361626c65640000000000000000000000604482015260640161089d565b600c548160a0015110156124605760405162461bcd60e51b815260206004820152601260248201527f726f6c6c75702066656520746f6f206665770000000000000000000000000000604482015260640161089d565b7f00000000000000000000000000000000000000000000000000000000000000006007546008546124919190613899565b106124cd5760405162461bcd60e51b815260206004820152600c60248201526b1d1c9959481a5cc8199d5b1b60a21b604482015260640161089d565b60208082015160009081526004909152604090205460ff161561253c5760405162461bcd60e51b815260206004820152602160248201527f74686520636f6d6d69746d656e7420686173206265656e207375626d697474656044820152601960fa1b606482015260840161089d565b6000612555826040015183600001518460600151612998565b9050808260200151146125aa5760405162461bcd60e51b815260206004820152601960248201527f636f6d6d69746d656e74206861736820696e636f727265637400000000000000604482015260640161089d565b6020808301516000908152600490915260409020805460ff1916600117905560a082015182516125e4916125dd91613899565b6000612b5a565b61223e82602001518360a001518460800151612807565b60011c637fffffff1660005b63ffffffff82161561262c57600183901c925060018263ffffffff16901c9150612607565b5090919050565b604051600090339083908381818185875af1925050503d8060008114612675576040519150601f19603f3d011682016040523d82523d6000602084013e61267a565b606091505b505090508061223e5760405162461bcd60e51b815260206004820152601a60248201527f726f6c6c757020666565207472616e73666572206661696c6564000000000000604482015260640161089d565b6101208101516101408201516040516bffffffffffffffffffffffff19606093841b811660208301529190921b1660348201526000908190604801604051602081830303815290604052905060005b836101600151518163ffffffff16101561278957818461016001518263ffffffff168151811061274c5761274c613a17565b602002602001015160405160200161276592919061369d565b604051602081830303815290604052915080806127819061397a565b91505061271a565b508051602080830191909120604080517f19457468657265756d205369676e6564204d6573736167653a0a33320000000081850152603c8082019390935281518082039093018352605c01905280519101205b9392505050565b60008060006127f28585612bb2565b915091506127ff81612c22565b509392505050565b6040805180820182528481526020808201858152600780546000908152600690935293822092518355516001909201919091556008549154909161284a91613899565b9050600754600161285b9190613899565b60075560405184907ff533f9705aac5020e21695ea3553ac7b6881070d2b6900ab2b1e3050304b5bf990612894908690859087906137ac565b60405180910390a250505050565b34156128f05760405162461bcd60e51b815260206004820152601860248201527f6e6f206d61696e6e657420746f6b656e20616c6c6f7765640000000000000000604482015260640161089d565b6000826001600160a01b03168260405160006040518083038185875af1925050503d806000811461293d576040519150601f19603f3d011682016040523d82523d6000602084013e612942565b606091505b50509050806129935760405162461bcd60e51b815260206004820152600f60248201527f7769746864726177206661696c65640000000000000000000000000000000000604482015260640161089d565b505050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018410612a155760405162461bcd60e51b8152602060048201526024808201527f686173684b2073686f756c64206265206c657373207468616e204649454c445f60448201526353495a4560e01b606482015260840161089d565b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018310612aaa5760405162461bcd60e51b815260206004820152602660248201527f72616e646f6d532073686f756c64206265206c657373207468616e204649454c60448201527f445f53495a450000000000000000000000000000000000000000000000000000606482015260840161089d565b60015460408051606081018252868152602081018690526fffffffffffffffffffffffffffffffff85168183015290516304b98e1d60e31b81526001600160a01b03909216916325cc70e891612b02916004016136cc565b60206040518083038186803b158015612b1a57600080fd5b505afa158015612b2e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b52919061353e565b949350505050565b612b648183613899565b341461223e5760405162461bcd60e51b815260206004820152601260248201527f696e73756666696369656e7420746f6b656e0000000000000000000000000000604482015260640161089d565b600080825160411415612be95760208301516040840151606085015160001a612bdd87828585612ddd565b94509450505050612c1b565b825160401415612c135760208301516040840151612c08868383612eca565b935093505050612c1b565b506000905060025b9250929050565b6000816004811115612c3657612c36613a01565b1415612c3f5750565b6001816004811115612c5357612c53613a01565b1415612ca15760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161089d565b6002816004811115612cb557612cb5613a01565b1415612d035760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161089d565b6003816004811115612d1757612d17613a01565b1415612d705760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b606482015260840161089d565b6004816004811115612d8457612d84613a01565b1415611fca5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b606482015260840161089d565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115612e145750600090506003612ec1565b8460ff16601b14158015612e2c57508460ff16601c14155b15612e3d5750600090506004612ec1565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015612e91573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116612eba57600060019250925050612ec1565b9150600090505b94509492505050565b6000807f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831681612f0060ff86901c601b613899565b9050612f0e87828885612ddd565b935093505050935093915050565b80356001600160a01b0381168114612f3357600080fd5b919050565b600082601f830112612f4957600080fd5b81356020612f5e612f5983613875565b613844565b80838252828201915082860187848660051b8901011115612f7e57600080fd5b6000805b86811015612fc157823567ffffffffffffffff811115612fa0578283fd5b612fae8b88838d0101613094565b8652509385019391850191600101612f82565b509198975050505050505050565b600082601f830112612fe057600080fd5b612fe86137d4565b808385604086011115612ffa57600080fd5b60005b600281101561301c578135845260209384019390910190600101612ffd565b509095945050505050565b600082601f83011261303857600080fd5b81356020613048612f5983613875565b80838252828201915082860187848660051b890101111561306857600080fd5b60005b858110156130875781358452928401929084019060010161306b565b5090979650505050505050565b600082601f8301126130a557600080fd5b813567ffffffffffffffff8111156130bf576130bf613a2d565b6130d2601f8201601f1916602001613844565b8181528460208386010111156130e757600080fd5b816020850160208301376000918101602001919091529392505050565b60006040828403121561311657600080fd5b6040516040810181811067ffffffffffffffff8211171561313957613139613a2d565b604052823581526020928301359281019290925250919050565b600081830361010081121561316757600080fd5b6040516060810181811067ffffffffffffffff8211171561318a5761318a613a2d565b60405291508161319a8585613104565b81526080603f19830112156131ae57600080fd5b6131b66137d4565b91506131c58560408601612fcf565b82526131d48560808601612fcf565b60208301528160208201526131ec8560c08601613104565b6040820152505092915050565b803563ffffffff81168114612f3357600080fd5b60006020828403121561321f57600080fd5b6127dc82612f1c565b60006020828403121561323a57600080fd5b81356127dc81613a43565b60006020828403121561325757600080fd5b81516127dc81613a43565b60006020828403121561327457600080fd5b813567ffffffffffffffff8082111561328c57600080fd5b9083019060c082860312156132a057600080fd5b6132a86137fd565b82358152602083013560208201526040830135604082015260608301356fffffffffffffffffffffffffffffffff811681146132e357600080fd5b60608201526080830135828111156132fa57600080fd5b61330687828601613094565b60808301525060a083013560a082015280935050505092915050565b6000610160828403121561333557600080fd5b6040516080810181811067ffffffffffffffff8211171561335857613358613a2d565b6040526133658484613153565b815261337461010084016131f9565b6020820152610120830135604082015261014090920135606083015250919050565b600080604083850312156133a957600080fd5b823567ffffffffffffffff808211156133c157600080fd5b9084019061026082870312156133d657600080fd5b6133de613820565b6133e88784613153565b8152610100808401356020830152610120808501358481111561340a57600080fd5b6134168a828801613027565b604085015250610140808601358581111561343057600080fd5b61343c8b828901613027565b60608601525061016080870135608086015261018087013560a08601526101a087013560c08601526101c08701358681111561347757600080fd5b6134838c828a01613027565b60e0870152506101e08701358681111561349c57600080fd5b6134a88c828a01613027565b85870152506134ba6102008801612f1c565b838601526134cb6102208801612f1c565b828601526102408701359350858411156134e457600080fd5b6134f08b858901612f38565b90850152509195505050602085013591508082111561350e57600080fd5b5061351b85828601613094565b9150509250929050565b60006020828403121561353757600080fd5b5035919050565b60006020828403121561355057600080fd5b5051919050565b60006020828403121561356957600080fd5b6127dc826131f9565b6000806040838503121561358557600080fd5b61358e836131f9565b915061359c60208401612f1c565b90509250929050565b600080604083850312156135b857600080fd5b6135c1836131f9565b915061359c602084016131f9565b6000806000606084860312156135e457600080fd5b6135ed846131f9565b92506135fb602085016131f9565b915061360960408501612f1c565b90509250925092565b8060005b6002811015613635578151845260209384019390910190600101613616565b50505050565b60008151808452613653816020860160208601613913565b601f01601f19169290920160200192915050565b815160009082906020808601845b8381101561369157815185529382019390820190600101613675565b50929695505050505050565b600083516136af818460208801613913565b8351908301906136c3818360208801613913565b01949350505050565b60608101818360005b60038110156136f45781518352602092830192909101906001016136d5565b50505092915050565b6020815260006127dc602083018461363b565b600061012080830161372d84875180518252602090810151910152565b602080870151613741604087018251613612565b8101516137516080870182613612565b506040870151805160c08701526020015160e08601526101008501929092528451908190526101408401918581019160005b8181101561379f57835185529382019392820192600101613783565b5092979650505050505050565b8381528260208201526060604082015260006137cb606083018461363b565b95945050505050565b6040805190810167ffffffffffffffff811182821017156137f7576137f7613a2d565b60405290565b60405160c0810167ffffffffffffffff811182821017156137f7576137f7613a2d565b604051610180810167ffffffffffffffff811182821017156137f7576137f7613a2d565b604051601f8201601f1916810167ffffffffffffffff8111828210171561386d5761386d613a2d565b604052919050565b600067ffffffffffffffff82111561388f5761388f613a2d565b5060051b60200190565b600082198211156138ac576138ac6139d5565b500190565b600063ffffffff8083168185168083038211156136c3576136c36139d5565b600063ffffffff808316818516818304811182151516156138f3576138f36139d5565b02949350505050565b60008282101561390e5761390e6139d5565b500390565b60005b8381101561392e578181015183820152602001613916565b838111156136355750506000910152565b600063ffffffff821680613955576139556139d5565b6000190192915050565b6000600019821415613973576139736139d5565b5060010190565b600063ffffffff80831681811415613994576139946139d5565b6001019392505050565b6000826139ad576139ad6139eb565b500690565b600063ffffffff808416806139c9576139c96139eb565b92169190910692915050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b8015158114611fca57600080fdfe4f6e6c79206f70657261746f722063616e2063616c6c20746869732066756e63a2646970667358221220a76308d7e64d6289605b353539731989348b4727261f03b3143ee742e5276f2a64736f6c63430008070033';

type MystikoV2WithLoopMainConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MystikoV2WithLoopMainConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MystikoV2WithLoopMain__factory extends ContractFactory {
  constructor(...args: MystikoV2WithLoopMainConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'MystikoV2WithLoopMain';
  }

  deploy(
    _treeHeight: BigNumberish,
    _rootHistoryLength: BigNumberish,
    _minRollupFee: BigNumberish,
    _hasher3: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<MystikoV2WithLoopMain> {
    return super.deploy(
      _treeHeight,
      _rootHistoryLength,
      _minRollupFee,
      _hasher3,
      overrides || {},
    ) as Promise<MystikoV2WithLoopMain>;
  }
  getDeployTransaction(
    _treeHeight: BigNumberish,
    _rootHistoryLength: BigNumberish,
    _minRollupFee: BigNumberish,
    _hasher3: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(
      _treeHeight,
      _rootHistoryLength,
      _minRollupFee,
      _hasher3,
      overrides || {},
    );
  }
  attach(address: string): MystikoV2WithLoopMain {
    return super.attach(address) as MystikoV2WithLoopMain;
  }
  connect(signer: Signer): MystikoV2WithLoopMain__factory {
    return super.connect(signer) as MystikoV2WithLoopMain__factory;
  }
  static readonly contractName: 'MystikoV2WithLoopMain';
  public readonly contractName: 'MystikoV2WithLoopMain';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MystikoV2WithLoopMainInterface {
    return new utils.Interface(_abi) as MystikoV2WithLoopMainInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MystikoV2WithLoopMain {
    return new Contract(address, _abi, signerOrProvider) as MystikoV2WithLoopMain;
  }
}
